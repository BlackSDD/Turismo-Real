// let debug = (isProd) => {
//     window.process = {
//         env: {
//             NODE_ENV: "testing",
//             JMG_ENV: "testing"
//         }
//     }

//     if (!isProd) {
//         window.process.env.NODE_ENV = "production";
//         window.process.env.JMG_ENV = "PROD";
//     }
// }

var apiurl = function (url = "", mark = "test-", envName = "JMG_ENV") {

    let $this = this;
    if (!this) {
        $this = {};
    }
    $this.default = {
        url: url,
        mark: mark,
        envName: envName
    }

    $this.newUrl = () => {
        try {
            let markstr = "";
            const isIPadress =
                /(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])/
                    .test(url);
            const islocalhost = url.toLocaleLowerCase().includes("localhost") ? true : false;
            let testUrl = false;
            if (typeof window != "undefined" && typeof window.location != "undefined") {
                let is_test, islocalhost, islocalip;
                is_test = window.location.host.toLocaleLowerCase().substring(0, 4).indexOf(mark.substring(0, 4).toLocaleLowerCase()) == 0 ? true : false;
                islocalhost = window.location.host.toLocaleLowerCase().indexOf("localhost") == 0 ? true : false;
                islocalip = window.location.host.toLocaleLowerCase().indexOf("127.0.0.") == 0 ? true : false;
                if (is_test || islocalhost || islocalip) testUrl = true;
            }
            let minipro = false;
            if (typeof wx != "undefined") {
                try {
                    minipro = wx.getSystemInfoSync().platform == 'devtools' ? true : false;
                } catch (error) {

                }
            }

            if (!isIPadress && !islocalhost) {
                if (testUrl || minipro) markstr = mark;
            }
            let newUrl = "";
            let httpType = "http://";
            if (typeof window != "undefined" && typeof window.location != "undefined") { //存在地址栏的情况
                httpType = window.location.origin.includes("https://") ? "https://" : "http://";
            }

            // let u = this.default.url.toLocaleLowerCase().includes("http://") || url.toLocaleLowerCase().includes("https://");
            // if (u) { //包含Http://或Https://
            //     let httpType = this.default.url.toLocaleLowerCase().includes("https://") ? "https://" : "http://";
            //     let OrginUrl = this.default.url.replace(/http(s?):\/\//, "");
            //     newUrl = httpType + markstr + OrginUrl;
            // } else
            //  newUrl = httpType + markstr + url;

            let OrginUrl = $this.default.url.replace(/http(s?):\/\//, "");
            newUrl = httpType + markstr + OrginUrl;

            return newUrl
        } catch (error) {
            throw error;
        }
    };

    return $this.newUrl();

}
apiurl.prototype.toString = function () {
    return this.newUrl();
}