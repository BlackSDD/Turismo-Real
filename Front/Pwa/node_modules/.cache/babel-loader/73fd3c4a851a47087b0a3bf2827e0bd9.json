{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPacketComplete = isPacketComplete;\nexports.packetLength = packetLength;\nexports.Packet = exports.OFFSET = exports.TYPE = exports.HEADER_LENGTH = void 0;\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nvar HEADER_LENGTH = 8;\nexports.HEADER_LENGTH = HEADER_LENGTH;\nvar TYPE = {\n  SQL_BATCH: 0x01,\n  RPC_REQUEST: 0x03,\n  TABULAR_RESULT: 0x04,\n  ATTENTION: 0x06,\n  BULK_LOAD: 0x07,\n  TRANSACTION_MANAGER: 0x0E,\n  LOGIN7: 0x10,\n  NTLMAUTH_PKT: 0x11,\n  PRELOGIN: 0x12,\n  FEDAUTH_TOKEN: 0x08\n};\nexports.TYPE = TYPE;\nvar typeByValue = {};\n\nfor (var name in TYPE) {\n  typeByValue[TYPE[name]] = name;\n}\n\nvar STATUS = {\n  NORMAL: 0x00,\n  EOM: 0x01,\n  IGNORE: 0x02,\n  RESETCONNECTION: 0x08,\n  RESETCONNECTIONSKIPTRAN: 0x10\n};\nvar OFFSET = {\n  Type: 0,\n  Status: 1,\n  Length: 2,\n  SPID: 4,\n  PacketID: 6,\n  Window: 7\n};\nexports.OFFSET = OFFSET;\nvar DEFAULT_SPID = 0;\nvar DEFAULT_PACKETID = 1;\nvar DEFAULT_WINDOW = 0;\nvar NL = '\\n';\n\nvar Packet = /*#__PURE__*/function () {\n  function Packet(typeOrBuffer) {\n    _classCallCheck(this, Packet);\n\n    this.buffer = void 0;\n\n    if (typeOrBuffer instanceof Buffer) {\n      this.buffer = typeOrBuffer;\n    } else {\n      var type = typeOrBuffer;\n      this.buffer = Buffer.alloc(HEADER_LENGTH, 0);\n      this.buffer.writeUInt8(type, OFFSET.Type);\n      this.buffer.writeUInt8(STATUS.NORMAL, OFFSET.Status);\n      this.buffer.writeUInt16BE(DEFAULT_SPID, OFFSET.SPID);\n      this.buffer.writeUInt8(DEFAULT_PACKETID, OFFSET.PacketID);\n      this.buffer.writeUInt8(DEFAULT_WINDOW, OFFSET.Window);\n      this.setLength();\n    }\n  }\n\n  _createClass(Packet, [{\n    key: \"setLength\",\n    value: function setLength() {\n      this.buffer.writeUInt16BE(this.buffer.length, OFFSET.Length);\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return this.buffer.readUInt16BE(OFFSET.Length);\n    }\n  }, {\n    key: \"resetConnection\",\n    value: function resetConnection(reset) {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n\n      if (reset) {\n        status |= STATUS.RESETCONNECTION;\n      } else {\n        status &= 0xFF - STATUS.RESETCONNECTION;\n      }\n\n      this.buffer.writeUInt8(status, OFFSET.Status);\n    }\n  }, {\n    key: \"last\",\n    value: function last(_last) {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n\n      if (arguments.length > 0) {\n        if (_last) {\n          status |= STATUS.EOM;\n        } else {\n          status &= 0xFF - STATUS.EOM;\n        }\n\n        this.buffer.writeUInt8(status, OFFSET.Status);\n      }\n\n      return this.isLast();\n    }\n  }, {\n    key: \"ignore\",\n    value: function ignore(last) {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n\n      if (last) {\n        status |= STATUS.IGNORE;\n      } else {\n        status &= 0xFF - STATUS.IGNORE;\n      }\n\n      this.buffer.writeUInt8(status, OFFSET.Status);\n    }\n  }, {\n    key: \"isLast\",\n    value: function isLast() {\n      return !!(this.buffer.readUInt8(OFFSET.Status) & STATUS.EOM);\n    }\n  }, {\n    key: \"packetId\",\n    value: function packetId(_packetId) {\n      if (_packetId) {\n        this.buffer.writeUInt8(_packetId % 256, OFFSET.PacketID);\n      }\n\n      return this.buffer.readUInt8(OFFSET.PacketID);\n    }\n  }, {\n    key: \"addData\",\n    value: function addData(data) {\n      this.buffer = Buffer.concat([this.buffer, data]);\n      this.setLength();\n      return this;\n    }\n  }, {\n    key: \"data\",\n    value: function data() {\n      return this.buffer.slice(HEADER_LENGTH);\n    }\n  }, {\n    key: \"type\",\n    value: function type() {\n      return this.buffer.readUInt8(OFFSET.Type);\n    }\n  }, {\n    key: \"statusAsString\",\n    value: function statusAsString() {\n      var status = this.buffer.readUInt8(OFFSET.Status);\n      var statuses = [];\n\n      for (var _name in STATUS) {\n        var value = STATUS[_name];\n\n        if (status & value) {\n          statuses.push(_name);\n        } else {\n          statuses.push(undefined);\n        }\n      }\n\n      return statuses.join(' ').trim();\n    }\n  }, {\n    key: \"headerToString\",\n    value: function headerToString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var text = (0, _sprintfJs.sprintf)('type:0x%02X(%s), status:0x%02X(%s), length:0x%04X, spid:0x%04X, packetId:0x%02X, window:0x%02X', this.buffer.readUInt8(OFFSET.Type), typeByValue[this.buffer.readUInt8(OFFSET.Type)], this.buffer.readUInt8(OFFSET.Status), this.statusAsString(), this.buffer.readUInt16BE(OFFSET.Length), this.buffer.readUInt16BE(OFFSET.SPID), this.buffer.readUInt8(OFFSET.PacketID), this.buffer.readUInt8(OFFSET.Window));\n      return indent + text;\n    }\n  }, {\n    key: \"dataToString\",\n    value: function dataToString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var BYTES_PER_GROUP = 0x04;\n      var CHARS_PER_GROUP = 0x08;\n      var BYTES_PER_LINE = 0x20;\n      var data = this.data();\n      var dataDump = '';\n      var chars = '';\n\n      for (var offset = 0; offset < data.length; offset++) {\n        if (offset % BYTES_PER_LINE === 0) {\n          dataDump += indent;\n          dataDump += (0, _sprintfJs.sprintf)('%04X  ', offset);\n        }\n\n        if (data[offset] < 0x20 || data[offset] > 0x7E) {\n          chars += '.';\n\n          if ((offset + 1) % CHARS_PER_GROUP === 0 && !((offset + 1) % BYTES_PER_LINE === 0)) {\n            chars += ' ';\n          }\n        } else {\n          chars += String.fromCharCode(data[offset]);\n        }\n\n        if (data[offset] != null) {\n          dataDump += (0, _sprintfJs.sprintf)('%02X', data[offset]);\n        }\n\n        if ((offset + 1) % BYTES_PER_GROUP === 0 && !((offset + 1) % BYTES_PER_LINE === 0)) {\n          dataDump += ' ';\n        }\n\n        if ((offset + 1) % BYTES_PER_LINE === 0) {\n          dataDump += '  ' + chars;\n          chars = '';\n\n          if (offset < data.length - 1) {\n            dataDump += NL;\n          }\n        }\n      }\n\n      if (chars.length) {\n        dataDump += '  ' + chars;\n      }\n\n      return dataDump;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return this.headerToString(indent) + '\\n' + this.dataToString(indent + indent);\n    }\n  }, {\n    key: \"payloadString\",\n    value: function payloadString() {\n      return '';\n    }\n  }]);\n\n  return Packet;\n}();\n\nexports.Packet = Packet;\n\nfunction isPacketComplete(potentialPacketBuffer) {\n  if (potentialPacketBuffer.length < HEADER_LENGTH) {\n    return false;\n  } else {\n    return potentialPacketBuffer.length >= potentialPacketBuffer.readUInt16BE(OFFSET.Length);\n  }\n}\n\nfunction packetLength(potentialPacketBuffer) {\n  return potentialPacketBuffer.readUInt16BE(OFFSET.Length);\n}","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/packet.js"],"names":["Object","defineProperty","exports","value","isPacketComplete","packetLength","Packet","OFFSET","TYPE","HEADER_LENGTH","_sprintfJs","require","SQL_BATCH","RPC_REQUEST","TABULAR_RESULT","ATTENTION","BULK_LOAD","TRANSACTION_MANAGER","LOGIN7","NTLMAUTH_PKT","PRELOGIN","FEDAUTH_TOKEN","typeByValue","name","STATUS","NORMAL","EOM","IGNORE","RESETCONNECTION","RESETCONNECTIONSKIPTRAN","Type","Status","Length","SPID","PacketID","Window","DEFAULT_SPID","DEFAULT_PACKETID","DEFAULT_WINDOW","NL","typeOrBuffer","buffer","Buffer","type","alloc","writeUInt8","writeUInt16BE","setLength","length","readUInt16BE","reset","status","readUInt8","last","arguments","isLast","packetId","data","concat","slice","statuses","push","undefined","join","trim","indent","text","sprintf","statusAsString","BYTES_PER_GROUP","CHARS_PER_GROUP","BYTES_PER_LINE","dataDump","chars","offset","String","fromCharCode","headerToString","dataToString","potentialPacketBuffer"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.isPacketComplete = isPacketComplete;\r\nexports.packetLength = packetLength;\r\nexports.Packet = exports.OFFSET = exports.TYPE = exports.HEADER_LENGTH = void 0;\r\n\r\nvar _sprintfJs = require(\"sprintf-js\");\r\n\r\nconst HEADER_LENGTH = 8;\r\nexports.HEADER_LENGTH = HEADER_LENGTH;\r\nconst TYPE = {\r\n  SQL_BATCH: 0x01,\r\n  RPC_REQUEST: 0x03,\r\n  TABULAR_RESULT: 0x04,\r\n  ATTENTION: 0x06,\r\n  BULK_LOAD: 0x07,\r\n  TRANSACTION_MANAGER: 0x0E,\r\n  LOGIN7: 0x10,\r\n  NTLMAUTH_PKT: 0x11,\r\n  PRELOGIN: 0x12,\r\n  FEDAUTH_TOKEN: 0x08\r\n};\r\nexports.TYPE = TYPE;\r\nconst typeByValue = {};\r\n\r\nfor (const name in TYPE) {\r\n  typeByValue[TYPE[name]] = name;\r\n}\r\n\r\nconst STATUS = {\r\n  NORMAL: 0x00,\r\n  EOM: 0x01,\r\n  IGNORE: 0x02,\r\n  RESETCONNECTION: 0x08,\r\n  RESETCONNECTIONSKIPTRAN: 0x10\r\n};\r\nconst OFFSET = {\r\n  Type: 0,\r\n  Status: 1,\r\n  Length: 2,\r\n  SPID: 4,\r\n  PacketID: 6,\r\n  Window: 7\r\n};\r\nexports.OFFSET = OFFSET;\r\nconst DEFAULT_SPID = 0;\r\nconst DEFAULT_PACKETID = 1;\r\nconst DEFAULT_WINDOW = 0;\r\nconst NL = '\\n';\r\n\r\nclass Packet {\r\n  constructor(typeOrBuffer) {\r\n    this.buffer = void 0;\r\n\r\n    if (typeOrBuffer instanceof Buffer) {\r\n      this.buffer = typeOrBuffer;\r\n    } else {\r\n      const type = typeOrBuffer;\r\n      this.buffer = Buffer.alloc(HEADER_LENGTH, 0);\r\n      this.buffer.writeUInt8(type, OFFSET.Type);\r\n      this.buffer.writeUInt8(STATUS.NORMAL, OFFSET.Status);\r\n      this.buffer.writeUInt16BE(DEFAULT_SPID, OFFSET.SPID);\r\n      this.buffer.writeUInt8(DEFAULT_PACKETID, OFFSET.PacketID);\r\n      this.buffer.writeUInt8(DEFAULT_WINDOW, OFFSET.Window);\r\n      this.setLength();\r\n    }\r\n  }\r\n\r\n  setLength() {\r\n    this.buffer.writeUInt16BE(this.buffer.length, OFFSET.Length);\r\n  }\r\n\r\n  length() {\r\n    return this.buffer.readUInt16BE(OFFSET.Length);\r\n  }\r\n\r\n  resetConnection(reset) {\r\n    let status = this.buffer.readUInt8(OFFSET.Status);\r\n\r\n    if (reset) {\r\n      status |= STATUS.RESETCONNECTION;\r\n    } else {\r\n      status &= 0xFF - STATUS.RESETCONNECTION;\r\n    }\r\n\r\n    this.buffer.writeUInt8(status, OFFSET.Status);\r\n  }\r\n\r\n  last(last) {\r\n    let status = this.buffer.readUInt8(OFFSET.Status);\r\n\r\n    if (arguments.length > 0) {\r\n      if (last) {\r\n        status |= STATUS.EOM;\r\n      } else {\r\n        status &= 0xFF - STATUS.EOM;\r\n      }\r\n\r\n      this.buffer.writeUInt8(status, OFFSET.Status);\r\n    }\r\n\r\n    return this.isLast();\r\n  }\r\n\r\n  ignore(last) {\r\n    let status = this.buffer.readUInt8(OFFSET.Status);\r\n\r\n    if (last) {\r\n      status |= STATUS.IGNORE;\r\n    } else {\r\n      status &= 0xFF - STATUS.IGNORE;\r\n    }\r\n\r\n    this.buffer.writeUInt8(status, OFFSET.Status);\r\n  }\r\n\r\n  isLast() {\r\n    return !!(this.buffer.readUInt8(OFFSET.Status) & STATUS.EOM);\r\n  }\r\n\r\n  packetId(packetId) {\r\n    if (packetId) {\r\n      this.buffer.writeUInt8(packetId % 256, OFFSET.PacketID);\r\n    }\r\n\r\n    return this.buffer.readUInt8(OFFSET.PacketID);\r\n  }\r\n\r\n  addData(data) {\r\n    this.buffer = Buffer.concat([this.buffer, data]);\r\n    this.setLength();\r\n    return this;\r\n  }\r\n\r\n  data() {\r\n    return this.buffer.slice(HEADER_LENGTH);\r\n  }\r\n\r\n  type() {\r\n    return this.buffer.readUInt8(OFFSET.Type);\r\n  }\r\n\r\n  statusAsString() {\r\n    const status = this.buffer.readUInt8(OFFSET.Status);\r\n    const statuses = [];\r\n\r\n    for (const name in STATUS) {\r\n      const value = STATUS[name];\r\n\r\n      if (status & value) {\r\n        statuses.push(name);\r\n      } else {\r\n        statuses.push(undefined);\r\n      }\r\n    }\r\n\r\n    return statuses.join(' ').trim();\r\n  }\r\n\r\n  headerToString(indent = '') {\r\n    const text = (0, _sprintfJs.sprintf)('type:0x%02X(%s), status:0x%02X(%s), length:0x%04X, spid:0x%04X, packetId:0x%02X, window:0x%02X', this.buffer.readUInt8(OFFSET.Type), typeByValue[this.buffer.readUInt8(OFFSET.Type)], this.buffer.readUInt8(OFFSET.Status), this.statusAsString(), this.buffer.readUInt16BE(OFFSET.Length), this.buffer.readUInt16BE(OFFSET.SPID), this.buffer.readUInt8(OFFSET.PacketID), this.buffer.readUInt8(OFFSET.Window));\r\n    return indent + text;\r\n  }\r\n\r\n  dataToString(indent = '') {\r\n    const BYTES_PER_GROUP = 0x04;\r\n    const CHARS_PER_GROUP = 0x08;\r\n    const BYTES_PER_LINE = 0x20;\r\n    const data = this.data();\r\n    let dataDump = '';\r\n    let chars = '';\r\n\r\n    for (let offset = 0; offset < data.length; offset++) {\r\n      if (offset % BYTES_PER_LINE === 0) {\r\n        dataDump += indent;\r\n        dataDump += (0, _sprintfJs.sprintf)('%04X  ', offset);\r\n      }\r\n\r\n      if (data[offset] < 0x20 || data[offset] > 0x7E) {\r\n        chars += '.';\r\n\r\n        if ((offset + 1) % CHARS_PER_GROUP === 0 && !((offset + 1) % BYTES_PER_LINE === 0)) {\r\n          chars += ' ';\r\n        }\r\n      } else {\r\n        chars += String.fromCharCode(data[offset]);\r\n      }\r\n\r\n      if (data[offset] != null) {\r\n        dataDump += (0, _sprintfJs.sprintf)('%02X', data[offset]);\r\n      }\r\n\r\n      if ((offset + 1) % BYTES_PER_GROUP === 0 && !((offset + 1) % BYTES_PER_LINE === 0)) {\r\n        dataDump += ' ';\r\n      }\r\n\r\n      if ((offset + 1) % BYTES_PER_LINE === 0) {\r\n        dataDump += '  ' + chars;\r\n        chars = '';\r\n\r\n        if (offset < data.length - 1) {\r\n          dataDump += NL;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (chars.length) {\r\n      dataDump += '  ' + chars;\r\n    }\r\n\r\n    return dataDump;\r\n  }\r\n\r\n  toString(indent = '') {\r\n    return this.headerToString(indent) + '\\n' + this.dataToString(indent + indent);\r\n  }\r\n\r\n  payloadString() {\r\n    return '';\r\n  }\r\n\r\n}\r\n\r\nexports.Packet = Packet;\r\n\r\nfunction isPacketComplete(potentialPacketBuffer) {\r\n  if (potentialPacketBuffer.length < HEADER_LENGTH) {\r\n    return false;\r\n  } else {\r\n    return potentialPacketBuffer.length >= potentialPacketBuffer.readUInt16BE(OFFSET.Length);\r\n  }\r\n}\r\n\r\nfunction packetLength(potentialPacketBuffer) {\r\n  return potentialPacketBuffer.readUInt16BE(OFFSET.Length);\r\n}"]},"metadata":{},"sourceType":"script"}