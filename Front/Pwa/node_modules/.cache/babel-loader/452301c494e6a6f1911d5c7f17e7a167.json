{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst TVP_ROW_TOKEN = Buffer.from([0x01]);\nconst TVP_END_TOKEN = Buffer.from([0x00]);\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst TVP = {\n  id: 0xF3,\n  type: 'TVPTYPE',\n  name: 'TVP',\n  declaration: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    return value.name + ' readonly';\n  },\n\n  generateTypeInfo(parameter) {\n    var _parameter$value$sche, _parameter$value, _parameter$value$name, _parameter$value2;\n\n    const databaseName = '';\n    const schema = (_parameter$value$sche = (_parameter$value = parameter.value) === null || _parameter$value === void 0 ? void 0 : _parameter$value.schema) !== null && _parameter$value$sche !== void 0 ? _parameter$value$sche : '';\n    const typeName = (_parameter$value$name = (_parameter$value2 = parameter.value) === null || _parameter$value2 === void 0 ? void 0 : _parameter$value2.name) !== null && _parameter$value$name !== void 0 ? _parameter$value$name : '';\n    const bufferLength = 1 + 1 + Buffer.byteLength(databaseName, 'ucs2') + 1 + Buffer.byteLength(schema, 'ucs2') + 1 + Buffer.byteLength(typeName, 'ucs2');\n    const buffer = new _writableTrackingBuffer.default(bufferLength, 'ucs2');\n    buffer.writeUInt8(this.id);\n    buffer.writeBVarchar(databaseName);\n    buffer.writeBVarchar(schema);\n    buffer.writeBVarchar(typeName);\n    return buffer.data;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const {\n      columns\n    } = parameter.value;\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(columns.length, 0);\n    return buffer;\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      yield TVP_END_TOKEN;\n      yield TVP_END_TOKEN;\n      return;\n    }\n\n    const {\n      columns,\n      rows\n    } = parameter.value;\n\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const column = columns[i];\n      const buff = Buffer.alloc(6); // UserType\n\n      buff.writeUInt32LE(0x00000000, 0); // Flags\n\n      buff.writeUInt16LE(0x0000, 4);\n      yield buff; // TYPE_INFO\n\n      yield column.type.generateTypeInfo(column); // ColName\n\n      yield Buffer.from([0x00]);\n    }\n\n    yield TVP_END_TOKEN;\n\n    for (let i = 0, length = rows.length; i < length; i++) {\n      yield TVP_ROW_TOKEN;\n      const row = rows[i];\n\n      for (let k = 0, len2 = row.length; k < len2; k++) {\n        const column = columns[k];\n        const value = row[k];\n        const param = {\n          value: value,\n          length: column.length,\n          scale: column.scale,\n          precision: column.precision\n        }; // TvpColumnData\n\n        yield column.type.generateParameterLength(param, options);\n        yield* column.type.generateParameterData(param, options);\n      }\n    }\n\n    yield TVP_END_TOKEN;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'object') {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.columns)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.rows)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    return value;\n  }\n};\nvar _default = TVP;\nexports.default = _default;\nmodule.exports = TVP;","map":{"version":3,"sources":["C:/Users/matia/Documents/Git/Turismo-Real/front/pwa/node_modules/mssql/node_modules/tedious/lib/data-types/tvp.js"],"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","obj","__esModule","TVP_ROW_TOKEN","Buffer","from","TVP_END_TOKEN","NULL_LENGTH","TVP","id","type","name","declaration","parameter","generateTypeInfo","_parameter$value$sche","_parameter$value","_parameter$value$name","_parameter$value2","databaseName","schema","typeName","bufferLength","byteLength","buffer","writeUInt8","writeBVarchar","data","generateParameterLength","options","columns","alloc","writeUInt16LE","length","generateParameterData","rows","i","len","column","buff","writeUInt32LE","row","k","len2","param","scale","precision","validate","TypeError","Array","isArray","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,uBAAuB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,6CAAD,CAAR,CAApD;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,MAAME,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAtB;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAtB;AACA,MAAME,WAAW,GAAGH,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,CAAZ,CAApB;AACA,MAAMG,GAAG,GAAG;AACVC,EAAAA,EAAE,EAAE,IADM;AAEVC,EAAAA,IAAI,EAAE,SAFI;AAGVC,EAAAA,IAAI,EAAE,KAHI;AAIVC,EAAAA,WAAW,EAAE,UAAUC,SAAV,EAAqB;AAChC,UAAMjB,KAAK,GAAGiB,SAAS,CAACjB,KAAxB,CADgC,CACD;;AAE/B,WAAOA,KAAK,CAACe,IAAN,GAAa,WAApB;AACD,GARS;;AAUVG,EAAAA,gBAAgB,CAACD,SAAD,EAAY;AAC1B,QAAIE,qBAAJ,EAA2BC,gBAA3B,EAA6CC,qBAA7C,EAAoEC,iBAApE;;AAEA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,MAAM,GAAG,CAACL,qBAAqB,GAAG,CAACC,gBAAgB,GAAGH,SAAS,CAACjB,KAA9B,MAAyC,IAAzC,IAAiDoB,gBAAgB,KAAK,KAAK,CAA3E,GAA+E,KAAK,CAApF,GAAwFA,gBAAgB,CAACI,MAAlI,MAA8I,IAA9I,IAAsJL,qBAAqB,KAAK,KAAK,CAArL,GAAyLA,qBAAzL,GAAiN,EAAhO;AACA,UAAMM,QAAQ,GAAG,CAACJ,qBAAqB,GAAG,CAACC,iBAAiB,GAAGL,SAAS,CAACjB,KAA/B,MAA0C,IAA1C,IAAkDsB,iBAAiB,KAAK,KAAK,CAA7E,GAAiF,KAAK,CAAtF,GAA0FA,iBAAiB,CAACP,IAArI,MAA+I,IAA/I,IAAuJM,qBAAqB,KAAK,KAAK,CAAtL,GAA0LA,qBAA1L,GAAkN,EAAnO;AACA,UAAMK,YAAY,GAAG,IAAI,CAAJ,GAAQlB,MAAM,CAACmB,UAAP,CAAkBJ,YAAlB,EAAgC,MAAhC,CAAR,GAAkD,CAAlD,GAAsDf,MAAM,CAACmB,UAAP,CAAkBH,MAAlB,EAA0B,MAA1B,CAAtD,GAA0F,CAA1F,GAA8FhB,MAAM,CAACmB,UAAP,CAAkBF,QAAlB,EAA4B,MAA5B,CAAnH;AACA,UAAMG,MAAM,GAAG,IAAI1B,uBAAuB,CAACD,OAA5B,CAAoCyB,YAApC,EAAkD,MAAlD,CAAf;AACAE,IAAAA,MAAM,CAACC,UAAP,CAAkB,KAAKhB,EAAvB;AACAe,IAAAA,MAAM,CAACE,aAAP,CAAqBP,YAArB;AACAK,IAAAA,MAAM,CAACE,aAAP,CAAqBN,MAArB;AACAI,IAAAA,MAAM,CAACE,aAAP,CAAqBL,QAArB;AACA,WAAOG,MAAM,CAACG,IAAd;AACD,GAvBS;;AAyBVC,EAAAA,uBAAuB,CAACf,SAAD,EAAYgB,OAAZ,EAAqB;AAC1C,QAAIhB,SAAS,CAACjB,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,aAAOW,WAAP;AACD;;AAED,UAAM;AACJuB,MAAAA;AADI,QAEFjB,SAAS,CAACjB,KAFd;AAGA,UAAM4B,MAAM,GAAGpB,MAAM,CAAC2B,KAAP,CAAa,CAAb,CAAf;AACAP,IAAAA,MAAM,CAACQ,aAAP,CAAqBF,OAAO,CAACG,MAA7B,EAAqC,CAArC;AACA,WAAOT,MAAP;AACD,GApCS;;AAsCV,GAACU,qBAAD,CAAuBrB,SAAvB,EAAkCgB,OAAlC,EAA2C;AACzC,QAAIhB,SAAS,CAACjB,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,YAAMU,aAAN;AACA,YAAMA,aAAN;AACA;AACD;;AAED,UAAM;AACJwB,MAAAA,OADI;AAEJK,MAAAA;AAFI,QAGFtB,SAAS,CAACjB,KAHd;;AAKA,SAAK,IAAIwC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGP,OAAO,CAACG,MAA9B,EAAsCG,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,YAAME,MAAM,GAAGR,OAAO,CAACM,CAAD,CAAtB;AACA,YAAMG,IAAI,GAAGnC,MAAM,CAAC2B,KAAP,CAAa,CAAb,CAAb,CAFkD,CAEpB;;AAE9BQ,MAAAA,IAAI,CAACC,aAAL,CAAmB,UAAnB,EAA+B,CAA/B,EAJkD,CAIf;;AAEnCD,MAAAA,IAAI,CAACP,aAAL,CAAmB,MAAnB,EAA2B,CAA3B;AACA,YAAMO,IAAN,CAPkD,CAOtC;;AAEZ,YAAMD,MAAM,CAAC5B,IAAP,CAAYI,gBAAZ,CAA6BwB,MAA7B,CAAN,CATkD,CASN;;AAE5C,YAAMlC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAN;AACD;;AAED,UAAMC,aAAN;;AAEA,SAAK,IAAI8B,CAAC,GAAG,CAAR,EAAWH,MAAM,GAAGE,IAAI,CAACF,MAA9B,EAAsCG,CAAC,GAAGH,MAA1C,EAAkDG,CAAC,EAAnD,EAAuD;AACrD,YAAMjC,aAAN;AACA,YAAMsC,GAAG,GAAGN,IAAI,CAACC,CAAD,CAAhB;;AAEA,WAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGF,GAAG,CAACR,MAA3B,EAAmCS,CAAC,GAAGC,IAAvC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,cAAMJ,MAAM,GAAGR,OAAO,CAACY,CAAD,CAAtB;AACA,cAAM9C,KAAK,GAAG6C,GAAG,CAACC,CAAD,CAAjB;AACA,cAAME,KAAK,GAAG;AACZhD,UAAAA,KAAK,EAAEA,KADK;AAEZqC,UAAAA,MAAM,EAAEK,MAAM,CAACL,MAFH;AAGZY,UAAAA,KAAK,EAAEP,MAAM,CAACO,KAHF;AAIZC,UAAAA,SAAS,EAAER,MAAM,CAACQ;AAJN,SAAd,CAHgD,CAQ7C;;AAEH,cAAMR,MAAM,CAAC5B,IAAP,CAAYkB,uBAAZ,CAAoCgB,KAApC,EAA2Cf,OAA3C,CAAN;AACA,eAAOS,MAAM,CAAC5B,IAAP,CAAYwB,qBAAZ,CAAkCU,KAAlC,EAAyCf,OAAzC,CAAP;AACD;AACF;;AAED,UAAMvB,aAAN;AACD,GAtFS;;AAwFVyC,EAAAA,QAAQ,EAAE,UAAUnD,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,YAAM,IAAIoD,SAAJ,CAAc,gBAAd,CAAN;AACD;;AAED,QAAI,CAACC,KAAK,CAACC,OAAN,CAActD,KAAK,CAACkC,OAApB,CAAL,EAAmC;AACjC,YAAM,IAAIkB,SAAJ,CAAc,gBAAd,CAAN;AACD;;AAED,QAAI,CAACC,KAAK,CAACC,OAAN,CAActD,KAAK,CAACuC,IAApB,CAAL,EAAgC;AAC9B,YAAM,IAAIa,SAAJ,CAAc,gBAAd,CAAN;AACD;;AAED,WAAOpD,KAAP;AACD;AA1GS,CAAZ;AA4GA,IAAIuD,QAAQ,GAAG3C,GAAf;AACAb,OAAO,CAACE,OAAR,GAAkBsD,QAAlB;AACAC,MAAM,CAACzD,OAAP,GAAiBa,GAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst TVP_ROW_TOKEN = Buffer.from([0x01]);\nconst TVP_END_TOKEN = Buffer.from([0x00]);\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nconst TVP = {\n  id: 0xF3,\n  type: 'TVPTYPE',\n  name: 'TVP',\n  declaration: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    return value.name + ' readonly';\n  },\n\n  generateTypeInfo(parameter) {\n    var _parameter$value$sche, _parameter$value, _parameter$value$name, _parameter$value2;\n\n    const databaseName = '';\n    const schema = (_parameter$value$sche = (_parameter$value = parameter.value) === null || _parameter$value === void 0 ? void 0 : _parameter$value.schema) !== null && _parameter$value$sche !== void 0 ? _parameter$value$sche : '';\n    const typeName = (_parameter$value$name = (_parameter$value2 = parameter.value) === null || _parameter$value2 === void 0 ? void 0 : _parameter$value2.name) !== null && _parameter$value$name !== void 0 ? _parameter$value$name : '';\n    const bufferLength = 1 + 1 + Buffer.byteLength(databaseName, 'ucs2') + 1 + Buffer.byteLength(schema, 'ucs2') + 1 + Buffer.byteLength(typeName, 'ucs2');\n    const buffer = new _writableTrackingBuffer.default(bufferLength, 'ucs2');\n    buffer.writeUInt8(this.id);\n    buffer.writeBVarchar(databaseName);\n    buffer.writeBVarchar(schema);\n    buffer.writeBVarchar(typeName);\n    return buffer.data;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const {\n      columns\n    } = parameter.value;\n    const buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(columns.length, 0);\n    return buffer;\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      yield TVP_END_TOKEN;\n      yield TVP_END_TOKEN;\n      return;\n    }\n\n    const {\n      columns,\n      rows\n    } = parameter.value;\n\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const column = columns[i];\n      const buff = Buffer.alloc(6); // UserType\n\n      buff.writeUInt32LE(0x00000000, 0); // Flags\n\n      buff.writeUInt16LE(0x0000, 4);\n      yield buff; // TYPE_INFO\n\n      yield column.type.generateTypeInfo(column); // ColName\n\n      yield Buffer.from([0x00]);\n    }\n\n    yield TVP_END_TOKEN;\n\n    for (let i = 0, length = rows.length; i < length; i++) {\n      yield TVP_ROW_TOKEN;\n      const row = rows[i];\n\n      for (let k = 0, len2 = row.length; k < len2; k++) {\n        const column = columns[k];\n        const value = row[k];\n        const param = {\n          value: value,\n          length: column.length,\n          scale: column.scale,\n          precision: column.precision\n        }; // TvpColumnData\n\n        yield column.type.generateParameterLength(param, options);\n        yield* column.type.generateParameterData(param, options);\n      }\n    }\n\n    yield TVP_END_TOKEN;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'object') {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.columns)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    if (!Array.isArray(value.rows)) {\n      throw new TypeError('Invalid table.');\n    }\n\n    return value;\n  }\n};\nvar _default = TVP;\nexports.default = _default;\nmodule.exports = TVP;"]},"metadata":{},"sourceType":"script"}