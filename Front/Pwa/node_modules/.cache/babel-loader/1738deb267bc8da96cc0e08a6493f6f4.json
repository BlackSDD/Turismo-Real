{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\nvar Text = {\n  id: 0x23,\n  type: 'TEXT',\n  name: 'Text',\n  hasTableName: true,\n  declaration: function declaration() {\n    return 'text';\n  },\n  resolveLength: function resolveLength(parameter) {\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (value != null) {\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter, _options) {\n    var buffer = Buffer.alloc(10);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length, 1); // TODO: Collation handling\n\n    return buffer;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    var buffer = Buffer.alloc(4);\n    buffer.writeInt32LE(parameter.value.length, 0);\n    return buffer;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parameter.value == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return Buffer.from(parameter.value.toString(), 'ascii');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        throw new TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = Text;\nexports.default = _default;\nmodule.exports = Text;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/data-types/text.js"],"names":["Object","defineProperty","exports","value","default","NULL_LENGTH","Buffer","from","Text","id","type","name","hasTableName","declaration","resolveLength","parameter","length","generateTypeInfo","_options","buffer","alloc","writeUInt8","writeInt32LE","generateParameterLength","options","generateParameterData","toString","validate","TypeError","_default","module"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,IAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAZ,CAApB;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,IADO;AAEXC,EAAAA,IAAI,EAAE,MAFK;AAGXC,EAAAA,IAAI,EAAE,MAHK;AAIXC,EAAAA,YAAY,EAAE,IAJH;AAKXC,EAAAA,WAAW,EAAE,uBAAY;AACvB,WAAO,MAAP;AACD,GAPU;AAQXC,EAAAA,aAAa,EAAE,uBAAUC,SAAV,EAAqB;AAClC,QAAMZ,KAAK,GAAGY,SAAS,CAACZ,KAAxB,CADkC,CACH;;AAE/B,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAOA,KAAK,CAACa,MAAb;AACD,KAFD,MAEO;AACL,aAAO,CAAC,CAAR;AACD;AACF,GAhBU;AAkBXC,EAAAA,gBAlBW,4BAkBMF,SAlBN,EAkBiBG,QAlBjB,EAkB2B;AACpC,QAAMC,MAAM,GAAGb,MAAM,CAACc,KAAP,CAAa,EAAb,CAAf;AACAD,IAAAA,MAAM,CAACE,UAAP,CAAkB,KAAKZ,EAAvB,EAA2B,CAA3B;AACAU,IAAAA,MAAM,CAACG,YAAP,CAAoBP,SAAS,CAACC,MAA9B,EAAsC,CAAtC,EAHoC,CAGM;;AAE1C,WAAOG,MAAP;AACD,GAxBU;AA0BXI,EAAAA,uBA1BW,mCA0BaR,SA1Bb,EA0BwBS,OA1BxB,EA0BiC;AAC1C,QAAIT,SAAS,CAACZ,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,aAAOE,WAAP;AACD;;AAED,QAAMc,MAAM,GAAGb,MAAM,CAACc,KAAP,CAAa,CAAb,CAAf;AACAD,IAAAA,MAAM,CAACG,YAAP,CAAoBP,SAAS,CAACZ,KAAV,CAAgBa,MAApC,EAA4C,CAA5C;AACA,WAAOG,MAAP;AACD,GAlCU;AAoCXM,EAAAA,qBAAqB,wCAAE,+BAAWV,SAAX,EAAsBS,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjBT,SAAS,CAACZ,KAAV,IAAmB,IADF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAKrB,mBAAMG,MAAM,CAACC,IAAP,CAAYQ,SAAS,CAACZ,KAAV,CAAgBuB,QAAhB,EAAZ,EAAwC,OAAxC,CAAN;;AALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,CApCV;AA2CXC,EAAAA,QAAQ,EAAE,kBAAUxB,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI,OAAOA,KAAK,CAACuB,QAAb,KAA0B,UAA9B,EAA0C;AACxC,cAAM,IAAIE,SAAJ,CAAc,iBAAd,CAAN;AACD;;AAEDzB,MAAAA,KAAK,GAAGA,KAAK,CAACuB,QAAN,EAAR;AACD;;AAED,WAAOvB,KAAP;AACD;AAzDU,CAAb;AA2DA,IAAI0B,QAAQ,GAAGrB,IAAf;AACAN,OAAO,CAACE,OAAR,GAAkByB,QAAlB;AACAC,MAAM,CAAC5B,OAAP,GAAiBM,IAAjB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\r\nconst Text = {\r\n  id: 0x23,\r\n  type: 'TEXT',\r\n  name: 'Text',\r\n  hasTableName: true,\r\n  declaration: function () {\r\n    return 'text';\r\n  },\r\n  resolveLength: function (parameter) {\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    if (value != null) {\r\n      return value.length;\r\n    } else {\r\n      return -1;\r\n    }\r\n  },\r\n\r\n  generateTypeInfo(parameter, _options) {\r\n    const buffer = Buffer.alloc(10);\r\n    buffer.writeUInt8(this.id, 0);\r\n    buffer.writeInt32LE(parameter.length, 1); // TODO: Collation handling\r\n\r\n    return buffer;\r\n  },\r\n\r\n  generateParameterLength(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return NULL_LENGTH;\r\n    }\r\n\r\n    const buffer = Buffer.alloc(4);\r\n    buffer.writeInt32LE(parameter.value.length, 0);\r\n    return buffer;\r\n  },\r\n\r\n  generateParameterData: function* (parameter, options) {\r\n    if (parameter.value == null) {\r\n      return;\r\n    }\r\n\r\n    yield Buffer.from(parameter.value.toString(), 'ascii');\r\n  },\r\n  validate: function (value) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      if (typeof value.toString !== 'function') {\r\n        throw new TypeError('Invalid string.');\r\n      }\r\n\r\n      value = value.toString();\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\nvar _default = Text;\r\nexports.default = _default;\r\nmodule.exports = Text;"]},"metadata":{},"sourceType":"script"}