{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nvar NChar = {\n  id: 0xEF,\n  type: 'NCHAR',\n  name: 'NChar',\n  maximumLength: 4000,\n  declaration: function declaration(parameter) {\n    // const value = parameter.value as null | string | { toString(): string };\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    var length;\n\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (parameter.value != null) {\n      length = value.toString().length || 1;\n    } else if (parameter.value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    if (length < this.maximumLength) {\n      return 'nchar(' + length + ')';\n    } else {\n      return 'nchar(' + this.maximumLength + ')';\n    }\n  },\n  resolveLength: function resolveLength(parameter) {\n    // const value = parameter.value as null | string | { toString(): string };\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (parameter.value != null) {\n      if (Buffer.isBuffer(parameter.value)) {\n        return parameter.value.length / 2 || 1;\n      } else {\n        return value.toString().length || 1;\n      }\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter) {\n    var buffer = Buffer.alloc(8);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeUInt16LE(parameter.length * 2, 1);\n    return buffer;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    var value = parameter.value;\n\n    if (value instanceof Buffer) {\n      var length = value.length;\n      var buffer = Buffer.alloc(2);\n      buffer.writeUInt16LE(length, 0);\n      return buffer;\n    } else {\n      var _length = Buffer.byteLength(value.toString(), 'ucs2');\n\n      var _buffer = Buffer.alloc(2);\n\n      _buffer.writeUInt16LE(_length, 0);\n\n      return _buffer;\n    }\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var value;\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parameter.value == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            value = parameter.value;\n\n            if (!(value instanceof Buffer)) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return value;\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return Buffer.from(value, 'ucs2');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        throw new TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = NChar;\nexports.default = _default;\nmodule.exports = NChar;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/data-types/nchar.js"],"names":["Object","defineProperty","exports","value","default","NULL_LENGTH","Buffer","from","NChar","id","type","name","maximumLength","declaration","parameter","length","toString","output","resolveLength","isBuffer","generateTypeInfo","buffer","alloc","writeUInt8","writeUInt16LE","generateParameterLength","options","byteLength","generateParameterData","validate","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\r\nconst NChar = {\r\n  id: 0xEF,\r\n  type: 'NCHAR',\r\n  name: 'NChar',\r\n  maximumLength: 4000,\r\n  declaration: function (parameter) {\r\n    // const value = parameter.value as null | string | { toString(): string };\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    let length;\r\n\r\n    if (parameter.length) {\r\n      length = parameter.length;\r\n    } else if (parameter.value != null) {\r\n      length = value.toString().length || 1;\r\n    } else if (parameter.value === null && !parameter.output) {\r\n      length = 1;\r\n    } else {\r\n      length = this.maximumLength;\r\n    }\r\n\r\n    if (length < this.maximumLength) {\r\n      return 'nchar(' + length + ')';\r\n    } else {\r\n      return 'nchar(' + this.maximumLength + ')';\r\n    }\r\n  },\r\n  resolveLength: function (parameter) {\r\n    // const value = parameter.value as null | string | { toString(): string };\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    if (parameter.length != null) {\r\n      return parameter.length;\r\n    } else if (parameter.value != null) {\r\n      if (Buffer.isBuffer(parameter.value)) {\r\n        return parameter.value.length / 2 || 1;\r\n      } else {\r\n        return value.toString().length || 1;\r\n      }\r\n    } else {\r\n      return this.maximumLength;\r\n    }\r\n  },\r\n  generateTypeInfo: function (parameter) {\r\n    const buffer = Buffer.alloc(8);\r\n    buffer.writeUInt8(this.id, 0);\r\n    buffer.writeUInt16LE(parameter.length * 2, 1);\r\n    return buffer;\r\n  },\r\n\r\n  generateParameterLength(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return NULL_LENGTH;\r\n    }\r\n\r\n    const {\r\n      value\r\n    } = parameter;\r\n\r\n    if (value instanceof Buffer) {\r\n      const length = value.length;\r\n      const buffer = Buffer.alloc(2);\r\n      buffer.writeUInt16LE(length, 0);\r\n      return buffer;\r\n    } else {\r\n      const length = Buffer.byteLength(value.toString(), 'ucs2');\r\n      const buffer = Buffer.alloc(2);\r\n      buffer.writeUInt16LE(length, 0);\r\n      return buffer;\r\n    }\r\n  },\r\n\r\n  *generateParameterData(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return;\r\n    }\r\n\r\n    const value = parameter.value;\r\n\r\n    if (value instanceof Buffer) {\r\n      yield value;\r\n    } else {\r\n      yield Buffer.from(value, 'ucs2');\r\n    }\r\n  },\r\n\r\n  validate: function (value) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      if (typeof value.toString !== 'function') {\r\n        throw new TypeError('Invalid string.');\r\n      }\r\n\r\n      value = value.toString();\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\nvar _default = NChar;\r\nexports.default = _default;\r\nmodule.exports = NChar;"]},"metadata":{},"sourceType":"script"}