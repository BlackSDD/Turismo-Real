{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _intn = _interopRequireDefault(require(\"./intn\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DATA_LENGTH = Buffer.from([0x01]);\nvar NULL_LENGTH = Buffer.from([0x00]);\nvar TinyInt = {\n  id: 0x30,\n  type: 'INT1',\n  name: 'TinyInt',\n  declaration: function declaration() {\n    return 'tinyint';\n  },\n  generateTypeInfo: function generateTypeInfo() {\n    return Buffer.from([_intn.default.id, 0x01]);\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var buffer;\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parameter.value == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            buffer = Buffer.alloc(1);\n            buffer.writeUInt8(Number(parameter.value), 0);\n            _context.next = 6;\n            return buffer;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid number.');\n    }\n\n    if (value < 0 || value > 255) {\n      throw new TypeError('Value must be between 0 and 255, inclusive.');\n    }\n\n    return value | 0;\n  }\n};\nvar _default = TinyInt;\nexports.default = _default;\nmodule.exports = TinyInt;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/data-types/tinyint.js"],"names":["Object","defineProperty","exports","value","default","_intn","_interopRequireDefault","require","obj","__esModule","DATA_LENGTH","Buffer","from","NULL_LENGTH","TinyInt","id","type","name","declaration","generateTypeInfo","generateParameterLength","parameter","options","generateParameterData","buffer","alloc","writeUInt8","Number","validate","isNaN","TypeError","_default","module"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,IAAME,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AACA,IAAMC,WAAW,GAAGF,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAApB;AACA,IAAME,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE,IADU;AAEdC,EAAAA,IAAI,EAAE,MAFQ;AAGdC,EAAAA,IAAI,EAAE,SAHQ;AAIdC,EAAAA,WAAW,EAAE,uBAAY;AACvB,WAAO,SAAP;AACD,GANa;AAQdC,EAAAA,gBARc,8BAQK;AACjB,WAAOR,MAAM,CAACC,IAAP,CAAY,CAACP,KAAK,CAACD,OAAN,CAAcW,EAAf,EAAmB,IAAnB,CAAZ,CAAP;AACD,GAVa;AAYdK,EAAAA,uBAZc,mCAYUC,SAZV,EAYqBC,OAZrB,EAY8B;AAC1C,QAAID,SAAS,CAAClB,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,aAAOU,WAAP;AACD;;AAED,WAAOH,WAAP;AACD,GAlBa;AAoBba,EAAAA,qBApBa,uEAoBSF,SApBT,EAoBoBC,OApBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAqBRD,SAAS,CAAClB,KAAV,IAAmB,IArBX;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAyBNqB,YAAAA,MAzBM,GAyBGb,MAAM,CAACc,KAAP,CAAa,CAAb,CAzBH;AA0BZD,YAAAA,MAAM,CAACE,UAAP,CAAkBC,MAAM,CAACN,SAAS,CAAClB,KAAX,CAAxB,EAA2C,CAA3C;AA1BY;AA2BZ,mBAAMqB,MAAN;;AA3BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BdI,EAAAA,QAAQ,EAAE,kBAAUzB,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,MAAAA,KAAK,GAAGwB,MAAM,CAACxB,KAAD,CAAd;AACD;;AAED,QAAI0B,KAAK,CAAC1B,KAAD,CAAT,EAAkB;AAChB,YAAM,IAAI2B,SAAJ,CAAc,iBAAd,CAAN;AACD;;AAED,QAAI3B,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,GAAzB,EAA8B;AAC5B,YAAM,IAAI2B,SAAJ,CAAc,6CAAd,CAAN;AACD;;AAED,WAAO3B,KAAK,GAAG,CAAf;AACD;AAhDa,CAAhB;AAkDA,IAAI4B,QAAQ,GAAGjB,OAAf;AACAZ,OAAO,CAACE,OAAR,GAAkB2B,QAAlB;AACAC,MAAM,CAAC9B,OAAP,GAAiBY,OAAjB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _intn = _interopRequireDefault(require(\"./intn\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nconst DATA_LENGTH = Buffer.from([0x01]);\r\nconst NULL_LENGTH = Buffer.from([0x00]);\r\nconst TinyInt = {\r\n  id: 0x30,\r\n  type: 'INT1',\r\n  name: 'TinyInt',\r\n  declaration: function () {\r\n    return 'tinyint';\r\n  },\r\n\r\n  generateTypeInfo() {\r\n    return Buffer.from([_intn.default.id, 0x01]);\r\n  },\r\n\r\n  generateParameterLength(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return NULL_LENGTH;\r\n    }\r\n\r\n    return DATA_LENGTH;\r\n  },\r\n\r\n  *generateParameterData(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return;\r\n    }\r\n\r\n    const buffer = Buffer.alloc(1);\r\n    buffer.writeUInt8(Number(parameter.value), 0);\r\n    yield buffer;\r\n  },\r\n\r\n  validate: function (value) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof value !== 'number') {\r\n      value = Number(value);\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n      throw new TypeError('Invalid number.');\r\n    }\r\n\r\n    if (value < 0 || value > 255) {\r\n      throw new TypeError('Value must be between 0 and 255, inclusive.');\r\n    }\r\n\r\n    return value | 0;\r\n  }\r\n};\r\nvar _default = TinyInt;\r\nexports.default = _default;\r\nmodule.exports = TinyInt;"]},"metadata":{},"sourceType":"script"}