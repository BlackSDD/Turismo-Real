{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _createClass = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connector = exports.SequentialConnectionStrategy = exports.ParallelConnectionStrategy = void 0;\n\nvar _net = _interopRequireDefault(require(\"net\"));\n\nvar _dns = _interopRequireDefault(require(\"dns\"));\n\nvar punycode = _interopRequireWildcard(require(\"punycode\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar AbortError = /*#__PURE__*/function (_Error) {\n  _inherits(AbortError, _Error);\n\n  var _super = _createSuper(AbortError);\n\n  function AbortError() {\n    var _this;\n\n    _classCallCheck(this, AbortError);\n\n    _this = _super.call(this, 'The operation was aborted');\n    _this.code = void 0;\n    _this.code = 'ABORT_ERR';\n    _this.name = 'AbortError';\n    return _this;\n  }\n\n  return AbortError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ParallelConnectionStrategy = /*#__PURE__*/function () {\n  function ParallelConnectionStrategy(addresses, signal, options) {\n    _classCallCheck(this, ParallelConnectionStrategy);\n\n    this.addresses = void 0;\n    this.options = void 0;\n    this.signal = void 0;\n    this.addresses = addresses;\n    this.options = options;\n    this.signal = signal;\n  }\n\n  _createClass(ParallelConnectionStrategy, [{\n    key: \"connect\",\n    value: function connect(callback) {\n      var signal = this.signal;\n\n      if (signal.aborted) {\n        return process.nextTick(callback, new AbortError());\n      }\n\n      var addresses = this.addresses;\n      var sockets = new Array(addresses.length);\n      var errorCount = 0;\n\n      function onError(_err) {\n        errorCount += 1;\n        this.removeListener('error', onError);\n        this.removeListener('connect', onConnect);\n        this.destroy();\n\n        if (errorCount === addresses.length) {\n          signal.removeEventListener('abort', onAbort);\n          callback(new Error('Could not connect (parallel)'));\n        }\n      }\n\n      function onConnect() {\n        signal.removeEventListener('abort', onAbort);\n\n        for (var j = 0; j < sockets.length; j++) {\n          var socket = sockets[j];\n\n          if (this === socket) {\n            continue;\n          }\n\n          socket.removeListener('error', onError);\n          socket.removeListener('connect', onConnect);\n          socket.destroy();\n        }\n\n        callback(null, this);\n      }\n\n      var onAbort = function onAbort() {\n        for (var j = 0; j < sockets.length; j++) {\n          var socket = sockets[j];\n          socket.removeListener('error', onError);\n          socket.removeListener('connect', onConnect);\n          socket.destroy();\n        }\n\n        callback(new AbortError());\n      };\n\n      for (var i = 0, len = addresses.length; i < len; i++) {\n        var socket = sockets[i] = _net.default.connect(_objectSpread(_objectSpread({}, this.options), {}, {\n          host: addresses[i].address,\n          family: addresses[i].family\n        }));\n\n        socket.on('error', onError);\n        socket.on('connect', onConnect);\n      }\n\n      signal.addEventListener('abort', onAbort, {\n        once: true\n      });\n    }\n  }]);\n\n  return ParallelConnectionStrategy;\n}();\n\nexports.ParallelConnectionStrategy = ParallelConnectionStrategy;\n\nvar SequentialConnectionStrategy = /*#__PURE__*/function () {\n  function SequentialConnectionStrategy(addresses, signal, options) {\n    _classCallCheck(this, SequentialConnectionStrategy);\n\n    this.addresses = void 0;\n    this.options = void 0;\n    this.signal = void 0;\n    this.addresses = addresses;\n    this.options = options;\n    this.signal = signal;\n  }\n\n  _createClass(SequentialConnectionStrategy, [{\n    key: \"connect\",\n    value: function connect(callback) {\n      var _this2 = this;\n\n      if (this.signal.aborted) {\n        return process.nextTick(callback, new AbortError());\n      }\n\n      var next = this.addresses.shift();\n\n      if (!next) {\n        return callback(new Error('Could not connect (sequence)'));\n      }\n\n      var socket = _net.default.connect(_objectSpread(_objectSpread({}, this.options), {}, {\n        host: next.address,\n        family: next.family\n      }));\n\n      var onAbort = function onAbort() {\n        socket.removeListener('error', onError);\n        socket.removeListener('connect', onConnect);\n        socket.destroy();\n        callback(new AbortError());\n      };\n\n      var onError = function onError(_err) {\n        _this2.signal.removeEventListener('abort', onAbort);\n\n        socket.removeListener('error', onError);\n        socket.removeListener('connect', onConnect);\n        socket.destroy();\n\n        _this2.connect(callback);\n      };\n\n      var onConnect = function onConnect() {\n        _this2.signal.removeEventListener('abort', onAbort);\n\n        socket.removeListener('error', onError);\n        socket.removeListener('connect', onConnect);\n        callback(null, socket);\n      };\n\n      this.signal.addEventListener('abort', onAbort, {\n        once: true\n      });\n      socket.on('error', onError);\n      socket.on('connect', onConnect);\n    }\n  }]);\n\n  return SequentialConnectionStrategy;\n}();\n\nexports.SequentialConnectionStrategy = SequentialConnectionStrategy;\n\nvar Connector = /*#__PURE__*/function () {\n  function Connector(options, signal, multiSubnetFailover) {\n    _classCallCheck(this, Connector);\n\n    var _options$lookup;\n\n    this.options = void 0;\n    this.multiSubnetFailover = void 0;\n    this.lookup = void 0;\n    this.signal = void 0;\n    this.options = options;\n    this.lookup = (_options$lookup = options.lookup) !== null && _options$lookup !== void 0 ? _options$lookup : _dns.default.lookup;\n    this.signal = signal;\n    this.multiSubnetFailover = multiSubnetFailover;\n  }\n\n  _createClass(Connector, [{\n    key: \"execute\",\n    value: function execute(cb) {\n      var _this3 = this;\n\n      if (this.signal.aborted) {\n        return process.nextTick(cb, new AbortError());\n      }\n\n      this.lookupAllAddresses(this.options.host, function (err, addresses) {\n        if (_this3.signal.aborted) {\n          return cb(new AbortError());\n        }\n\n        if (err) {\n          return cb(err);\n        }\n\n        if (_this3.multiSubnetFailover) {\n          new ParallelConnectionStrategy(addresses, _this3.signal, _this3.options).connect(cb);\n        } else {\n          new SequentialConnectionStrategy(addresses, _this3.signal, _this3.options).connect(cb);\n        }\n      });\n    }\n  }, {\n    key: \"lookupAllAddresses\",\n    value: function lookupAllAddresses(host, callback) {\n      if (_net.default.isIPv6(host)) {\n        process.nextTick(callback, null, [{\n          address: host,\n          family: 6\n        }]);\n      } else if (_net.default.isIPv4(host)) {\n        process.nextTick(callback, null, [{\n          address: host,\n          family: 4\n        }]);\n      } else {\n        this.lookup.call(null, punycode.toASCII(host), {\n          all: true\n        }, callback);\n      }\n    }\n  }]);\n\n  return Connector;\n}();\n\nexports.Connector = Connector;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/connector.js"],"names":["Object","defineProperty","exports","value","Connector","SequentialConnectionStrategy","ParallelConnectionStrategy","_net","_interopRequireDefault","require","_dns","punycode","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","AbortError","code","name","Error","addresses","signal","options","callback","aborted","process","nextTick","sockets","Array","length","errorCount","onError","_err","removeListener","onConnect","destroy","removeEventListener","onAbort","j","socket","i","len","connect","host","address","family","on","addEventListener","once","next","shift","multiSubnetFailover","_options$lookup","lookup","cb","lookupAllAddresses","err","isIPv6","isIPv4","toASCII","all"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.Connector = exports.SequentialConnectionStrategy = exports.ParallelConnectionStrategy = void 0;\r\n\r\nvar _net = _interopRequireDefault(require(\"net\"));\r\n\r\nvar _dns = _interopRequireDefault(require(\"dns\"));\r\n\r\nvar punycode = _interopRequireWildcard(require(\"punycode\"));\r\n\r\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\r\n\r\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nclass AbortError extends Error {\r\n  constructor() {\r\n    super('The operation was aborted');\r\n    this.code = void 0;\r\n    this.code = 'ABORT_ERR';\r\n    this.name = 'AbortError';\r\n  }\r\n\r\n}\r\n\r\nclass ParallelConnectionStrategy {\r\n  constructor(addresses, signal, options) {\r\n    this.addresses = void 0;\r\n    this.options = void 0;\r\n    this.signal = void 0;\r\n    this.addresses = addresses;\r\n    this.options = options;\r\n    this.signal = signal;\r\n  }\r\n\r\n  connect(callback) {\r\n    const signal = this.signal;\r\n\r\n    if (signal.aborted) {\r\n      return process.nextTick(callback, new AbortError());\r\n    }\r\n\r\n    const addresses = this.addresses;\r\n    const sockets = new Array(addresses.length);\r\n    let errorCount = 0;\r\n\r\n    function onError(_err) {\r\n      errorCount += 1;\r\n      this.removeListener('error', onError);\r\n      this.removeListener('connect', onConnect);\r\n      this.destroy();\r\n\r\n      if (errorCount === addresses.length) {\r\n        signal.removeEventListener('abort', onAbort);\r\n        callback(new Error('Could not connect (parallel)'));\r\n      }\r\n    }\r\n\r\n    function onConnect() {\r\n      signal.removeEventListener('abort', onAbort);\r\n\r\n      for (let j = 0; j < sockets.length; j++) {\r\n        const socket = sockets[j];\r\n\r\n        if (this === socket) {\r\n          continue;\r\n        }\r\n\r\n        socket.removeListener('error', onError);\r\n        socket.removeListener('connect', onConnect);\r\n        socket.destroy();\r\n      }\r\n\r\n      callback(null, this);\r\n    }\r\n\r\n    const onAbort = () => {\r\n      for (let j = 0; j < sockets.length; j++) {\r\n        const socket = sockets[j];\r\n        socket.removeListener('error', onError);\r\n        socket.removeListener('connect', onConnect);\r\n        socket.destroy();\r\n      }\r\n\r\n      callback(new AbortError());\r\n    };\r\n\r\n    for (let i = 0, len = addresses.length; i < len; i++) {\r\n      const socket = sockets[i] = _net.default.connect({ ...this.options,\r\n        host: addresses[i].address,\r\n        family: addresses[i].family\r\n      });\r\n\r\n      socket.on('error', onError);\r\n      socket.on('connect', onConnect);\r\n    }\r\n\r\n    signal.addEventListener('abort', onAbort, {\r\n      once: true\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexports.ParallelConnectionStrategy = ParallelConnectionStrategy;\r\n\r\nclass SequentialConnectionStrategy {\r\n  constructor(addresses, signal, options) {\r\n    this.addresses = void 0;\r\n    this.options = void 0;\r\n    this.signal = void 0;\r\n    this.addresses = addresses;\r\n    this.options = options;\r\n    this.signal = signal;\r\n  }\r\n\r\n  connect(callback) {\r\n    if (this.signal.aborted) {\r\n      return process.nextTick(callback, new AbortError());\r\n    }\r\n\r\n    const next = this.addresses.shift();\r\n\r\n    if (!next) {\r\n      return callback(new Error('Could not connect (sequence)'));\r\n    }\r\n\r\n    const socket = _net.default.connect({ ...this.options,\r\n      host: next.address,\r\n      family: next.family\r\n    });\r\n\r\n    const onAbort = () => {\r\n      socket.removeListener('error', onError);\r\n      socket.removeListener('connect', onConnect);\r\n      socket.destroy();\r\n      callback(new AbortError());\r\n    };\r\n\r\n    const onError = _err => {\r\n      this.signal.removeEventListener('abort', onAbort);\r\n      socket.removeListener('error', onError);\r\n      socket.removeListener('connect', onConnect);\r\n      socket.destroy();\r\n      this.connect(callback);\r\n    };\r\n\r\n    const onConnect = () => {\r\n      this.signal.removeEventListener('abort', onAbort);\r\n      socket.removeListener('error', onError);\r\n      socket.removeListener('connect', onConnect);\r\n      callback(null, socket);\r\n    };\r\n\r\n    this.signal.addEventListener('abort', onAbort, {\r\n      once: true\r\n    });\r\n    socket.on('error', onError);\r\n    socket.on('connect', onConnect);\r\n  }\r\n\r\n}\r\n\r\nexports.SequentialConnectionStrategy = SequentialConnectionStrategy;\r\n\r\nclass Connector {\r\n  constructor(options, signal, multiSubnetFailover) {\r\n    var _options$lookup;\r\n\r\n    this.options = void 0;\r\n    this.multiSubnetFailover = void 0;\r\n    this.lookup = void 0;\r\n    this.signal = void 0;\r\n    this.options = options;\r\n    this.lookup = (_options$lookup = options.lookup) !== null && _options$lookup !== void 0 ? _options$lookup : _dns.default.lookup;\r\n    this.signal = signal;\r\n    this.multiSubnetFailover = multiSubnetFailover;\r\n  }\r\n\r\n  execute(cb) {\r\n    if (this.signal.aborted) {\r\n      return process.nextTick(cb, new AbortError());\r\n    }\r\n\r\n    this.lookupAllAddresses(this.options.host, (err, addresses) => {\r\n      if (this.signal.aborted) {\r\n        return cb(new AbortError());\r\n      }\r\n\r\n      if (err) {\r\n        return cb(err);\r\n      }\r\n\r\n      if (this.multiSubnetFailover) {\r\n        new ParallelConnectionStrategy(addresses, this.signal, this.options).connect(cb);\r\n      } else {\r\n        new SequentialConnectionStrategy(addresses, this.signal, this.options).connect(cb);\r\n      }\r\n    });\r\n  }\r\n\r\n  lookupAllAddresses(host, callback) {\r\n    if (_net.default.isIPv6(host)) {\r\n      process.nextTick(callback, null, [{\r\n        address: host,\r\n        family: 6\r\n      }]);\r\n    } else if (_net.default.isIPv4(host)) {\r\n      process.nextTick(callback, null, [{\r\n        address: host,\r\n        family: 4\r\n      }]);\r\n    } else {\r\n      this.lookup.call(null, punycode.toASCII(host), {\r\n        all: true\r\n      }, callback);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexports.Connector = Connector;"]},"metadata":{},"sourceType":"script"}