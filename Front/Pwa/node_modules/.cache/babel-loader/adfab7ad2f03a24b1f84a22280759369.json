{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jsbi = _interopRequireDefault(require(\"jsbi\"));\n\nvar _token = require(\"./token\");\n\nvar _colmetadataTokenParser = _interopRequireDefault(require(\"./colmetadata-token-parser\"));\n\nvar _doneTokenParser = require(\"./done-token-parser\");\n\nvar _envChangeTokenParser = _interopRequireDefault(require(\"./env-change-token-parser\"));\n\nvar _infoerrorTokenParser = require(\"./infoerror-token-parser\");\n\nvar _fedauthInfoParser = _interopRequireDefault(require(\"./fedauth-info-parser\"));\n\nvar _featureExtAckParser = _interopRequireDefault(require(\"./feature-ext-ack-parser\"));\n\nvar _loginackTokenParser = _interopRequireDefault(require(\"./loginack-token-parser\"));\n\nvar _orderTokenParser = _interopRequireDefault(require(\"./order-token-parser\"));\n\nvar _returnstatusTokenParser = _interopRequireDefault(require(\"./returnstatus-token-parser\"));\n\nvar _returnvalueTokenParser = _interopRequireDefault(require(\"./returnvalue-token-parser\"));\n\nvar _rowTokenParser = _interopRequireDefault(require(\"./row-token-parser\"));\n\nvar _nbcrowTokenParser = _interopRequireDefault(require(\"./nbcrow-token-parser\"));\n\nvar _sspiTokenParser = _interopRequireDefault(require(\"./sspi-token-parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst tokenParsers = {\n  [_token.TYPE.DONE]: _doneTokenParser.doneParser,\n  [_token.TYPE.DONEINPROC]: _doneTokenParser.doneInProcParser,\n  [_token.TYPE.DONEPROC]: _doneTokenParser.doneProcParser,\n  [_token.TYPE.ENVCHANGE]: _envChangeTokenParser.default,\n  [_token.TYPE.ERROR]: _infoerrorTokenParser.errorParser,\n  [_token.TYPE.FEDAUTHINFO]: _fedauthInfoParser.default,\n  [_token.TYPE.FEATUREEXTACK]: _featureExtAckParser.default,\n  [_token.TYPE.INFO]: _infoerrorTokenParser.infoParser,\n  [_token.TYPE.LOGINACK]: _loginackTokenParser.default,\n  [_token.TYPE.ORDER]: _orderTokenParser.default,\n  [_token.TYPE.RETURNSTATUS]: _returnstatusTokenParser.default,\n  [_token.TYPE.RETURNVALUE]: _returnvalueTokenParser.default,\n  [_token.TYPE.SSPI]: _sspiTokenParser.default\n};\n\nclass StreamBuffer {\n  constructor(iterable) {\n    this.iterator = void 0;\n    this.buffer = void 0;\n    this.position = void 0;\n    this.iterator = (iterable[Symbol.asyncIterator] || iterable[Symbol.iterator]).call(iterable);\n    this.buffer = Buffer.alloc(0);\n    this.position = 0;\n  }\n\n  async waitForChunk() {\n    const result = await this.iterator.next();\n\n    if (result.done) {\n      throw new Error('unexpected end of data');\n    }\n\n    if (this.position === this.buffer.length) {\n      this.buffer = result.value;\n    } else {\n      this.buffer = Buffer.concat([this.buffer.slice(this.position), result.value]);\n    }\n\n    this.position = 0;\n  }\n\n}\n\nclass Parser {\n  static async *parseTokens(iterable, debug, options, colMetadata = []) {\n    let token;\n\n    const onDoneParsing = t => {\n      token = t;\n    };\n\n    const streamBuffer = new StreamBuffer(iterable);\n    const parser = new Parser(streamBuffer, debug, options);\n    parser.colMetadata = colMetadata;\n\n    while (true) {\n      try {\n        await streamBuffer.waitForChunk();\n      } catch (err) {\n        if (streamBuffer.position === streamBuffer.buffer.length) {\n          return;\n        }\n\n        throw err;\n      }\n\n      if (parser.suspended) {\n        // Unsuspend and continue from where ever we left off.\n        parser.suspended = false;\n        const next = parser.next;\n        next(); // Check if a new token was parsed after unsuspension.\n\n        if (!parser.suspended && token) {\n          if (token instanceof _token.ColMetadataToken) {\n            parser.colMetadata = token.columns;\n          }\n\n          yield token;\n        }\n      }\n\n      while (!parser.suspended && parser.position + 1 <= parser.buffer.length) {\n        const type = parser.buffer.readUInt8(parser.position);\n        parser.position += 1;\n\n        if (type === _token.TYPE.COLMETADATA) {\n          const token = await (0, _colmetadataTokenParser.default)(parser);\n          parser.colMetadata = token.columns;\n          yield token;\n        } else if (type === _token.TYPE.ROW) {\n          yield (0, _rowTokenParser.default)(parser);\n        } else if (type === _token.TYPE.NBCROW) {\n          yield (0, _nbcrowTokenParser.default)(parser);\n        } else if (tokenParsers[type]) {\n          tokenParsers[type](parser, parser.options, onDoneParsing); // Check if a new token was parsed after unsuspension.\n\n          if (!parser.suspended && token) {\n            if (token instanceof _token.ColMetadataToken) {\n              parser.colMetadata = token.columns;\n            }\n\n            yield token;\n          }\n        } else {\n          throw new Error('Unknown type: ' + type);\n        }\n      }\n    }\n  }\n\n  constructor(streamBuffer, debug, options) {\n    this.debug = void 0;\n    this.colMetadata = void 0;\n    this.options = void 0;\n    this.suspended = void 0;\n    this.next = void 0;\n    this.streamBuffer = void 0;\n    this.debug = debug;\n    this.colMetadata = [];\n    this.options = options;\n    this.streamBuffer = streamBuffer;\n    this.suspended = false;\n    this.next = undefined;\n  }\n\n  get buffer() {\n    return this.streamBuffer.buffer;\n  }\n\n  get position() {\n    return this.streamBuffer.position;\n  }\n\n  set position(value) {\n    this.streamBuffer.position = value;\n  }\n\n  suspend(next) {\n    this.suspended = true;\n    this.next = next;\n  }\n\n  awaitData(length, callback) {\n    if (this.position + length <= this.buffer.length) {\n      callback();\n    } else {\n      this.suspend(() => {\n        this.awaitData(length, callback);\n      });\n    }\n  }\n\n  readInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readUInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readUInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readBigInt64LE(callback) {\n    this.awaitData(8, () => {\n      const result = _jsbi.default.add(_jsbi.default.leftShift(_jsbi.default.BigInt(this.buffer[this.position + 4] + this.buffer[this.position + 5] * 2 ** 8 + this.buffer[this.position + 6] * 2 ** 16 + (this.buffer[this.position + 7] << 24) // Overflow\n      ), _jsbi.default.BigInt(32)), _jsbi.default.BigInt(this.buffer[this.position] + this.buffer[this.position + 1] * 2 ** 8 + this.buffer[this.position + 2] * 2 ** 16 + this.buffer[this.position + 3] * 2 ** 24));\n\n      this.position += 8;\n      callback(result);\n    });\n  }\n\n  readInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32LE(this.position + 4) + ((this.buffer[this.position + 4] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32BE(this.position) + ((this.buffer[this.position] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readBigUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const low = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position));\n\n      const high = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position + 4));\n\n      this.position += 8;\n      callback(_jsbi.default.add(low, _jsbi.default.leftShift(high, _jsbi.default.BigInt(32))));\n    });\n  }\n\n  readUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32LE(this.position + 4) + this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32BE(this.position) + this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readFloatLE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatLE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readFloatBE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatBE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readDoubleLE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleLE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readDoubleBE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleBE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt24LE(callback) {\n    this.awaitData(3, () => {\n      const low = this.buffer.readUInt16LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 2);\n      this.position += 3;\n      callback(low | high << 16);\n    });\n  }\n\n  readUInt40LE(callback) {\n    this.awaitData(5, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 4);\n      this.position += 5;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric64LE(callback) {\n    this.awaitData(8, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt32LE(this.position + 4);\n      this.position += 8;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric96LE(callback) {\n    this.awaitData(12, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      this.position += 12;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3);\n    });\n  }\n\n  readUNumeric128LE(callback) {\n    this.awaitData(16, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      const dword4 = this.buffer.readUInt32LE(this.position + 12);\n      this.position += 16;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3 + 0x100000000 * 0x100000000 * 0x100000000 * dword4);\n    });\n  } // Variable length data\n\n\n  readBuffer(length, callback) {\n    this.awaitData(length, () => {\n      const data = this.buffer.slice(this.position, this.position + length);\n      this.position += length;\n      callback(data);\n    });\n  } // Read a Unicode String (BVARCHAR)\n\n\n  readBVarChar(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read a Unicode String (USVARCHAR)\n\n\n  readUsVarChar(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read binary data (BVARBYTE)\n\n\n  readBVarByte(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length, callback);\n    });\n  } // Read binary data (USVARBYTE)\n\n\n  readUsVarByte(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length, callback);\n    });\n  }\n\n}\n\nvar _default = Parser;\nexports.default = _default;\nmodule.exports = Parser;","map":{"version":3,"sources":["C:/Users/matia/Documents/Git/Turismo-Real/front/pwa/node_modules/mssql/node_modules/tedious/lib/token/stream-parser.js"],"names":["Object","defineProperty","exports","value","default","_jsbi","_interopRequireDefault","require","_token","_colmetadataTokenParser","_doneTokenParser","_envChangeTokenParser","_infoerrorTokenParser","_fedauthInfoParser","_featureExtAckParser","_loginackTokenParser","_orderTokenParser","_returnstatusTokenParser","_returnvalueTokenParser","_rowTokenParser","_nbcrowTokenParser","_sspiTokenParser","obj","__esModule","tokenParsers","TYPE","DONE","doneParser","DONEINPROC","doneInProcParser","DONEPROC","doneProcParser","ENVCHANGE","ERROR","errorParser","FEDAUTHINFO","FEATUREEXTACK","INFO","infoParser","LOGINACK","ORDER","RETURNSTATUS","RETURNVALUE","SSPI","StreamBuffer","constructor","iterable","iterator","buffer","position","Symbol","asyncIterator","call","Buffer","alloc","waitForChunk","result","next","done","Error","length","concat","slice","Parser","parseTokens","debug","options","colMetadata","token","onDoneParsing","t","streamBuffer","parser","err","suspended","ColMetadataToken","columns","type","readUInt8","COLMETADATA","ROW","NBCROW","undefined","suspend","awaitData","callback","readInt8","data","readInt16LE","readInt16BE","readUInt16LE","readUInt16BE","readInt32LE","readInt32BE","readUInt32LE","readUInt32BE","readBigInt64LE","add","leftShift","BigInt","readInt64LE","Math","pow","readInt64BE","readBigUInt64LE","low","high","readUInt64LE","readUInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","readUInt24LE","readUInt40LE","readUNumeric64LE","readUNumeric96LE","dword1","dword2","dword3","readUNumeric128LE","dword4","readBuffer","readBVarChar","toString","readUsVarChar","readBVarByte","readUsVarByte","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jsbi = _interopRequireDefault(require(\"jsbi\"));\n\nvar _token = require(\"./token\");\n\nvar _colmetadataTokenParser = _interopRequireDefault(require(\"./colmetadata-token-parser\"));\n\nvar _doneTokenParser = require(\"./done-token-parser\");\n\nvar _envChangeTokenParser = _interopRequireDefault(require(\"./env-change-token-parser\"));\n\nvar _infoerrorTokenParser = require(\"./infoerror-token-parser\");\n\nvar _fedauthInfoParser = _interopRequireDefault(require(\"./fedauth-info-parser\"));\n\nvar _featureExtAckParser = _interopRequireDefault(require(\"./feature-ext-ack-parser\"));\n\nvar _loginackTokenParser = _interopRequireDefault(require(\"./loginack-token-parser\"));\n\nvar _orderTokenParser = _interopRequireDefault(require(\"./order-token-parser\"));\n\nvar _returnstatusTokenParser = _interopRequireDefault(require(\"./returnstatus-token-parser\"));\n\nvar _returnvalueTokenParser = _interopRequireDefault(require(\"./returnvalue-token-parser\"));\n\nvar _rowTokenParser = _interopRequireDefault(require(\"./row-token-parser\"));\n\nvar _nbcrowTokenParser = _interopRequireDefault(require(\"./nbcrow-token-parser\"));\n\nvar _sspiTokenParser = _interopRequireDefault(require(\"./sspi-token-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst tokenParsers = {\n  [_token.TYPE.DONE]: _doneTokenParser.doneParser,\n  [_token.TYPE.DONEINPROC]: _doneTokenParser.doneInProcParser,\n  [_token.TYPE.DONEPROC]: _doneTokenParser.doneProcParser,\n  [_token.TYPE.ENVCHANGE]: _envChangeTokenParser.default,\n  [_token.TYPE.ERROR]: _infoerrorTokenParser.errorParser,\n  [_token.TYPE.FEDAUTHINFO]: _fedauthInfoParser.default,\n  [_token.TYPE.FEATUREEXTACK]: _featureExtAckParser.default,\n  [_token.TYPE.INFO]: _infoerrorTokenParser.infoParser,\n  [_token.TYPE.LOGINACK]: _loginackTokenParser.default,\n  [_token.TYPE.ORDER]: _orderTokenParser.default,\n  [_token.TYPE.RETURNSTATUS]: _returnstatusTokenParser.default,\n  [_token.TYPE.RETURNVALUE]: _returnvalueTokenParser.default,\n  [_token.TYPE.SSPI]: _sspiTokenParser.default\n};\n\nclass StreamBuffer {\n  constructor(iterable) {\n    this.iterator = void 0;\n    this.buffer = void 0;\n    this.position = void 0;\n    this.iterator = (iterable[Symbol.asyncIterator] || iterable[Symbol.iterator]).call(iterable);\n    this.buffer = Buffer.alloc(0);\n    this.position = 0;\n  }\n\n  async waitForChunk() {\n    const result = await this.iterator.next();\n\n    if (result.done) {\n      throw new Error('unexpected end of data');\n    }\n\n    if (this.position === this.buffer.length) {\n      this.buffer = result.value;\n    } else {\n      this.buffer = Buffer.concat([this.buffer.slice(this.position), result.value]);\n    }\n\n    this.position = 0;\n  }\n\n}\n\nclass Parser {\n  static async *parseTokens(iterable, debug, options, colMetadata = []) {\n    let token;\n\n    const onDoneParsing = t => {\n      token = t;\n    };\n\n    const streamBuffer = new StreamBuffer(iterable);\n    const parser = new Parser(streamBuffer, debug, options);\n    parser.colMetadata = colMetadata;\n\n    while (true) {\n      try {\n        await streamBuffer.waitForChunk();\n      } catch (err) {\n        if (streamBuffer.position === streamBuffer.buffer.length) {\n          return;\n        }\n\n        throw err;\n      }\n\n      if (parser.suspended) {\n        // Unsuspend and continue from where ever we left off.\n        parser.suspended = false;\n        const next = parser.next;\n        next(); // Check if a new token was parsed after unsuspension.\n\n        if (!parser.suspended && token) {\n          if (token instanceof _token.ColMetadataToken) {\n            parser.colMetadata = token.columns;\n          }\n\n          yield token;\n        }\n      }\n\n      while (!parser.suspended && parser.position + 1 <= parser.buffer.length) {\n        const type = parser.buffer.readUInt8(parser.position);\n        parser.position += 1;\n\n        if (type === _token.TYPE.COLMETADATA) {\n          const token = await (0, _colmetadataTokenParser.default)(parser);\n          parser.colMetadata = token.columns;\n          yield token;\n        } else if (type === _token.TYPE.ROW) {\n          yield (0, _rowTokenParser.default)(parser);\n        } else if (type === _token.TYPE.NBCROW) {\n          yield (0, _nbcrowTokenParser.default)(parser);\n        } else if (tokenParsers[type]) {\n          tokenParsers[type](parser, parser.options, onDoneParsing); // Check if a new token was parsed after unsuspension.\n\n          if (!parser.suspended && token) {\n            if (token instanceof _token.ColMetadataToken) {\n              parser.colMetadata = token.columns;\n            }\n\n            yield token;\n          }\n        } else {\n          throw new Error('Unknown type: ' + type);\n        }\n      }\n    }\n  }\n\n  constructor(streamBuffer, debug, options) {\n    this.debug = void 0;\n    this.colMetadata = void 0;\n    this.options = void 0;\n    this.suspended = void 0;\n    this.next = void 0;\n    this.streamBuffer = void 0;\n    this.debug = debug;\n    this.colMetadata = [];\n    this.options = options;\n    this.streamBuffer = streamBuffer;\n    this.suspended = false;\n    this.next = undefined;\n  }\n\n  get buffer() {\n    return this.streamBuffer.buffer;\n  }\n\n  get position() {\n    return this.streamBuffer.position;\n  }\n\n  set position(value) {\n    this.streamBuffer.position = value;\n  }\n\n  suspend(next) {\n    this.suspended = true;\n    this.next = next;\n  }\n\n  awaitData(length, callback) {\n    if (this.position + length <= this.buffer.length) {\n      callback();\n    } else {\n      this.suspend(() => {\n        this.awaitData(length, callback);\n      });\n    }\n  }\n\n  readInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readUInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readUInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readBigInt64LE(callback) {\n    this.awaitData(8, () => {\n      const result = _jsbi.default.add(_jsbi.default.leftShift(_jsbi.default.BigInt(this.buffer[this.position + 4] + this.buffer[this.position + 5] * 2 ** 8 + this.buffer[this.position + 6] * 2 ** 16 + (this.buffer[this.position + 7] << 24) // Overflow\n      ), _jsbi.default.BigInt(32)), _jsbi.default.BigInt(this.buffer[this.position] + this.buffer[this.position + 1] * 2 ** 8 + this.buffer[this.position + 2] * 2 ** 16 + this.buffer[this.position + 3] * 2 ** 24));\n\n      this.position += 8;\n      callback(result);\n    });\n  }\n\n  readInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32LE(this.position + 4) + ((this.buffer[this.position + 4] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32BE(this.position) + ((this.buffer[this.position] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readBigUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const low = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position));\n\n      const high = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position + 4));\n\n      this.position += 8;\n      callback(_jsbi.default.add(low, _jsbi.default.leftShift(high, _jsbi.default.BigInt(32))));\n    });\n  }\n\n  readUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32LE(this.position + 4) + this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32BE(this.position) + this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readFloatLE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatLE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readFloatBE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatBE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readDoubleLE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleLE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readDoubleBE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleBE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt24LE(callback) {\n    this.awaitData(3, () => {\n      const low = this.buffer.readUInt16LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 2);\n      this.position += 3;\n      callback(low | high << 16);\n    });\n  }\n\n  readUInt40LE(callback) {\n    this.awaitData(5, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 4);\n      this.position += 5;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric64LE(callback) {\n    this.awaitData(8, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt32LE(this.position + 4);\n      this.position += 8;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric96LE(callback) {\n    this.awaitData(12, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      this.position += 12;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3);\n    });\n  }\n\n  readUNumeric128LE(callback) {\n    this.awaitData(16, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      const dword4 = this.buffer.readUInt32LE(this.position + 12);\n      this.position += 16;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3 + 0x100000000 * 0x100000000 * 0x100000000 * dword4);\n    });\n  } // Variable length data\n\n\n  readBuffer(length, callback) {\n    this.awaitData(length, () => {\n      const data = this.buffer.slice(this.position, this.position + length);\n      this.position += length;\n      callback(data);\n    });\n  } // Read a Unicode String (BVARCHAR)\n\n\n  readBVarChar(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read a Unicode String (USVARCHAR)\n\n\n  readUsVarChar(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read binary data (BVARBYTE)\n\n\n  readBVarByte(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length, callback);\n    });\n  } // Read binary data (USVARBYTE)\n\n\n  readUsVarByte(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length, callback);\n    });\n  }\n\n}\n\nvar _default = Parser;\nexports.default = _default;\nmodule.exports = Parser;"]},"metadata":{},"sourceType":"script"}