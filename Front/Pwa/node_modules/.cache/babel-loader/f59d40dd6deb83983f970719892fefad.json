{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\nconst Image = {\n  id: 0x22,\n  type: 'IMAGE',\n  name: 'Image',\n  hasTableName: true,\n  declaration: function () {\n    return 'image';\n  },\n  resolveLength: function (parameter) {\n    if (parameter.value != null) {\n      const value = parameter.value; // TODO: Temporary solution. Replace 'any' more with specific type;\n\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    const buffer = Buffer.alloc(5);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length, 1);\n    return buffer;\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    const buffer = Buffer.alloc(4);\n    buffer.writeInt32LE(parameter.value.length, 0);\n    return buffer;\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    yield parameter.value;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!Buffer.isBuffer(value)) {\n      throw new TypeError('Invalid buffer.');\n    }\n\n    return value;\n  }\n};\nvar _default = Image;\nexports.default = _default;\nmodule.exports = Image;","map":{"version":3,"sources":["B:/Duoc/Portafolio_de_titulo/Git/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/data-types/image.js"],"names":["Object","defineProperty","exports","value","default","NULL_LENGTH","Buffer","from","Image","id","type","name","hasTableName","declaration","resolveLength","parameter","length","generateTypeInfo","buffer","alloc","writeUInt8","writeInt32LE","generateParameterLength","options","generateParameterData","validate","isBuffer","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAZ,CAApB;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,IADQ;AAEZC,EAAAA,IAAI,EAAE,OAFM;AAGZC,EAAAA,IAAI,EAAE,OAHM;AAIZC,EAAAA,YAAY,EAAE,IAJF;AAKZC,EAAAA,WAAW,EAAE,YAAY;AACvB,WAAO,OAAP;AACD,GAPW;AAQZC,EAAAA,aAAa,EAAE,UAAUC,SAAV,EAAqB;AAClC,QAAIA,SAAS,CAACZ,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,YAAMA,KAAK,GAAGY,SAAS,CAACZ,KAAxB,CAD2B,CACI;;AAE/B,aAAOA,KAAK,CAACa,MAAb;AACD,KAJD,MAIO;AACL,aAAO,CAAC,CAAR;AACD;AACF,GAhBW;;AAkBZC,EAAAA,gBAAgB,CAACF,SAAD,EAAY;AAC1B,UAAMG,MAAM,GAAGZ,MAAM,CAACa,KAAP,CAAa,CAAb,CAAf;AACAD,IAAAA,MAAM,CAACE,UAAP,CAAkB,KAAKX,EAAvB,EAA2B,CAA3B;AACAS,IAAAA,MAAM,CAACG,YAAP,CAAoBN,SAAS,CAACC,MAA9B,EAAsC,CAAtC;AACA,WAAOE,MAAP;AACD,GAvBW;;AAyBZI,EAAAA,uBAAuB,CAACP,SAAD,EAAYQ,OAAZ,EAAqB;AAC1C,QAAIR,SAAS,CAACZ,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,aAAOE,WAAP;AACD;;AAED,UAAMa,MAAM,GAAGZ,MAAM,CAACa,KAAP,CAAa,CAAb,CAAf;AACAD,IAAAA,MAAM,CAACG,YAAP,CAAoBN,SAAS,CAACZ,KAAV,CAAgBa,MAApC,EAA4C,CAA5C;AACA,WAAOE,MAAP;AACD,GAjCW;;AAmCZ,GAACM,qBAAD,CAAuBT,SAAvB,EAAkCQ,OAAlC,EAA2C;AACzC,QAAIR,SAAS,CAACZ,KAAV,IAAmB,IAAvB,EAA6B;AAC3B;AACD;;AAED,UAAMY,SAAS,CAACZ,KAAhB;AACD,GAzCW;;AA2CZsB,EAAAA,QAAQ,EAAE,UAAUtB,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,CAACG,MAAM,CAACoB,QAAP,CAAgBvB,KAAhB,CAAL,EAA6B;AAC3B,YAAM,IAAIwB,SAAJ,CAAc,iBAAd,CAAN;AACD;;AAED,WAAOxB,KAAP;AACD;AArDW,CAAd;AAuDA,IAAIyB,QAAQ,GAAGpB,KAAf;AACAN,OAAO,CAACE,OAAR,GAAkBwB,QAAlB;AACAC,MAAM,CAAC3B,OAAP,GAAiBM,KAAjB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF]);\r\nconst Image = {\r\n  id: 0x22,\r\n  type: 'IMAGE',\r\n  name: 'Image',\r\n  hasTableName: true,\r\n  declaration: function () {\r\n    return 'image';\r\n  },\r\n  resolveLength: function (parameter) {\r\n    if (parameter.value != null) {\r\n      const value = parameter.value; // TODO: Temporary solution. Replace 'any' more with specific type;\r\n\r\n      return value.length;\r\n    } else {\r\n      return -1;\r\n    }\r\n  },\r\n\r\n  generateTypeInfo(parameter) {\r\n    const buffer = Buffer.alloc(5);\r\n    buffer.writeUInt8(this.id, 0);\r\n    buffer.writeInt32LE(parameter.length, 1);\r\n    return buffer;\r\n  },\r\n\r\n  generateParameterLength(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return NULL_LENGTH;\r\n    }\r\n\r\n    const buffer = Buffer.alloc(4);\r\n    buffer.writeInt32LE(parameter.value.length, 0);\r\n    return buffer;\r\n  },\r\n\r\n  *generateParameterData(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return;\r\n    }\r\n\r\n    yield parameter.value;\r\n  },\r\n\r\n  validate: function (value) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    if (!Buffer.isBuffer(value)) {\r\n      throw new TypeError('Invalid buffer.');\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\nvar _default = Image;\r\nexports.default = _default;\r\nmodule.exports = Image;"]},"metadata":{},"sourceType":"script"}