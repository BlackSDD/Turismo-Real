{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\n/**\r\n * Get the path to this parameter's value as a dotted string (a.b.c).\r\n * @param parameter The parameter to get the path string for.\r\n * @returns The path to this parameter's value as a dotted string.\r\n */\nexport function getPathStringFromParameter(parameter) {\n  return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nexport function getPathStringFromParameterPath(parameterPath, mapper) {\n  var result;\n\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["../../lib/operationParameter.ts"],"names":[],"mappings":"AAAA;AACA;;AAkDA;;;;AAIG;AACH,OAAM,SAAU,0BAAV,CAAqC,SAArC,EAAkE;AACtE,SAAO,8BAA8B,CAAC,SAAS,CAAC,aAAX,EAA0B,SAAS,CAAC,MAApC,CAArC;AACD;AAED,OAAM,SAAU,8BAAV,CACJ,aADI,EAEJ,MAFI,EAEU;AAEd,MAAI,MAAJ;;AACA,MAAI,OAAO,aAAP,KAAyB,QAA7B,EAAuC;AACrC,IAAA,MAAM,GAAG,aAAT;AACD,GAFD,MAEO,IAAI,KAAK,CAAC,OAAN,CAAc,aAAd,CAAJ,EAAkC;AACvC,IAAA,MAAM,GAAG,aAAa,CAAC,IAAd,CAAmB,GAAnB,CAAT;AACD,GAFM,MAEA;AACL,IAAA,MAAM,GAAG,MAAM,CAAC,cAAhB;AACD;;AACD,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License. See License.txt in the project root for license information.\r\n/**\r\n * Get the path to this parameter's value as a dotted string (a.b.c).\r\n * @param parameter The parameter to get the path string for.\r\n * @returns The path to this parameter's value as a dotted string.\r\n */\r\nexport function getPathStringFromParameter(parameter) {\r\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\r\n}\r\nexport function getPathStringFromParameterPath(parameterPath, mapper) {\r\n    var result;\r\n    if (typeof parameterPath === \"string\") {\r\n        result = parameterPath;\r\n    }\r\n    else if (Array.isArray(parameterPath)) {\r\n        result = parameterPath.join(\".\");\r\n    }\r\n    else {\r\n        result = mapper.serializedName;\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=operationParameter.js.map"]},"metadata":{},"sourceType":"module"}