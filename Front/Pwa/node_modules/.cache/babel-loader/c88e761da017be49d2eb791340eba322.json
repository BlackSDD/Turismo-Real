{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar types = {\n  1: {\n    name: 'DATABASE',\n    event: 'databaseChange'\n  },\n  2: {\n    name: 'LANGUAGE',\n    event: 'languageChange'\n  },\n  3: {\n    name: 'CHARSET',\n    event: 'charsetChange'\n  },\n  4: {\n    name: 'PACKET_SIZE',\n    event: 'packetSizeChange'\n  },\n  7: {\n    name: 'SQL_COLLATION',\n    event: 'sqlCollationChange'\n  },\n  8: {\n    name: 'BEGIN_TXN',\n    event: 'beginTransaction'\n  },\n  9: {\n    name: 'COMMIT_TXN',\n    event: 'commitTransaction'\n  },\n  10: {\n    name: 'ROLLBACK_TXN',\n    event: 'rollbackTransaction'\n  },\n  13: {\n    name: 'DATABASE_MIRRORING_PARTNER',\n    event: 'partnerNode'\n  },\n  17: {\n    name: 'TXN_ENDED'\n  },\n  18: {\n    name: 'RESET_CONNECTION',\n    event: 'resetConnection'\n  },\n  20: {\n    name: 'ROUTING_CHANGE',\n    event: 'routingChange'\n  }\n};\n\nfunction readNewAndOldValue(parser, length, type, callback) {\n  switch (type.name) {\n    case 'DATABASE':\n    case 'LANGUAGE':\n    case 'CHARSET':\n    case 'PACKET_SIZE':\n    case 'DATABASE_MIRRORING_PARTNER':\n      return parser.readBVarChar(function (newValue) {\n        parser.readBVarChar(function (oldValue) {\n          switch (type.name) {\n            case 'PACKET_SIZE':\n              return callback(new _token.PacketSizeEnvChangeToken(parseInt(newValue), parseInt(oldValue)));\n\n            case 'DATABASE':\n              return callback(new _token.DatabaseEnvChangeToken(newValue, oldValue));\n\n            case 'LANGUAGE':\n              return callback(new _token.LanguageEnvChangeToken(newValue, oldValue));\n\n            case 'CHARSET':\n              return callback(new _token.CharsetEnvChangeToken(newValue, oldValue));\n\n            case 'DATABASE_MIRRORING_PARTNER':\n              return callback(new _token.DatabaseMirroringPartnerEnvChangeToken(newValue, oldValue));\n          }\n        });\n      });\n\n    case 'SQL_COLLATION':\n    case 'BEGIN_TXN':\n    case 'COMMIT_TXN':\n    case 'ROLLBACK_TXN':\n    case 'RESET_CONNECTION':\n      return parser.readBVarByte(function (newValue) {\n        parser.readBVarByte(function (oldValue) {\n          switch (type.name) {\n            case 'SQL_COLLATION':\n              return callback(new _token.CollationChangeToken(newValue, oldValue));\n\n            case 'BEGIN_TXN':\n              return callback(new _token.BeginTransactionEnvChangeToken(newValue, oldValue));\n\n            case 'COMMIT_TXN':\n              return callback(new _token.CommitTransactionEnvChangeToken(newValue, oldValue));\n\n            case 'ROLLBACK_TXN':\n              return callback(new _token.RollbackTransactionEnvChangeToken(newValue, oldValue));\n\n            case 'RESET_CONNECTION':\n              return callback(new _token.ResetConnectionEnvChangeToken(newValue, oldValue));\n          }\n        });\n      });\n\n    case 'ROUTING_CHANGE':\n      return parser.readUInt16LE(function (valueLength) {\n        // Routing Change:\n        // Byte 1: Protocol (must be 0)\n        // Bytes 2-3 (USHORT): Port number\n        // Bytes 4-5 (USHORT): Length of server data in unicode (2byte chars)\n        // Bytes 6-*: Server name in unicode characters\n        parser.readBuffer(valueLength, function (routePacket) {\n          var protocol = routePacket.readUInt8(0);\n\n          if (protocol !== 0) {\n            throw new Error('Unknown protocol byte in routing change event');\n          }\n\n          var port = routePacket.readUInt16LE(1);\n          var serverLen = routePacket.readUInt16LE(3); // 2 bytes per char, starting at offset 5\n\n          var server = routePacket.toString('ucs2', 5, 5 + serverLen * 2);\n          var newValue = {\n            protocol: protocol,\n            port: port,\n            server: server\n          };\n          parser.readUInt16LE(function (oldValueLength) {\n            parser.readBuffer(oldValueLength, function (oldValue) {\n              callback(new _token.RoutingEnvChangeToken(newValue, oldValue));\n            });\n          });\n        });\n      });\n\n    default:\n      console.error('Tedious > Unsupported ENVCHANGE type ' + type.name); // skip unknown bytes\n\n      parser.readBuffer(length - 1, function () {\n        callback(undefined);\n      });\n  }\n}\n\nfunction envChangeParser(parser, _options, callback) {\n  parser.readUInt16LE(function (length) {\n    parser.readUInt8(function (typeNumber) {\n      var type = types[typeNumber];\n\n      if (!type) {\n        console.error('Tedious > Unsupported ENVCHANGE type ' + typeNumber); // skip unknown bytes\n\n        return parser.readBuffer(length - 1, function () {\n          callback(undefined);\n        });\n      }\n\n      readNewAndOldValue(parser, length, type, function (token) {\n        callback(token);\n      });\n    });\n  });\n}\n\nvar _default = envChangeParser;\nexports.default = _default;\nmodule.exports = envChangeParser;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/token/env-change-token-parser.js"],"names":["Object","defineProperty","exports","value","default","_token","require","types","name","event","readNewAndOldValue","parser","length","type","callback","readBVarChar","newValue","oldValue","PacketSizeEnvChangeToken","parseInt","DatabaseEnvChangeToken","LanguageEnvChangeToken","CharsetEnvChangeToken","DatabaseMirroringPartnerEnvChangeToken","readBVarByte","CollationChangeToken","BeginTransactionEnvChangeToken","CommitTransactionEnvChangeToken","RollbackTransactionEnvChangeToken","ResetConnectionEnvChangeToken","readUInt16LE","valueLength","readBuffer","routePacket","protocol","readUInt8","Error","port","serverLen","server","toString","oldValueLength","RoutingEnvChangeToken","console","error","undefined","envChangeParser","_options","typeNumber","token","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _token = require(\"./token\");\r\n\r\nconst types = {\r\n  1: {\r\n    name: 'DATABASE',\r\n    event: 'databaseChange'\r\n  },\r\n  2: {\r\n    name: 'LANGUAGE',\r\n    event: 'languageChange'\r\n  },\r\n  3: {\r\n    name: 'CHARSET',\r\n    event: 'charsetChange'\r\n  },\r\n  4: {\r\n    name: 'PACKET_SIZE',\r\n    event: 'packetSizeChange'\r\n  },\r\n  7: {\r\n    name: 'SQL_COLLATION',\r\n    event: 'sqlCollationChange'\r\n  },\r\n  8: {\r\n    name: 'BEGIN_TXN',\r\n    event: 'beginTransaction'\r\n  },\r\n  9: {\r\n    name: 'COMMIT_TXN',\r\n    event: 'commitTransaction'\r\n  },\r\n  10: {\r\n    name: 'ROLLBACK_TXN',\r\n    event: 'rollbackTransaction'\r\n  },\r\n  13: {\r\n    name: 'DATABASE_MIRRORING_PARTNER',\r\n    event: 'partnerNode'\r\n  },\r\n  17: {\r\n    name: 'TXN_ENDED'\r\n  },\r\n  18: {\r\n    name: 'RESET_CONNECTION',\r\n    event: 'resetConnection'\r\n  },\r\n  20: {\r\n    name: 'ROUTING_CHANGE',\r\n    event: 'routingChange'\r\n  }\r\n};\r\n\r\nfunction readNewAndOldValue(parser, length, type, callback) {\r\n  switch (type.name) {\r\n    case 'DATABASE':\r\n    case 'LANGUAGE':\r\n    case 'CHARSET':\r\n    case 'PACKET_SIZE':\r\n    case 'DATABASE_MIRRORING_PARTNER':\r\n      return parser.readBVarChar(newValue => {\r\n        parser.readBVarChar(oldValue => {\r\n          switch (type.name) {\r\n            case 'PACKET_SIZE':\r\n              return callback(new _token.PacketSizeEnvChangeToken(parseInt(newValue), parseInt(oldValue)));\r\n\r\n            case 'DATABASE':\r\n              return callback(new _token.DatabaseEnvChangeToken(newValue, oldValue));\r\n\r\n            case 'LANGUAGE':\r\n              return callback(new _token.LanguageEnvChangeToken(newValue, oldValue));\r\n\r\n            case 'CHARSET':\r\n              return callback(new _token.CharsetEnvChangeToken(newValue, oldValue));\r\n\r\n            case 'DATABASE_MIRRORING_PARTNER':\r\n              return callback(new _token.DatabaseMirroringPartnerEnvChangeToken(newValue, oldValue));\r\n          }\r\n        });\r\n      });\r\n\r\n    case 'SQL_COLLATION':\r\n    case 'BEGIN_TXN':\r\n    case 'COMMIT_TXN':\r\n    case 'ROLLBACK_TXN':\r\n    case 'RESET_CONNECTION':\r\n      return parser.readBVarByte(newValue => {\r\n        parser.readBVarByte(oldValue => {\r\n          switch (type.name) {\r\n            case 'SQL_COLLATION':\r\n              return callback(new _token.CollationChangeToken(newValue, oldValue));\r\n\r\n            case 'BEGIN_TXN':\r\n              return callback(new _token.BeginTransactionEnvChangeToken(newValue, oldValue));\r\n\r\n            case 'COMMIT_TXN':\r\n              return callback(new _token.CommitTransactionEnvChangeToken(newValue, oldValue));\r\n\r\n            case 'ROLLBACK_TXN':\r\n              return callback(new _token.RollbackTransactionEnvChangeToken(newValue, oldValue));\r\n\r\n            case 'RESET_CONNECTION':\r\n              return callback(new _token.ResetConnectionEnvChangeToken(newValue, oldValue));\r\n          }\r\n        });\r\n      });\r\n\r\n    case 'ROUTING_CHANGE':\r\n      return parser.readUInt16LE(valueLength => {\r\n        // Routing Change:\r\n        // Byte 1: Protocol (must be 0)\r\n        // Bytes 2-3 (USHORT): Port number\r\n        // Bytes 4-5 (USHORT): Length of server data in unicode (2byte chars)\r\n        // Bytes 6-*: Server name in unicode characters\r\n        parser.readBuffer(valueLength, routePacket => {\r\n          const protocol = routePacket.readUInt8(0);\r\n\r\n          if (protocol !== 0) {\r\n            throw new Error('Unknown protocol byte in routing change event');\r\n          }\r\n\r\n          const port = routePacket.readUInt16LE(1);\r\n          const serverLen = routePacket.readUInt16LE(3); // 2 bytes per char, starting at offset 5\r\n\r\n          const server = routePacket.toString('ucs2', 5, 5 + serverLen * 2);\r\n          const newValue = {\r\n            protocol: protocol,\r\n            port: port,\r\n            server: server\r\n          };\r\n          parser.readUInt16LE(oldValueLength => {\r\n            parser.readBuffer(oldValueLength, oldValue => {\r\n              callback(new _token.RoutingEnvChangeToken(newValue, oldValue));\r\n            });\r\n          });\r\n        });\r\n      });\r\n\r\n    default:\r\n      console.error('Tedious > Unsupported ENVCHANGE type ' + type.name); // skip unknown bytes\r\n\r\n      parser.readBuffer(length - 1, () => {\r\n        callback(undefined);\r\n      });\r\n  }\r\n}\r\n\r\nfunction envChangeParser(parser, _options, callback) {\r\n  parser.readUInt16LE(length => {\r\n    parser.readUInt8(typeNumber => {\r\n      const type = types[typeNumber];\r\n\r\n      if (!type) {\r\n        console.error('Tedious > Unsupported ENVCHANGE type ' + typeNumber); // skip unknown bytes\r\n\r\n        return parser.readBuffer(length - 1, () => {\r\n          callback(undefined);\r\n        });\r\n      }\r\n\r\n      readNewAndOldValue(parser, length, type, token => {\r\n        callback(token);\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nvar _default = envChangeParser;\r\nexports.default = _default;\r\nmodule.exports = envChangeParser;"]},"metadata":{},"sourceType":"script"}