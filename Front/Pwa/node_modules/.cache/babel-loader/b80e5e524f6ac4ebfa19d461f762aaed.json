{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\nexports.Transaction = exports.isolationLevelByValue = exports.ISOLATION_LEVEL = exports.OPERATION_TYPE = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\r\n  s2.2.6.8\r\n */\n\n\nconst OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nconst ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nconst isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\n\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\n\nfunction assertValidIsolationLevel(isolationLevel, name) {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\n  }\n\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\n  }\n\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\n  }\n}\n\nclass Transaction {\n  constructor(name, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\n    this.name = void 0;\n    this.isolationLevel = void 0;\n    this.outstandingRequestCount = void 0;\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n\n  beginPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n\n  commitPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  rollbackPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  savePayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      *[Symbol.iterator]() {\n        yield buffer.data;\n      },\n\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n\n    return '';\n  }\n\n}\n\nexports.Transaction = Transaction;","map":{"version":3,"sources":["B:/Duoc/Portafolio_de_titulo/Git/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/transaction.js"],"names":["Object","defineProperty","exports","value","assertValidIsolationLevel","Transaction","isolationLevelByValue","ISOLATION_LEVEL","OPERATION_TYPE","_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","obj","__esModule","default","TM_GET_DTC_ADDRESS","TM_PROPAGATE_XACT","TM_BEGIN_XACT","TM_PROMOTE_XACT","TM_COMMIT_XACT","TM_ROLLBACK_XACT","TM_SAVE_XACT","NO_CHANGE","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT","name","isolationLevel","TypeError","includes","Number","isInteger","RangeError","constructor","outstandingRequestCount","beginPayload","txnDescriptor","buffer","writeToTrackingBuffer","writeUShort","writeUInt8","length","writeString","Symbol","iterator","data","toString","commitPayload","rollbackPayload","savePayload","isolationLevelToTSQL"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\r\nexports.Transaction = exports.isolationLevelByValue = exports.ISOLATION_LEVEL = exports.OPERATION_TYPE = void 0;\r\n\r\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\r\n\r\nvar _allHeaders = require(\"./all-headers\");\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/*\r\n  s2.2.6.8\r\n */\r\nconst OPERATION_TYPE = {\r\n  TM_GET_DTC_ADDRESS: 0x00,\r\n  TM_PROPAGATE_XACT: 0x01,\r\n  TM_BEGIN_XACT: 0x05,\r\n  TM_PROMOTE_XACT: 0x06,\r\n  TM_COMMIT_XACT: 0x07,\r\n  TM_ROLLBACK_XACT: 0x08,\r\n  TM_SAVE_XACT: 0x09\r\n};\r\nexports.OPERATION_TYPE = OPERATION_TYPE;\r\nconst ISOLATION_LEVEL = {\r\n  NO_CHANGE: 0x00,\r\n  READ_UNCOMMITTED: 0x01,\r\n  READ_COMMITTED: 0x02,\r\n  REPEATABLE_READ: 0x03,\r\n  SERIALIZABLE: 0x04,\r\n  SNAPSHOT: 0x05\r\n};\r\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\r\nconst isolationLevelByValue = {};\r\nexports.isolationLevelByValue = isolationLevelByValue;\r\n\r\nfor (const name in ISOLATION_LEVEL) {\r\n  const value = ISOLATION_LEVEL[name];\r\n  isolationLevelByValue[value] = name;\r\n}\r\n\r\nfunction assertValidIsolationLevel(isolationLevel, name) {\r\n  if (typeof isolationLevel !== 'number') {\r\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\r\n  }\r\n\r\n  if (!Number.isInteger(isolationLevel)) {\r\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\r\n  }\r\n\r\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\r\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\r\n  }\r\n}\r\n\r\nclass Transaction {\r\n  constructor(name, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\r\n    this.name = void 0;\r\n    this.isolationLevel = void 0;\r\n    this.outstandingRequestCount = void 0;\r\n    this.name = name;\r\n    this.isolationLevel = isolationLevel;\r\n    this.outstandingRequestCount = 1;\r\n  }\r\n\r\n  beginPayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\r\n    buffer.writeUInt8(this.isolationLevel);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2');\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\r\n      }\r\n    };\r\n  }\r\n\r\n  commitPayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\r\n\r\n    buffer.writeUInt8(0);\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Commit Transaction: name=' + this.name;\r\n      }\r\n    };\r\n  }\r\n\r\n  rollbackPayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\r\n\r\n    buffer.writeUInt8(0);\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Rollback Transaction: name=' + this.name;\r\n      }\r\n    };\r\n  }\r\n\r\n  savePayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2');\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Save Transaction: name=' + this.name;\r\n      }\r\n    };\r\n  }\r\n\r\n  isolationLevelToTSQL() {\r\n    switch (this.isolationLevel) {\r\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\r\n        return 'READ UNCOMMITTED';\r\n\r\n      case ISOLATION_LEVEL.READ_COMMITTED:\r\n        return 'READ COMMITTED';\r\n\r\n      case ISOLATION_LEVEL.REPEATABLE_READ:\r\n        return 'REPEATABLE READ';\r\n\r\n      case ISOLATION_LEVEL.SERIALIZABLE:\r\n        return 'SERIALIZABLE';\r\n\r\n      case ISOLATION_LEVEL.SNAPSHOT:\r\n        return 'SNAPSHOT';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n}\r\n\r\nexports.Transaction = Transaction;"]},"metadata":{},"sourceType":"script"}