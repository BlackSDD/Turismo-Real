{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@js-joda/core\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst EPOCH_DATE = _core.LocalDate.ofYearDay(1, 1);\n\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst DateTimeOffset = {\n  id: 0x2B,\n  type: 'DATETIMEOFFSETN',\n  name: 'DateTimeOffset',\n  declaration: function (parameter) {\n    return 'datetimeoffset(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        return Buffer.from([0x08]);\n\n      case 3:\n      case 4:\n        return Buffer.from([0x09]);\n\n      case 5:\n      case 6:\n      case 7:\n        return Buffer.from([0x0A]);\n\n      default:\n        throw new Error('invalid scale');\n    }\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const value = parameter.value;\n    let scale = parameter.scale;\n    const buffer = new _writableTrackingBuffer.default(16);\n    scale = scale;\n    let timestamp;\n    timestamp = ((value.getUTCHours() * 60 + value.getUTCMinutes()) * 60 + value.getUTCSeconds()) * 1000 + value.getMilliseconds();\n    timestamp = timestamp * Math.pow(10, scale - 3);\n    timestamp += (value.nanosecondDelta != null ? value.nanosecondDelta : 0) * Math.pow(10, scale);\n    timestamp = Math.round(timestamp);\n\n    switch (scale) {\n      case 0:\n      case 1:\n      case 2:\n        buffer.writeUInt24LE(timestamp);\n        break;\n\n      case 3:\n      case 4:\n        buffer.writeUInt32LE(timestamp);\n        break;\n\n      case 5:\n      case 6:\n      case 7:\n        buffer.writeUInt40LE(timestamp);\n    }\n\n    const date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n\n    const days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\n    buffer.writeUInt24LE(days);\n    const offset = -value.getTimezoneOffset();\n    buffer.writeInt16LE(offset);\n    yield buffer.data;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = DateTimeOffset;\nexports.default = _default;\nmodule.exports = DateTimeOffset;","map":{"version":3,"sources":["C:/Users/matia/Documents/Git/Turismo-Real/front/pwa/node_modules/mssql/node_modules/tedious/lib/data-types/datetimeoffset.js"],"names":["Object","defineProperty","exports","value","default","_core","require","_writableTrackingBuffer","_interopRequireDefault","obj","__esModule","EPOCH_DATE","LocalDate","ofYearDay","NULL_LENGTH","Buffer","from","DateTimeOffset","id","type","name","declaration","parameter","resolveScale","scale","generateTypeInfo","generateParameterLength","options","Error","generateParameterData","buffer","timestamp","getUTCHours","getUTCMinutes","getUTCSeconds","getMilliseconds","Math","pow","nanosecondDelta","round","writeUInt24LE","writeUInt32LE","writeUInt40LE","date","of","getUTCFullYear","getUTCMonth","getUTCDate","days","until","ChronoUnit","DAYS","offset","getTimezoneOffset","writeInt16LE","data","validate","Date","parse","isNaN","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@js-joda/core\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst EPOCH_DATE = _core.LocalDate.ofYearDay(1, 1);\n\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst DateTimeOffset = {\n  id: 0x2B,\n  type: 'DATETIMEOFFSETN',\n  name: 'DateTimeOffset',\n  declaration: function (parameter) {\n    return 'datetimeoffset(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        return Buffer.from([0x08]);\n\n      case 3:\n      case 4:\n        return Buffer.from([0x09]);\n\n      case 5:\n      case 6:\n      case 7:\n        return Buffer.from([0x0A]);\n\n      default:\n        throw new Error('invalid scale');\n    }\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const value = parameter.value;\n    let scale = parameter.scale;\n    const buffer = new _writableTrackingBuffer.default(16);\n    scale = scale;\n    let timestamp;\n    timestamp = ((value.getUTCHours() * 60 + value.getUTCMinutes()) * 60 + value.getUTCSeconds()) * 1000 + value.getMilliseconds();\n    timestamp = timestamp * Math.pow(10, scale - 3);\n    timestamp += (value.nanosecondDelta != null ? value.nanosecondDelta : 0) * Math.pow(10, scale);\n    timestamp = Math.round(timestamp);\n\n    switch (scale) {\n      case 0:\n      case 1:\n      case 2:\n        buffer.writeUInt24LE(timestamp);\n        break;\n\n      case 3:\n      case 4:\n        buffer.writeUInt32LE(timestamp);\n        break;\n\n      case 5:\n      case 6:\n      case 7:\n        buffer.writeUInt40LE(timestamp);\n    }\n\n    const date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n\n    const days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\n    buffer.writeUInt24LE(days);\n    const offset = -value.getTimezoneOffset();\n    buffer.writeInt16LE(offset);\n    yield buffer.data;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = DateTimeOffset;\nexports.default = _default;\nmodule.exports = DateTimeOffset;"]},"metadata":{},"sourceType":"script"}