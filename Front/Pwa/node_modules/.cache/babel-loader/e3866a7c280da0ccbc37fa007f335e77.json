{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _datetimen = _interopRequireDefault(require(\"./datetimen\"));\n\nvar _core = require(\"@js-joda/core\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar EPOCH_DATE = _core.LocalDate.ofYearDay(1900, 1);\n\nvar NULL_LENGTH = Buffer.from([0x00]);\nvar DATA_LENGTH = Buffer.from([0x08]);\nvar DateTime = {\n  id: 0x3D,\n  type: 'DATETIME',\n  name: 'DateTime',\n  declaration: function declaration() {\n    return 'datetime';\n  },\n  generateTypeInfo: function generateTypeInfo() {\n    return Buffer.from([_datetimen.default.id, 0x08]);\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    return DATA_LENGTH;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var value, date, days, milliseconds, threeHundredthsOfSecond, seconds, _seconds, buffer;\n\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parameter.value == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            value = parameter.value; // Temporary solution. Remove 'any' later.\n\n            if (options.useUTC) {\n              date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n            } else {\n              date = _core.LocalDate.of(value.getFullYear(), value.getMonth() + 1, value.getDate());\n            }\n\n            days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\n\n            if (options.useUTC) {\n              seconds = value.getUTCHours() * 60 * 60;\n              seconds += value.getUTCMinutes() * 60;\n              seconds += value.getUTCSeconds();\n              milliseconds = seconds * 1000 + value.getUTCMilliseconds();\n            } else {\n              _seconds = value.getHours() * 60 * 60;\n              _seconds += value.getMinutes() * 60;\n              _seconds += value.getSeconds();\n              milliseconds = _seconds * 1000 + value.getMilliseconds();\n            }\n\n            threeHundredthsOfSecond = milliseconds / (3 + 1 / 3);\n            threeHundredthsOfSecond = Math.round(threeHundredthsOfSecond); // 25920000 equals one day\n\n            if (threeHundredthsOfSecond === 25920000) {\n              days += 1;\n              threeHundredthsOfSecond = 0;\n            }\n\n            buffer = Buffer.alloc(8);\n            buffer.writeInt32LE(days, 0);\n            buffer.writeUInt32LE(threeHundredthsOfSecond, 4);\n            _context.next = 14;\n            return buffer;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  // TODO: type 'any' needs to be revisited.\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = DateTime;\nexports.default = _default;\nmodule.exports = DateTime;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/data-types/datetime.js"],"names":["Object","defineProperty","exports","value","default","_datetimen","_interopRequireDefault","require","_core","obj","__esModule","EPOCH_DATE","LocalDate","ofYearDay","NULL_LENGTH","Buffer","from","DATA_LENGTH","DateTime","id","type","name","declaration","generateTypeInfo","generateParameterLength","parameter","options","generateParameterData","useUTC","date","of","getUTCFullYear","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","days","until","ChronoUnit","DAYS","seconds","getUTCHours","getUTCMinutes","getUTCSeconds","milliseconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","threeHundredthsOfSecond","Math","round","buffer","alloc","writeInt32LE","writeUInt32LE","validate","Date","parse","isNaN","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _datetimen = _interopRequireDefault(require(\"./datetimen\"));\r\n\r\nvar _core = require(\"@js-joda/core\");\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nconst EPOCH_DATE = _core.LocalDate.ofYearDay(1900, 1);\r\n\r\nconst NULL_LENGTH = Buffer.from([0x00]);\r\nconst DATA_LENGTH = Buffer.from([0x08]);\r\nconst DateTime = {\r\n  id: 0x3D,\r\n  type: 'DATETIME',\r\n  name: 'DateTime',\r\n  declaration: function () {\r\n    return 'datetime';\r\n  },\r\n\r\n  generateTypeInfo() {\r\n    return Buffer.from([_datetimen.default.id, 0x08]);\r\n  },\r\n\r\n  generateParameterLength(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return NULL_LENGTH;\r\n    }\r\n\r\n    return DATA_LENGTH;\r\n  },\r\n\r\n  generateParameterData: function* (parameter, options) {\r\n    if (parameter.value == null) {\r\n      return;\r\n    }\r\n\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    let date;\r\n\r\n    if (options.useUTC) {\r\n      date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\r\n    } else {\r\n      date = _core.LocalDate.of(value.getFullYear(), value.getMonth() + 1, value.getDate());\r\n    }\r\n\r\n    let days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\r\n    let milliseconds, threeHundredthsOfSecond;\r\n\r\n    if (options.useUTC) {\r\n      let seconds = value.getUTCHours() * 60 * 60;\r\n      seconds += value.getUTCMinutes() * 60;\r\n      seconds += value.getUTCSeconds();\r\n      milliseconds = seconds * 1000 + value.getUTCMilliseconds();\r\n    } else {\r\n      let seconds = value.getHours() * 60 * 60;\r\n      seconds += value.getMinutes() * 60;\r\n      seconds += value.getSeconds();\r\n      milliseconds = seconds * 1000 + value.getMilliseconds();\r\n    }\r\n\r\n    threeHundredthsOfSecond = milliseconds / (3 + 1 / 3);\r\n    threeHundredthsOfSecond = Math.round(threeHundredthsOfSecond); // 25920000 equals one day\r\n\r\n    if (threeHundredthsOfSecond === 25920000) {\r\n      days += 1;\r\n      threeHundredthsOfSecond = 0;\r\n    }\r\n\r\n    const buffer = Buffer.alloc(8);\r\n    buffer.writeInt32LE(days, 0);\r\n    buffer.writeUInt32LE(threeHundredthsOfSecond, 4);\r\n    yield buffer;\r\n  },\r\n  // TODO: type 'any' needs to be revisited.\r\n  validate: function (value) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    if (!(value instanceof Date)) {\r\n      value = new Date(Date.parse(value));\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n      throw new TypeError('Invalid date.');\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\nvar _default = DateTime;\r\nexports.default = _default;\r\nmodule.exports = DateTime;"]},"metadata":{},"sourceType":"script"}