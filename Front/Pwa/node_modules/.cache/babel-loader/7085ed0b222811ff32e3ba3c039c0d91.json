{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nlet _Symbol$iterator;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n_Symbol$iterator = Symbol.iterator;\n/*\r\n  s2.2.6.6\r\n */\n\nclass SqlBatchPayload {\n  constructor(sqlText, txnDescriptor, options) {\n    this.sqlText = void 0;\n    this.txnDescriptor = void 0;\n    this.options = void 0;\n    this.sqlText = sqlText;\n    this.txnDescriptor = txnDescriptor;\n    this.options = options;\n  }\n\n  *[_Symbol$iterator]() {\n    if (this.options.tdsVersion >= '7_2') {\n      const buffer = new _writableTrackingBuffer.default(18, 'ucs2');\n      const outstandingRequestCount = 1;\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\n      yield buffer.data;\n    }\n\n    yield Buffer.from(this.sqlText, 'ucs2');\n  }\n\n  toString(indent = '') {\n    return indent + ('SQL Batch - ' + this.sqlText);\n  }\n\n}\n\nvar _default = SqlBatchPayload;\nexports.default = _default;\nmodule.exports = SqlBatchPayload;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/sqlbatch-payload.js"],"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","_Symbol$iterator","obj","__esModule","Symbol","iterator","SqlBatchPayload","constructor","sqlText","txnDescriptor","options","tdsVersion","buffer","outstandingRequestCount","writeToTrackingBuffer","data","Buffer","from","toString","indent","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,uBAAuB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,4CAAD,CAAR,CAApD;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,gBAAJ;;AAEA,SAASH,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/FD,gBAAgB,GAAGG,MAAM,CAACC,QAA1B;AAEA;AACA;AACA;;AACA,MAAMC,eAAN,CAAsB;AACpBC,EAAAA,WAAW,CAACC,OAAD,EAAUC,aAAV,EAAyBC,OAAzB,EAAkC;AAC3C,SAAKF,OAAL,GAAe,KAAK,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAK,CAA1B;AACA,SAAKC,OAAL,GAAe,KAAK,CAApB;AACA,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;AAEiB,IAAhBT,gBAAgB,IAAI;AACpB,QAAI,KAAKS,OAAL,CAAaC,UAAb,IAA2B,KAA/B,EAAsC;AACpC,YAAMC,MAAM,GAAG,IAAIf,uBAAuB,CAACD,OAA5B,CAAoC,EAApC,EAAwC,MAAxC,CAAf;AACA,YAAMiB,uBAAuB,GAAG,CAAhC;AACA,OAAC,GAAGb,WAAW,CAACc,qBAAhB,EAAuCF,MAAvC,EAA+C,KAAKH,aAApD,EAAmEI,uBAAnE;AACA,YAAMD,MAAM,CAACG,IAAb;AACD;;AAED,UAAMC,MAAM,CAACC,IAAP,CAAY,KAAKT,OAAjB,EAA0B,MAA1B,CAAN;AACD;;AAEDU,EAAAA,QAAQ,CAACC,MAAM,GAAG,EAAV,EAAc;AACpB,WAAOA,MAAM,IAAI,iBAAiB,KAAKX,OAA1B,CAAb;AACD;;AAvBmB;;AA2BtB,IAAIY,QAAQ,GAAGd,eAAf;AACAZ,OAAO,CAACE,OAAR,GAAkBwB,QAAlB;AACAC,MAAM,CAAC3B,OAAP,GAAiBY,eAAjB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\r\n\r\nvar _allHeaders = require(\"./all-headers\");\r\n\r\nlet _Symbol$iterator;\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n_Symbol$iterator = Symbol.iterator;\r\n\r\n/*\r\n  s2.2.6.6\r\n */\r\nclass SqlBatchPayload {\r\n  constructor(sqlText, txnDescriptor, options) {\r\n    this.sqlText = void 0;\r\n    this.txnDescriptor = void 0;\r\n    this.options = void 0;\r\n    this.sqlText = sqlText;\r\n    this.txnDescriptor = txnDescriptor;\r\n    this.options = options;\r\n  }\r\n\r\n  *[_Symbol$iterator]() {\r\n    if (this.options.tdsVersion >= '7_2') {\r\n      const buffer = new _writableTrackingBuffer.default(18, 'ucs2');\r\n      const outstandingRequestCount = 1;\r\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\r\n      yield buffer.data;\r\n    }\r\n\r\n    yield Buffer.from(this.sqlText, 'ucs2');\r\n  }\r\n\r\n  toString(indent = '') {\r\n    return indent + ('SQL Batch - ' + this.sqlText);\r\n  }\r\n\r\n}\r\n\r\nvar _default = SqlBatchPayload;\r\nexports.default = _default;\r\nmodule.exports = SqlBatchPayload;"]},"metadata":{},"sourceType":"script"}