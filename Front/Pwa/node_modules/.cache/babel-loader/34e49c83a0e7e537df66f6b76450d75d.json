{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar _tdsVersions = require(\"../tds-versions\");\n\nvar interfaceTypes = {\n  0: 'SQL_DFLT',\n  1: 'SQL_TSQL'\n};\n\nfunction loginAckParser(parser, _options, callback) {\n  // length\n  parser.readUInt16LE(function () {\n    parser.readUInt8(function (interfaceNumber) {\n      var interfaceType = interfaceTypes[interfaceNumber];\n      parser.readUInt32BE(function (tdsVersionNumber) {\n        var tdsVersion = _tdsVersions.versionsByValue[tdsVersionNumber];\n        parser.readBVarChar(function (progName) {\n          parser.readUInt8(function (major) {\n            parser.readUInt8(function (minor) {\n              parser.readUInt8(function (buildNumHi) {\n                parser.readUInt8(function (buildNumLow) {\n                  callback(new _token.LoginAckToken({\n                    interface: interfaceType,\n                    tdsVersion: tdsVersion,\n                    progName: progName,\n                    progVersion: {\n                      major: major,\n                      minor: minor,\n                      buildNumHi: buildNumHi,\n                      buildNumLow: buildNumLow\n                    }\n                  }));\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nvar _default = loginAckParser;\nexports.default = _default;\nmodule.exports = loginAckParser;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/token/loginack-token-parser.js"],"names":["Object","defineProperty","exports","value","default","_token","require","_tdsVersions","interfaceTypes","loginAckParser","parser","_options","callback","readUInt16LE","readUInt8","interfaceNumber","interfaceType","readUInt32BE","tdsVersionNumber","tdsVersion","versionsByValue","readBVarChar","progName","major","minor","buildNumHi","buildNumLow","LoginAckToken","interface","progVersion","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAME,cAAc,GAAG;AACrB,KAAG,UADkB;AAErB,KAAG;AAFkB,CAAvB;;AAKA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,QAAhC,EAA0CC,QAA1C,EAAoD;AAClD;AACAF,EAAAA,MAAM,CAACG,YAAP,CAAoB,YAAM;AACxBH,IAAAA,MAAM,CAACI,SAAP,CAAiB,UAAAC,eAAe,EAAI;AAClC,UAAMC,aAAa,GAAGR,cAAc,CAACO,eAAD,CAApC;AACAL,MAAAA,MAAM,CAACO,YAAP,CAAoB,UAAAC,gBAAgB,EAAI;AACtC,YAAMC,UAAU,GAAGZ,YAAY,CAACa,eAAb,CAA6BF,gBAA7B,CAAnB;AACAR,QAAAA,MAAM,CAACW,YAAP,CAAoB,UAAAC,QAAQ,EAAI;AAC9BZ,UAAAA,MAAM,CAACI,SAAP,CAAiB,UAAAS,KAAK,EAAI;AACxBb,YAAAA,MAAM,CAACI,SAAP,CAAiB,UAAAU,KAAK,EAAI;AACxBd,cAAAA,MAAM,CAACI,SAAP,CAAiB,UAAAW,UAAU,EAAI;AAC7Bf,gBAAAA,MAAM,CAACI,SAAP,CAAiB,UAAAY,WAAW,EAAI;AAC9Bd,kBAAAA,QAAQ,CAAC,IAAIP,MAAM,CAACsB,aAAX,CAAyB;AAChCC,oBAAAA,SAAS,EAAEZ,aADqB;AAEhCG,oBAAAA,UAAU,EAAEA,UAFoB;AAGhCG,oBAAAA,QAAQ,EAAEA,QAHsB;AAIhCO,oBAAAA,WAAW,EAAE;AACXN,sBAAAA,KAAK,EAAEA,KADI;AAEXC,sBAAAA,KAAK,EAAEA,KAFI;AAGXC,sBAAAA,UAAU,EAAEA,UAHD;AAIXC,sBAAAA,WAAW,EAAEA;AAJF;AAJmB,mBAAzB,CAAD,CAAR;AAWD,iBAZD;AAaD,eAdD;AAeD,aAhBD;AAiBD,WAlBD;AAmBD,SApBD;AAqBD,OAvBD;AAwBD,KA1BD;AA2BD,GA5BD;AA6BD;;AAED,IAAII,QAAQ,GAAGrB,cAAf;AACAP,OAAO,CAACE,OAAR,GAAkB0B,QAAlB;AACAC,MAAM,CAAC7B,OAAP,GAAiBO,cAAjB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _token = require(\"./token\");\r\n\r\nvar _tdsVersions = require(\"../tds-versions\");\r\n\r\nconst interfaceTypes = {\r\n  0: 'SQL_DFLT',\r\n  1: 'SQL_TSQL'\r\n};\r\n\r\nfunction loginAckParser(parser, _options, callback) {\r\n  // length\r\n  parser.readUInt16LE(() => {\r\n    parser.readUInt8(interfaceNumber => {\r\n      const interfaceType = interfaceTypes[interfaceNumber];\r\n      parser.readUInt32BE(tdsVersionNumber => {\r\n        const tdsVersion = _tdsVersions.versionsByValue[tdsVersionNumber];\r\n        parser.readBVarChar(progName => {\r\n          parser.readUInt8(major => {\r\n            parser.readUInt8(minor => {\r\n              parser.readUInt8(buildNumHi => {\r\n                parser.readUInt8(buildNumLow => {\r\n                  callback(new _token.LoginAckToken({\r\n                    interface: interfaceType,\r\n                    tdsVersion: tdsVersion,\r\n                    progName: progName,\r\n                    progVersion: {\r\n                      major: major,\r\n                      minor: minor,\r\n                      buildNumHi: buildNumHi,\r\n                      buildNumLow: buildNumLow\r\n                    }\r\n                  }));\r\n                });\r\n              });\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nvar _default = loginAckParser;\r\nexports.default = _default;\r\nmodule.exports = loginAckParser;"]},"metadata":{},"sourceType":"script"}