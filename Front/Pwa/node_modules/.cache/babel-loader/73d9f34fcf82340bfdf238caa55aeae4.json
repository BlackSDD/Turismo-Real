{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matia\\\\Documents\\\\Git\\\\Turismo-Real\\\\front\\\\pwa\\\\src\\\\components\\\\Views\\\\Reservas\\\\Reserva.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PaypalCheckout from '../../Layouts/PaypalCheckout';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Navbar from '../../Layouts/Navbar';\nimport { useParams, useLocation } from 'react-router-dom';\nimport DatePicker from '../../Layouts/Date-Picker';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure({});\n\nconst notifyS = () => {\n  toast.success('Operación realizada con éxito', {\n    position: toast.POSITION.TOP_CENTER,\n    theme: \"colored\"\n  });\n};\n\nconst notifyE = () => {\n  toast.error('Operación cancelada', {\n    position: toast.POSITION.TOP_CENTER,\n    theme: \"colored\"\n  });\n};\n\nexport default function Reserva() {\n  _s();\n\n  // const location = useLocation();\n  // let  {id_depto}  = useParams();\n  let storage = parseInt(sessionStorage.id_d); // const [pago, setPago] = useState([]);\n\n  const [id_rva, setId_rva] = useState(null);\n  const [fechas, setFechas] = useState([]);\n  const [arrayF, setArrayF] = useState([]); // const [count, setCount] = useState(false);\n  // const [id_depto, setId_depto] = useState(location.state.id_d);\n\n  let id_d = {\n    id_dpto: storage\n  };\n  useEffect(() => {\n    console.log('storage: ', storage);\n    console.log('id depto:', id_d);\n    getFechas(id_d);\n  }, []);\n  useEffect(() => {\n    transformarFechas();\n  }, [fechas]);\n\n  const transformarFechas = () => {\n    const dates = fechas.map(e => {\n      let newFecha = new Date(e.fec_disp_no);\n      const val = newFecha.toLocaleDateString(\"en-US\", e.fec_disp_no);\n      return val;\n    });\n    setArrayF(dates);\n  };\n\n  const getFechas = async id => {\n    const res = await axios.post('http://localhost:4000/API/disponibilidadNoId', id);\n    setFechas(res.data);\n  }; // useEffect((e)=>{\n  //     // e.preventDefault();\n  //     if (!id_rva) {\n  //         getMontoPago(id_rva);\n  //     };\n  // },[]);\n  // const getMontoPago = async (id) =>{\n  //     // const res = await axios.get('http://localhost:4000/API/pago/montoPago/' + id)\n  //     // setPago(res.data);\n  //     // console.log(res);\n  //     setCount({\n  //         count: true\n  //     })\n  // }\n  // function GenerarPago(props){\n  //     const generarP = props.generar;\n  //     if (generarP) {\n  //        return PagoPaypal({id_rva})\n  //     };\n  //     return console.log('Falta generar ordende reserva');\n  // };\n  // function PagoPaypal(id_res){\n  //     id_res.preventDefault();\n  //     let myvar = pago.map((e)=>e.pago);\n  //     console.log({myvar});\n  //     return(\n  //         <div>\n  //             <PaypalCheckout\n  //                 precio = {myvar}\n  //                 id_rva = {id_res}\n  //             />\n  //         </div>);\n  // };\n\n\n  let variable = sessionStorage.Pagar;\n  useEffect(() => {\n    variable = sessionStorage.Pagar;\n    console.log('variable: ', variable);\n  }, []);\n  console.log('Inicio carga disponibilidad');\n  console.log('Fechas: ', fechas);\n  console.log('fechas ArrayF', arrayF);\n  console.log('End carga disponibilidad');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      fechas: arrayF\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Reserva, \"uiNip/KqFoMDZFzCXUH5FWw+/CE=\");\n\n_c = Reserva;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserva\");","map":{"version":3,"sources":["C:/Users/matia/Documents/Git/Turismo-Real/front/pwa/src/components/Views/Reservas/Reserva.jsx"],"names":["React","useEffect","useState","PaypalCheckout","axios","toast","Navbar","useParams","useLocation","DatePicker","Button","configure","notifyS","success","position","POSITION","TOP_CENTER","theme","notifyE","error","Reserva","storage","parseInt","sessionStorage","id_d","id_rva","setId_rva","fechas","setFechas","arrayF","setArrayF","id_dpto","console","log","getFechas","transformarFechas","dates","map","e","newFecha","Date","fec_disp_no","val","toLocaleDateString","id","res","post","data","variable","Pagar"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PaypalCheckout from '../../Layouts/PaypalCheckout';\r\nimport axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport Navbar from '../../Layouts/Navbar';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport DatePicker from '../../Layouts/Date-Picker';\r\nimport {Button} from  'react-bootstrap';\r\n\r\ntoast.configure({\r\n});\r\n\r\nconst notifyS = () =>{\r\n    toast.success('Operación realizada con éxito',{\r\n        position: toast.POSITION.TOP_CENTER,\r\n        theme: \"colored\"\r\n    });\r\n};\r\n\r\nconst notifyE = () =>{\r\n    toast.error('Operación cancelada',{\r\n        position: toast.POSITION.TOP_CENTER,\r\n        theme: \"colored\"\r\n    });\r\n};\r\n\r\nexport default function Reserva() {\r\n    // const location = useLocation();\r\n    // let  {id_depto}  = useParams();\r\n    let storage = parseInt(sessionStorage.id_d);\r\n    // const [pago, setPago] = useState([]);\r\n    const [id_rva, setId_rva] = useState(null);\r\n    const [fechas, setFechas] = useState([]);\r\n    const [arrayF, setArrayF] = useState([]);\r\n    // const [count, setCount] = useState(false);\r\n    // const [id_depto, setId_depto] = useState(location.state.id_d);\r\n    let id_d = {\r\n        id_dpto : storage\r\n    };\r\n\r\n    useEffect(() =>{\r\n        console.log('storage: ', storage);\r\n        console.log('id depto:', id_d);\r\n        getFechas(id_d);\r\n    },[]);\r\n  \r\n    useEffect(() => {\r\n        transformarFechas();\r\n    }, [fechas]);\r\n    \r\n    const transformarFechas = () =>{\r\n        const dates = fechas.map((e) => {\r\n            let newFecha = new Date(e.fec_disp_no);\r\n            const val = newFecha.toLocaleDateString(\"en-US\", e.fec_disp_no);\r\n            return val;\r\n            })\r\n        setArrayF(dates);\r\n    };\r\n\r\n    const getFechas = async (id) =>{\r\n        const res = await axios.post('http://localhost:4000/API/disponibilidadNoId', id)\r\n        setFechas(res.data);\r\n    };\r\n\r\n    // useEffect((e)=>{\r\n    //     // e.preventDefault();\r\n    //     if (!id_rva) {\r\n    //         getMontoPago(id_rva);\r\n    //     };\r\n    // },[]);\r\n\r\n    // const getMontoPago = async (id) =>{\r\n    //     // const res = await axios.get('http://localhost:4000/API/pago/montoPago/' + id)\r\n    //     // setPago(res.data);\r\n    //     // console.log(res);\r\n    //     setCount({\r\n    //         count: true\r\n    //     })\r\n    // }\r\n    \r\n    // function GenerarPago(props){\r\n    //     const generarP = props.generar;\r\n    //     if (generarP) {\r\n    //        return PagoPaypal({id_rva})\r\n    //     };\r\n    //     return console.log('Falta generar ordende reserva');\r\n    // };\r\n\r\n    // function PagoPaypal(id_res){\r\n    //     id_res.preventDefault();\r\n    //     let myvar = pago.map((e)=>e.pago);\r\n    //     console.log({myvar});\r\n    //     return(\r\n    //         <div>\r\n    //             <PaypalCheckout\r\n    //                 precio = {myvar}\r\n    //                 id_rva = {id_res}\r\n    //             />\r\n    //         </div>);\r\n    // };\r\n    \r\n    let variable = sessionStorage.Pagar;\r\n\r\n    useEffect(() => {\r\n        variable = sessionStorage.Pagar;\r\n        console.log('variable: ',variable)\r\n    },[])\r\n\r\n    console.log('Inicio carga disponibilidad');\r\n    console.log('Fechas: ',fechas);\r\n    console.log('fechas ArrayF', arrayF);\r\n    console.log('End carga disponibilidad');\r\n    \r\n    \r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <DatePicker\r\n                    fechas={arrayF}\r\n                />                          \r\n            </div>\r\n        );\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}