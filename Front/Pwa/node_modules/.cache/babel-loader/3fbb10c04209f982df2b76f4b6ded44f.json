{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst Time = {\n  id: 0x29,\n  type: 'TIMEN',\n  name: 'Time',\n  declaration: function (parameter) {\n    return 'time(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        return Buffer.from([0x03]);\n\n      case 3:\n      case 4:\n        return Buffer.from([0x04]);\n\n      case 5:\n      case 6:\n      case 7:\n        return Buffer.from([0x05]);\n\n      default:\n        throw new Error('invalid scale');\n    }\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = new _writableTrackingBuffer.default(16);\n    const time = parameter.value;\n    let timestamp;\n\n    if (options.useUTC) {\n      timestamp = ((time.getUTCHours() * 60 + time.getUTCMinutes()) * 60 + time.getUTCSeconds()) * 1000 + time.getUTCMilliseconds();\n    } else {\n      timestamp = ((time.getHours() * 60 + time.getMinutes()) * 60 + time.getSeconds()) * 1000 + time.getMilliseconds();\n    }\n\n    timestamp = timestamp * Math.pow(10, parameter.scale - 3);\n    timestamp += (parameter.value.nanosecondDelta != null ? parameter.value.nanosecondDelta : 0) * Math.pow(10, parameter.scale);\n    timestamp = Math.round(timestamp);\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        buffer.writeUInt24LE(timestamp);\n        break;\n\n      case 3:\n      case 4:\n        buffer.writeUInt32LE(timestamp);\n        break;\n\n      case 5:\n      case 6:\n      case 7:\n        buffer.writeUInt40LE(timestamp);\n    }\n\n    yield buffer.data;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid time.');\n    }\n\n    return value;\n  }\n};\nvar _default = Time;\nexports.default = _default;\nmodule.exports = Time;","map":{"version":3,"sources":["C:/Users/matia/Documents/Git/Turismo-Real/front/pwa/node_modules/mssql/node_modules/tedious/lib/data-types/time.js"],"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","obj","__esModule","NULL_LENGTH","Buffer","from","Time","id","type","name","declaration","parameter","resolveScale","scale","generateTypeInfo","generateParameterLength","options","Error","generateParameterData","buffer","time","timestamp","useUTC","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","Math","pow","nanosecondDelta","round","writeUInt24LE","writeUInt32LE","writeUInt40LE","data","validate","Date","parse","isNaN","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NULL_LENGTH = Buffer.from([0x00]);\nconst Time = {\n  id: 0x29,\n  type: 'TIMEN',\n  name: 'Time',\n  declaration: function (parameter) {\n    return 'time(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n\n  generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        return Buffer.from([0x03]);\n\n      case 3:\n      case 4:\n        return Buffer.from([0x04]);\n\n      case 5:\n      case 6:\n      case 7:\n        return Buffer.from([0x05]);\n\n      default:\n        throw new Error('invalid scale');\n    }\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value == null) {\n      return;\n    }\n\n    const buffer = new _writableTrackingBuffer.default(16);\n    const time = parameter.value;\n    let timestamp;\n\n    if (options.useUTC) {\n      timestamp = ((time.getUTCHours() * 60 + time.getUTCMinutes()) * 60 + time.getUTCSeconds()) * 1000 + time.getUTCMilliseconds();\n    } else {\n      timestamp = ((time.getHours() * 60 + time.getMinutes()) * 60 + time.getSeconds()) * 1000 + time.getMilliseconds();\n    }\n\n    timestamp = timestamp * Math.pow(10, parameter.scale - 3);\n    timestamp += (parameter.value.nanosecondDelta != null ? parameter.value.nanosecondDelta : 0) * Math.pow(10, parameter.scale);\n    timestamp = Math.round(timestamp);\n\n    switch (parameter.scale) {\n      case 0:\n      case 1:\n      case 2:\n        buffer.writeUInt24LE(timestamp);\n        break;\n\n      case 3:\n      case 4:\n        buffer.writeUInt32LE(timestamp);\n        break;\n\n      case 5:\n      case 6:\n      case 7:\n        buffer.writeUInt40LE(timestamp);\n    }\n\n    yield buffer.data;\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      throw new TypeError('Invalid time.');\n    }\n\n    return value;\n  }\n};\nvar _default = Time;\nexports.default = _default;\nmodule.exports = Time;"]},"metadata":{},"sourceType":"script"}