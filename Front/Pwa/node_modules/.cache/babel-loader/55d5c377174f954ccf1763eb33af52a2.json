{"ast":null,"code":"'use strict';\n\nconst MSSQLError = require('./mssql-error');\n/**\n * Class RequestError.\n *\n * @property {String} number Error number.\n * @property {Number} lineNumber Line number.\n * @property {String} state Error state.\n * @property {String} class Error class.\n * @property {String} serverName Server name.\n * @property {String} procName Procedure name.\n */\n\n\nclass RequestError extends MSSQLError {\n  /**\n   * Creates a new RequestError.\n   *\n   * @param {String} message Error message.\n   * @param {String} [code] Error code.\n   */\n  constructor(message, code) {\n    super(message, code);\n\n    if (message instanceof Error) {\n      if (message.info) {\n        this.number = message.info.number || message.code; // err.code is returned by msnodesql driver\n\n        this.lineNumber = message.info.lineNumber;\n        this.state = message.info.state || message.sqlstate; // err.sqlstate is returned by msnodesql driver\n\n        this.class = message.info.class;\n        this.serverName = message.info.serverName;\n        this.procName = message.info.procName;\n      } else {\n        // Use err attributes returned by msnodesql driver\n        this.number = message.code;\n        this.lineNumber = message.lineNumber;\n        this.state = message.sqlstate;\n        this.class = message.severity;\n        this.serverName = message.serverName;\n        this.procName = message.procName;\n      }\n    }\n\n    this.name = 'RequestError';\n\n    if (/^\\[Microsoft\\]\\[SQL Server Native Client 11\\.0\\](?:\\[SQL Server\\])?([\\s\\S]*)$/.exec(this.message)) {\n      this.message = RegExp.$1;\n    }\n  }\n\n}\n\nmodule.exports = RequestError;","map":{"version":3,"sources":["C:/Users/matia/Documents/Git/Turismo-Real/front/pwa/node_modules/mssql/lib/error/request-error.js"],"names":["MSSQLError","require","RequestError","constructor","message","code","Error","info","number","lineNumber","state","sqlstate","class","serverName","procName","severity","name","exec","RegExp","$1","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,YAAN,SAA2BF,UAA3B,CAAsC;AACpC;AACF;AACA;AACA;AACA;AACA;AAEEG,EAAAA,WAAW,CAAEC,OAAF,EAAWC,IAAX,EAAiB;AAC1B,UAAMD,OAAN,EAAeC,IAAf;;AACA,QAAID,OAAO,YAAYE,KAAvB,EAA8B;AAC5B,UAAIF,OAAO,CAACG,IAAZ,EAAkB;AAChB,aAAKC,MAAL,GAAcJ,OAAO,CAACG,IAAR,CAAaC,MAAb,IAAuBJ,OAAO,CAACC,IAA7C,CADgB,CACkC;;AAClD,aAAKI,UAAL,GAAkBL,OAAO,CAACG,IAAR,CAAaE,UAA/B;AACA,aAAKC,KAAL,GAAaN,OAAO,CAACG,IAAR,CAAaG,KAAb,IAAsBN,OAAO,CAACO,QAA3C,CAHgB,CAGoC;;AACpD,aAAKC,KAAL,GAAaR,OAAO,CAACG,IAAR,CAAaK,KAA1B;AACA,aAAKC,UAAL,GAAkBT,OAAO,CAACG,IAAR,CAAaM,UAA/B;AACA,aAAKC,QAAL,GAAgBV,OAAO,CAACG,IAAR,CAAaO,QAA7B;AACD,OAPD,MAOO;AACL;AACA,aAAKN,MAAL,GAAcJ,OAAO,CAACC,IAAtB;AACA,aAAKI,UAAL,GAAkBL,OAAO,CAACK,UAA1B;AACA,aAAKC,KAAL,GAAaN,OAAO,CAACO,QAArB;AACA,aAAKC,KAAL,GAAaR,OAAO,CAACW,QAArB;AACA,aAAKF,UAAL,GAAkBT,OAAO,CAACS,UAA1B;AACA,aAAKC,QAAL,GAAgBV,OAAO,CAACU,QAAxB;AACD;AACF;;AAED,SAAKE,IAAL,GAAY,cAAZ;;AACA,QAAK,+EAAD,CAAkFC,IAAlF,CAAuF,KAAKb,OAA5F,CAAJ,EAA0G;AACxG,WAAKA,OAAL,GAAec,MAAM,CAACC,EAAtB;AACD;AACF;;AAjCmC;;AAoCtCC,MAAM,CAACC,OAAP,GAAiBnB,YAAjB","sourcesContent":["'use strict'\n\nconst MSSQLError = require('./mssql-error')\n\n/**\n * Class RequestError.\n *\n * @property {String} number Error number.\n * @property {Number} lineNumber Line number.\n * @property {String} state Error state.\n * @property {String} class Error class.\n * @property {String} serverName Server name.\n * @property {String} procName Procedure name.\n */\n\nclass RequestError extends MSSQLError {\n  /**\n   * Creates a new RequestError.\n   *\n   * @param {String} message Error message.\n   * @param {String} [code] Error code.\n   */\n\n  constructor (message, code) {\n    super(message, code)\n    if (message instanceof Error) {\n      if (message.info) {\n        this.number = message.info.number || message.code // err.code is returned by msnodesql driver\n        this.lineNumber = message.info.lineNumber\n        this.state = message.info.state || message.sqlstate // err.sqlstate is returned by msnodesql driver\n        this.class = message.info.class\n        this.serverName = message.info.serverName\n        this.procName = message.info.procName\n      } else {\n        // Use err attributes returned by msnodesql driver\n        this.number = message.code\n        this.lineNumber = message.lineNumber\n        this.state = message.sqlstate\n        this.class = message.severity\n        this.serverName = message.serverName\n        this.procName = message.procName\n      }\n    }\n\n    this.name = 'RequestError'\n    if ((/^\\[Microsoft\\]\\[SQL Server Native Client 11\\.0\\](?:\\[SQL Server\\])?([\\s\\S]*)$/).exec(this.message)) {\n      this.message = RegExp.$1\n    }\n  }\n}\n\nmodule.exports = RequestError\n"]},"metadata":{},"sourceType":"script"}