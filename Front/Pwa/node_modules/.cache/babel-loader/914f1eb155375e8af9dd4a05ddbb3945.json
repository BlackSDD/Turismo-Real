{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar MSSQLError = require('./mssql-error');\n/**\r\n * Class RequestError.\r\n *\r\n * @property {String} number Error number.\r\n * @property {Number} lineNumber Line number.\r\n * @property {String} state Error state.\r\n * @property {String} class Error class.\r\n * @property {String} serverName Server name.\r\n * @property {String} procName Procedure name.\r\n */\n\n\nvar RequestError = /*#__PURE__*/function (_MSSQLError) {\n  _inherits(RequestError, _MSSQLError);\n\n  var _super = _createSuper(RequestError);\n\n  /**\r\n   * Creates a new RequestError.\r\n   *\r\n   * @param {String} message Error message.\r\n   * @param {String} [code] Error code.\r\n   */\n  function RequestError(message, code) {\n    var _this;\n\n    _classCallCheck(this, RequestError);\n\n    _this = _super.call(this, message, code);\n\n    if (message instanceof Error) {\n      if (message.info) {\n        _this.number = message.info.number || message.code; // err.code is returned by msnodesql driver\n\n        _this.lineNumber = message.info.lineNumber;\n        _this.state = message.info.state || message.sqlstate; // err.sqlstate is returned by msnodesql driver\n\n        _this.class = message.info.class;\n        _this.serverName = message.info.serverName;\n        _this.procName = message.info.procName;\n      } else {\n        // Use err attributes returned by msnodesql driver\n        _this.number = message.code;\n        _this.lineNumber = message.lineNumber;\n        _this.state = message.sqlstate;\n        _this.class = message.severity;\n        _this.serverName = message.serverName;\n        _this.procName = message.procName;\n      }\n    }\n\n    _this.name = 'RequestError';\n\n    if (/^\\[Microsoft\\]\\[SQL Server Native Client 11\\.0\\](?:\\[SQL Server\\])?([\\s\\S]*)$/.exec(_this.message)) {\n      _this.message = RegExp.$1;\n    }\n\n    return _this;\n  }\n\n  return RequestError;\n}(MSSQLError);\n\nmodule.exports = RequestError;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/lib/error/request-error.js"],"names":["MSSQLError","require","RequestError","message","code","Error","info","number","lineNumber","state","sqlstate","class","serverName","procName","severity","name","exec","RegExp","$1","module","exports"],"mappings":"AAAA;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMC,Y;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AAEE,wBAAaC,OAAb,EAAsBC,IAAtB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,OAAN,EAAeC,IAAf;;AACA,QAAID,OAAO,YAAYE,KAAvB,EAA8B;AAC5B,UAAIF,OAAO,CAACG,IAAZ,EAAkB;AAChB,cAAKC,MAAL,GAAcJ,OAAO,CAACG,IAAR,CAAaC,MAAb,IAAuBJ,OAAO,CAACC,IAA7C,CADgB,CACkC;;AAClD,cAAKI,UAAL,GAAkBL,OAAO,CAACG,IAAR,CAAaE,UAA/B;AACA,cAAKC,KAAL,GAAaN,OAAO,CAACG,IAAR,CAAaG,KAAb,IAAsBN,OAAO,CAACO,QAA3C,CAHgB,CAGoC;;AACpD,cAAKC,KAAL,GAAaR,OAAO,CAACG,IAAR,CAAaK,KAA1B;AACA,cAAKC,UAAL,GAAkBT,OAAO,CAACG,IAAR,CAAaM,UAA/B;AACA,cAAKC,QAAL,GAAgBV,OAAO,CAACG,IAAR,CAAaO,QAA7B;AACD,OAPD,MAOO;AACL;AACA,cAAKN,MAAL,GAAcJ,OAAO,CAACC,IAAtB;AACA,cAAKI,UAAL,GAAkBL,OAAO,CAACK,UAA1B;AACA,cAAKC,KAAL,GAAaN,OAAO,CAACO,QAArB;AACA,cAAKC,KAAL,GAAaR,OAAO,CAACW,QAArB;AACA,cAAKF,UAAL,GAAkBT,OAAO,CAACS,UAA1B;AACA,cAAKC,QAAL,GAAgBV,OAAO,CAACU,QAAxB;AACD;AACF;;AAED,UAAKE,IAAL,GAAY,cAAZ;;AACA,QAAK,+EAAD,CAAkFC,IAAlF,CAAuF,MAAKb,OAA5F,CAAJ,EAA0G;AACxG,YAAKA,OAAL,GAAec,MAAM,CAACC,EAAtB;AACD;;AAxByB;AAyB3B;;;EAjCwBlB,U;;AAoC3BmB,MAAM,CAACC,OAAP,GAAiBlB,YAAjB","sourcesContent":["'use strict'\r\n\r\nconst MSSQLError = require('./mssql-error')\r\n\r\n/**\r\n * Class RequestError.\r\n *\r\n * @property {String} number Error number.\r\n * @property {Number} lineNumber Line number.\r\n * @property {String} state Error state.\r\n * @property {String} class Error class.\r\n * @property {String} serverName Server name.\r\n * @property {String} procName Procedure name.\r\n */\r\n\r\nclass RequestError extends MSSQLError {\r\n  /**\r\n   * Creates a new RequestError.\r\n   *\r\n   * @param {String} message Error message.\r\n   * @param {String} [code] Error code.\r\n   */\r\n\r\n  constructor (message, code) {\r\n    super(message, code)\r\n    if (message instanceof Error) {\r\n      if (message.info) {\r\n        this.number = message.info.number || message.code // err.code is returned by msnodesql driver\r\n        this.lineNumber = message.info.lineNumber\r\n        this.state = message.info.state || message.sqlstate // err.sqlstate is returned by msnodesql driver\r\n        this.class = message.info.class\r\n        this.serverName = message.info.serverName\r\n        this.procName = message.info.procName\r\n      } else {\r\n        // Use err attributes returned by msnodesql driver\r\n        this.number = message.code\r\n        this.lineNumber = message.lineNumber\r\n        this.state = message.sqlstate\r\n        this.class = message.severity\r\n        this.serverName = message.serverName\r\n        this.procName = message.procName\r\n      }\r\n    }\r\n\r\n    this.name = 'RequestError'\r\n    if ((/^\\[Microsoft\\]\\[SQL Server Native Client 11\\.0\\](?:\\[SQL Server\\])?([\\s\\S]*)$/).exec(this.message)) {\r\n      this.message = RegExp.$1\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = RequestError\r\n"]},"metadata":{},"sourceType":"script"}