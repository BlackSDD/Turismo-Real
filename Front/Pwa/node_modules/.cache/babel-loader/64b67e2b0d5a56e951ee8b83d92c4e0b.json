{"ast":null,"code":"'use strict';\n/**\r\n * \"Shallow freezes\" an object to render it immutable.\r\n * Uses `Object.freeze` if available,\r\n * otherwise the immutability is only in the type.\r\n *\r\n * Is used to create \"enum like\" objects.\r\n *\r\n * @template T\r\n * @param {T} object the object to freeze\r\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\r\n * \t\t\t\tallows to inject custom object constructor for tests\r\n * @returns {Readonly<T>}\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n */\n\nfunction freeze(object, oc) {\n  if (oc === undefined) {\n    oc = Object;\n  }\n\n  return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n}\n/**\r\n * All mime types that are allowed as input to `DOMParser.parseFromString`\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\r\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\r\n * @see DOMParser.prototype.parseFromString\r\n */\n\n\nvar MIME_TYPE = freeze({\n  /**\r\n   * `text/html`, the only mime type that triggers treating an XML document as HTML.\r\n   *\r\n   * @see DOMParser.SupportedType.isHTML\r\n   * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\r\n   * @see https://en.wikipedia.org/wiki/HTML Wikipedia\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\r\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\r\n   */\n  HTML: 'text/html',\n\n  /**\r\n   * Helper method to check a mime type if it indicates an HTML document\r\n   *\r\n   * @param {string} [value]\r\n   * @returns {boolean}\r\n   *\r\n   * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\r\n   * @see https://en.wikipedia.org/wiki/HTML Wikipedia\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\r\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n  isHTML: function (value) {\n    return value === MIME_TYPE.HTML;\n  },\n\n  /**\r\n   * `application/xml`, the standard mime type for XML documents.\r\n   *\r\n   * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\r\n   * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\r\n   * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\r\n   */\n  XML_APPLICATION: 'application/xml',\n\n  /**\r\n   * `text/html`, an alias for `application/xml`.\r\n   *\r\n   * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\r\n   * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\r\n   * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\r\n   */\n  XML_TEXT: 'text/xml',\n\n  /**\r\n   * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\r\n   * but is parsed as an XML document.\r\n   *\r\n   * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\r\n   * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\r\n   * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\r\n   */\n  XML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n  /**\r\n   * `image/svg+xml`,\r\n   *\r\n   * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\r\n   * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\r\n   * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\r\n   */\n  XML_SVG_IMAGE: 'image/svg+xml'\n});\n/**\r\n * Namespaces that are used in this code base.\r\n *\r\n * @see http://www.w3.org/TR/REC-xml-names\r\n */\n\nvar NAMESPACE = freeze({\n  /**\r\n   * The XHTML namespace.\r\n   *\r\n   * @see http://www.w3.org/1999/xhtml\r\n   */\n  HTML: 'http://www.w3.org/1999/xhtml',\n\n  /**\r\n   * Checks if `uri` equals `NAMESPACE.HTML`.\r\n   *\r\n   * @param {string} [uri]\r\n   *\r\n   * @see NAMESPACE.HTML\r\n   */\n  isHTML: function (uri) {\n    return uri === NAMESPACE.HTML;\n  },\n\n  /**\r\n   * The SVG namespace.\r\n   *\r\n   * @see http://www.w3.org/2000/svg\r\n   */\n  SVG: 'http://www.w3.org/2000/svg',\n\n  /**\r\n   * The `xml:` namespace.\r\n   *\r\n   * @see http://www.w3.org/XML/1998/namespace\r\n   */\n  XML: 'http://www.w3.org/XML/1998/namespace',\n\n  /**\r\n   * The `xmlns:` namespace\r\n   *\r\n   * @see https://www.w3.org/2000/xmlns/\r\n   */\n  XMLNS: 'http://www.w3.org/2000/xmlns/'\n});\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;","map":{"version":3,"sources":["B:/Duoc/Portafolio_de_titulo/Git/Turismo-Real/Front/Pwa/node_modules/@xmldom/xmldom/lib/conventions.js"],"names":["freeze","object","oc","undefined","Object","MIME_TYPE","HTML","isHTML","value","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","uri","SVG","XML","XMLNS","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,EAAxB,EAA4B;AAC3B,MAAIA,EAAE,KAAKC,SAAX,EAAsB;AACrBD,IAAAA,EAAE,GAAGE,MAAL;AACA;;AACD,SAAOF,EAAE,IAAI,OAAOA,EAAE,CAACF,MAAV,KAAqB,UAA3B,GAAwCE,EAAE,CAACF,MAAH,CAAUC,MAAV,CAAxC,GAA4DA,MAAnE;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAII,SAAS,GAAGL,MAAM,CAAC;AACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCM,EAAAA,IAAI,EAAE,WAVgB;;AAYtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,MAAM,EAAE,UAAUC,KAAV,EAAiB;AACxB,WAAOA,KAAK,KAAKH,SAAS,CAACC,IAA3B;AACA,GAxBqB;;AA0BtB;AACD;AACA;AACA;AACA;AACA;AACA;AACCG,EAAAA,eAAe,EAAE,iBAjCK;;AAmCtB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,QAAQ,EAAE,UA1CY;;AA4CtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,qBAAqB,EAAE,uBApDD;;AAsDtB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,aAAa,EAAE;AA7DO,CAAD,CAAtB;AAgEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS,GAAGb,MAAM,CAAC;AACtB;AACD;AACA;AACA;AACA;AACCM,EAAAA,IAAI,EAAE,8BANgB;;AAQtB;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,MAAM,EAAE,UAAUO,GAAV,EAAe;AACtB,WAAOA,GAAG,KAAKD,SAAS,CAACP,IAAzB;AACA,GAjBqB;;AAmBtB;AACD;AACA;AACA;AACA;AACCS,EAAAA,GAAG,EAAE,4BAxBiB;;AA0BtB;AACD;AACA;AACA;AACA;AACCC,EAAAA,GAAG,EAAE,sCA/BiB;;AAiCtB;AACD;AACA;AACA;AACA;AACCC,EAAAA,KAAK,EAAE;AAtCe,CAAD,CAAtB;AAyCAC,OAAO,CAAClB,MAAR,GAAiBA,MAAjB;AACAkB,OAAO,CAACb,SAAR,GAAoBA,SAApB;AACAa,OAAO,CAACL,SAAR,GAAoBA,SAApB","sourcesContent":["'use strict'\r\n\r\n/**\r\n * \"Shallow freezes\" an object to render it immutable.\r\n * Uses `Object.freeze` if available,\r\n * otherwise the immutability is only in the type.\r\n *\r\n * Is used to create \"enum like\" objects.\r\n *\r\n * @template T\r\n * @param {T} object the object to freeze\r\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\r\n * \t\t\t\tallows to inject custom object constructor for tests\r\n * @returns {Readonly<T>}\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n */\r\nfunction freeze(object, oc) {\r\n\tif (oc === undefined) {\r\n\t\toc = Object\r\n\t}\r\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\r\n}\r\n\r\n/**\r\n * All mime types that are allowed as input to `DOMParser.parseFromString`\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\r\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\r\n * @see DOMParser.prototype.parseFromString\r\n */\r\nvar MIME_TYPE = freeze({\r\n\t/**\r\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\r\n\t *\r\n\t * @see DOMParser.SupportedType.isHTML\r\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\r\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\r\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\r\n\t */\r\n\tHTML: 'text/html',\r\n\r\n\t/**\r\n\t * Helper method to check a mime type if it indicates an HTML document\r\n\t *\r\n\t * @param {string} [value]\r\n\t * @returns {boolean}\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\r\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\r\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\r\n\tisHTML: function (value) {\r\n\t\treturn value === MIME_TYPE.HTML\r\n\t},\r\n\r\n\t/**\r\n\t * `application/xml`, the standard mime type for XML documents.\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\r\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\r\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\r\n\t */\r\n\tXML_APPLICATION: 'application/xml',\r\n\r\n\t/**\r\n\t * `text/html`, an alias for `application/xml`.\r\n\t *\r\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\r\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\r\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\r\n\t */\r\n\tXML_TEXT: 'text/xml',\r\n\r\n\t/**\r\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\r\n\t * but is parsed as an XML document.\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\r\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\r\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\r\n\t */\r\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\r\n\r\n\t/**\r\n\t * `image/svg+xml`,\r\n\t *\r\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\r\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\r\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\r\n\t */\r\n\tXML_SVG_IMAGE: 'image/svg+xml',\r\n})\r\n\r\n/**\r\n * Namespaces that are used in this code base.\r\n *\r\n * @see http://www.w3.org/TR/REC-xml-names\r\n */\r\nvar NAMESPACE = freeze({\r\n\t/**\r\n\t * The XHTML namespace.\r\n\t *\r\n\t * @see http://www.w3.org/1999/xhtml\r\n\t */\r\n\tHTML: 'http://www.w3.org/1999/xhtml',\r\n\r\n\t/**\r\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\r\n\t *\r\n\t * @param {string} [uri]\r\n\t *\r\n\t * @see NAMESPACE.HTML\r\n\t */\r\n\tisHTML: function (uri) {\r\n\t\treturn uri === NAMESPACE.HTML\r\n\t},\r\n\r\n\t/**\r\n\t * The SVG namespace.\r\n\t *\r\n\t * @see http://www.w3.org/2000/svg\r\n\t */\r\n\tSVG: 'http://www.w3.org/2000/svg',\r\n\r\n\t/**\r\n\t * The `xml:` namespace.\r\n\t *\r\n\t * @see http://www.w3.org/XML/1998/namespace\r\n\t */\r\n\tXML: 'http://www.w3.org/XML/1998/namespace',\r\n\r\n\t/**\r\n\t * The `xmlns:` namespace\r\n\t *\r\n\t * @see https://www.w3.org/2000/xmlns/\r\n\t */\r\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\r\n})\r\n\r\nexports.freeze = freeze;\r\nexports.MIME_TYPE = MIME_TYPE;\r\nexports.NAMESPACE = NAMESPACE;\r\n"]},"metadata":{},"sourceType":"script"}