{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\nexports.Transaction = exports.isolationLevelByValue = exports.ISOLATION_LEVEL = exports.OPERATION_TYPE = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\r\n  s2.2.6.8\r\n */\n\n\nvar OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nvar ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nvar isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\n\nfor (var name in ISOLATION_LEVEL) {\n  var value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\n\nfunction assertValidIsolationLevel(isolationLevel, name) {\n  if (typeof isolationLevel !== 'number') {\n    throw new TypeError(\"The \\\"\".concat(name, \"\\\" \").concat(name.includes('.') ? 'property' : 'argument', \" must be of type number. Received type \").concat(typeof isolationLevel, \" (\").concat(isolationLevel, \")\"));\n  }\n\n  if (!Number.isInteger(isolationLevel)) {\n    throw new RangeError(\"The value of \\\"\".concat(name, \"\\\" is out of range. It must be an integer. Received: \").concat(isolationLevel));\n  }\n\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\n    throw new RangeError(\"The value of \\\"\".concat(name, \"\\\" is out of range. It must be >= 0 && <= 5. Received: \").concat(isolationLevel));\n  }\n}\n\nvar Transaction = /*#__PURE__*/function () {\n  function Transaction(name) {\n    var isolationLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ISOLATION_LEVEL.NO_CHANGE;\n\n    _classCallCheck(this, Transaction);\n\n    this.name = void 0;\n    this.isolationLevel = void 0;\n    this.outstandingRequestCount = void 0;\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n\n  _createClass(Transaction, [{\n    key: \"beginPayload\",\n    value: function beginPayload(txnDescriptor) {\n      var _this = this,\n          _ref;\n\n      var buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n      buffer.writeUInt8(this.isolationLevel);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2');\n      return _ref = {}, _defineProperty(_ref, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return buffer.data;\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), _defineProperty(_ref, \"toString\", function toString() {\n        return 'Begin Transaction: name=' + _this.name + ', isolationLevel=' + isolationLevelByValue[_this.isolationLevel];\n      }), _ref;\n    }\n  }, {\n    key: \"commitPayload\",\n    value: function commitPayload(txnDescriptor) {\n      var _this2 = this,\n          _ref2;\n\n      var buffer = new _writableTrackingBuffer.default(100, 'ascii');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n      buffer.writeUInt8(0);\n      return _ref2 = {}, _defineProperty(_ref2, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return buffer.data;\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })), _defineProperty(_ref2, \"toString\", function toString() {\n        return 'Commit Transaction: name=' + _this2.name;\n      }), _ref2;\n    }\n  }, {\n    key: \"rollbackPayload\",\n    value: function rollbackPayload(txnDescriptor) {\n      var _this3 = this,\n          _ref3;\n\n      var buffer = new _writableTrackingBuffer.default(100, 'ascii');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n      buffer.writeUInt8(0);\n      return _ref3 = {}, _defineProperty(_ref3, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return buffer.data;\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })), _defineProperty(_ref3, \"toString\", function toString() {\n        return 'Rollback Transaction: name=' + _this3.name;\n      }), _ref3;\n    }\n  }, {\n    key: \"savePayload\",\n    value: function savePayload(txnDescriptor) {\n      var _this4 = this,\n          _ref4;\n\n      var buffer = new _writableTrackingBuffer.default(100, 'ascii');\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n      buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n      buffer.writeUInt8(this.name.length * 2);\n      buffer.writeString(this.name, 'ucs2');\n      return _ref4 = {}, _defineProperty(_ref4, Symbol.iterator, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return buffer.data;\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })), _defineProperty(_ref4, \"toString\", function toString() {\n        return 'Save Transaction: name=' + _this4.name;\n      }), _ref4;\n    }\n  }, {\n    key: \"isolationLevelToTSQL\",\n    value: function isolationLevelToTSQL() {\n      switch (this.isolationLevel) {\n        case ISOLATION_LEVEL.READ_UNCOMMITTED:\n          return 'READ UNCOMMITTED';\n\n        case ISOLATION_LEVEL.READ_COMMITTED:\n          return 'READ COMMITTED';\n\n        case ISOLATION_LEVEL.REPEATABLE_READ:\n          return 'REPEATABLE READ';\n\n        case ISOLATION_LEVEL.SERIALIZABLE:\n          return 'SERIALIZABLE';\n\n        case ISOLATION_LEVEL.SNAPSHOT:\n          return 'SNAPSHOT';\n      }\n\n      return '';\n    }\n  }]);\n\n  return Transaction;\n}();\n\nexports.Transaction = Transaction;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/transaction.js"],"names":["Object","defineProperty","exports","value","assertValidIsolationLevel","Transaction","isolationLevelByValue","ISOLATION_LEVEL","OPERATION_TYPE","_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","obj","__esModule","default","TM_GET_DTC_ADDRESS","TM_PROPAGATE_XACT","TM_BEGIN_XACT","TM_PROMOTE_XACT","TM_COMMIT_XACT","TM_ROLLBACK_XACT","TM_SAVE_XACT","NO_CHANGE","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT","name","isolationLevel","TypeError","includes","Number","isInteger","RangeError","outstandingRequestCount","txnDescriptor","buffer","writeToTrackingBuffer","writeUShort","writeUInt8","length","writeString","Symbol","iterator","data"],"mappings":"AAAA;;;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,yBAAR,GAAoCA,yBAApC;AACAF,OAAO,CAACG,WAAR,GAAsBH,OAAO,CAACI,qBAAR,GAAgCJ,OAAO,CAACK,eAAR,GAA0BL,OAAO,CAACM,cAAR,GAAyB,KAAK,CAA9G;;AAEA,IAAIC,uBAAuB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,4CAAD,CAAR,CAApD;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;;;AACA,IAAML,cAAc,GAAG;AACrBQ,EAAAA,kBAAkB,EAAE,IADC;AAErBC,EAAAA,iBAAiB,EAAE,IAFE;AAGrBC,EAAAA,aAAa,EAAE,IAHM;AAIrBC,EAAAA,eAAe,EAAE,IAJI;AAKrBC,EAAAA,cAAc,EAAE,IALK;AAMrBC,EAAAA,gBAAgB,EAAE,IANG;AAOrBC,EAAAA,YAAY,EAAE;AAPO,CAAvB;AASApB,OAAO,CAACM,cAAR,GAAyBA,cAAzB;AACA,IAAMD,eAAe,GAAG;AACtBgB,EAAAA,SAAS,EAAE,IADW;AAEtBC,EAAAA,gBAAgB,EAAE,IAFI;AAGtBC,EAAAA,cAAc,EAAE,IAHM;AAItBC,EAAAA,eAAe,EAAE,IAJK;AAKtBC,EAAAA,YAAY,EAAE,IALQ;AAMtBC,EAAAA,QAAQ,EAAE;AANY,CAAxB;AAQA1B,OAAO,CAACK,eAAR,GAA0BA,eAA1B;AACA,IAAMD,qBAAqB,GAAG,EAA9B;AACAJ,OAAO,CAACI,qBAAR,GAAgCA,qBAAhC;;AAEA,KAAK,IAAMuB,IAAX,IAAmBtB,eAAnB,EAAoC;AAClC,MAAMJ,KAAK,GAAGI,eAAe,CAACsB,IAAD,CAA7B;AACAvB,EAAAA,qBAAqB,CAACH,KAAD,CAArB,GAA+B0B,IAA/B;AACD;;AAED,SAASzB,yBAAT,CAAmC0B,cAAnC,EAAmDD,IAAnD,EAAyD;AACvD,MAAI,OAAOC,cAAP,KAA0B,QAA9B,EAAwC;AACtC,UAAM,IAAIC,SAAJ,iBAAsBF,IAAtB,gBAA+BA,IAAI,CAACG,QAAL,CAAc,GAAd,IAAqB,UAArB,GAAkC,UAAjE,oDAAqH,OAAOF,cAA5H,eAA+IA,cAA/I,OAAN;AACD;;AAED,MAAI,CAACG,MAAM,CAACC,SAAP,CAAiBJ,cAAjB,CAAL,EAAuC;AACrC,UAAM,IAAIK,UAAJ,0BAAgCN,IAAhC,kEAA2FC,cAA3F,EAAN;AACD;;AAED,MAAI,EAAEA,cAAc,IAAI,CAAlB,IAAuBA,cAAc,IAAI,CAA3C,CAAJ,EAAmD;AACjD,UAAM,IAAIK,UAAJ,0BAAgCN,IAAhC,oEAA6FC,cAA7F,EAAN;AACD;AACF;;IAEKzB,W;AACJ,uBAAYwB,IAAZ,EAA8D;AAAA,QAA5CC,cAA4C,uEAA3BvB,eAAe,CAACgB,SAAW;;AAAA;;AAC5D,SAAKM,IAAL,GAAY,KAAK,CAAjB;AACA,SAAKC,cAAL,GAAsB,KAAK,CAA3B;AACA,SAAKM,uBAAL,GAA+B,KAAK,CAApC;AACA,SAAKP,IAAL,GAAYA,IAAZ;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKM,uBAAL,GAA+B,CAA/B;AACD;;;;WAED,sBAAaC,aAAb,EAA4B;AAAA;AAAA;;AAC1B,UAAMC,MAAM,GAAG,IAAI7B,uBAAuB,CAACM,OAA5B,CAAoC,GAApC,EAAyC,MAAzC,CAAf;AACA,OAAC,GAAGH,WAAW,CAAC2B,qBAAhB,EAAuCD,MAAvC,EAA+CD,aAA/C,EAA8D,KAAKD,uBAAnE;AACAE,MAAAA,MAAM,CAACE,WAAP,CAAmBhC,cAAc,CAACU,aAAlC;AACAoB,MAAAA,MAAM,CAACG,UAAP,CAAkB,KAAKX,cAAvB;AACAQ,MAAAA,MAAM,CAACG,UAAP,CAAkB,KAAKZ,IAAL,CAAUa,MAAV,GAAmB,CAArC;AACAJ,MAAAA,MAAM,CAACK,WAAP,CAAmB,KAAKd,IAAxB,EAA8B,MAA9B;AACA,8CACIe,MAAM,CAACC,QADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,uBAAMP,MAAM,CAACQ,IAAb;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKY,oBAAM;AACd,eAAO,6BAA6B,KAAI,CAACjB,IAAlC,GAAyC,mBAAzC,GAA+DvB,qBAAqB,CAAC,KAAI,CAACwB,cAAN,CAA3F;AACD,OAPH;AASD;;;WAED,uBAAcO,aAAd,EAA6B;AAAA;AAAA;;AAC3B,UAAMC,MAAM,GAAG,IAAI7B,uBAAuB,CAACM,OAA5B,CAAoC,GAApC,EAAyC,OAAzC,CAAf;AACA,OAAC,GAAGH,WAAW,CAAC2B,qBAAhB,EAAuCD,MAAvC,EAA+CD,aAA/C,EAA8D,KAAKD,uBAAnE;AACAE,MAAAA,MAAM,CAACE,WAAP,CAAmBhC,cAAc,CAACY,cAAlC;AACAkB,MAAAA,MAAM,CAACG,UAAP,CAAkB,KAAKZ,IAAL,CAAUa,MAAV,GAAmB,CAArC;AACAJ,MAAAA,MAAM,CAACK,WAAP,CAAmB,KAAKd,IAAxB,EAA8B,MAA9B,EAL2B,CAKY;;AAEvCS,MAAAA,MAAM,CAACG,UAAP,CAAkB,CAAlB;AACA,gDACIG,MAAM,CAACC,QADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,uBAAMP,MAAM,CAACQ,IAAb;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAKY,oBAAM;AACd,eAAO,8BAA8B,MAAI,CAACjB,IAA1C;AACD,OAPH;AASD;;;WAED,yBAAgBQ,aAAhB,EAA+B;AAAA;AAAA;;AAC7B,UAAMC,MAAM,GAAG,IAAI7B,uBAAuB,CAACM,OAA5B,CAAoC,GAApC,EAAyC,OAAzC,CAAf;AACA,OAAC,GAAGH,WAAW,CAAC2B,qBAAhB,EAAuCD,MAAvC,EAA+CD,aAA/C,EAA8D,KAAKD,uBAAnE;AACAE,MAAAA,MAAM,CAACE,WAAP,CAAmBhC,cAAc,CAACa,gBAAlC;AACAiB,MAAAA,MAAM,CAACG,UAAP,CAAkB,KAAKZ,IAAL,CAAUa,MAAV,GAAmB,CAArC;AACAJ,MAAAA,MAAM,CAACK,WAAP,CAAmB,KAAKd,IAAxB,EAA8B,MAA9B,EAL6B,CAKU;;AAEvCS,MAAAA,MAAM,CAACG,UAAP,CAAkB,CAAlB;AACA,gDACIG,MAAM,CAACC,QADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,uBAAMP,MAAM,CAACQ,IAAb;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAKY,oBAAM;AACd,eAAO,gCAAgC,MAAI,CAACjB,IAA5C;AACD,OAPH;AASD;;;WAED,qBAAYQ,aAAZ,EAA2B;AAAA;AAAA;;AACzB,UAAMC,MAAM,GAAG,IAAI7B,uBAAuB,CAACM,OAA5B,CAAoC,GAApC,EAAyC,OAAzC,CAAf;AACA,OAAC,GAAGH,WAAW,CAAC2B,qBAAhB,EAAuCD,MAAvC,EAA+CD,aAA/C,EAA8D,KAAKD,uBAAnE;AACAE,MAAAA,MAAM,CAACE,WAAP,CAAmBhC,cAAc,CAACc,YAAlC;AACAgB,MAAAA,MAAM,CAACG,UAAP,CAAkB,KAAKZ,IAAL,CAAUa,MAAV,GAAmB,CAArC;AACAJ,MAAAA,MAAM,CAACK,WAAP,CAAmB,KAAKd,IAAxB,EAA8B,MAA9B;AACA,gDACIe,MAAM,CAACC,QADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,uBAAMP,MAAM,CAACQ,IAAb;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAKY,oBAAM;AACd,eAAO,4BAA4B,MAAI,CAACjB,IAAxC;AACD,OAPH;AASD;;;WAED,gCAAuB;AACrB,cAAQ,KAAKC,cAAb;AACE,aAAKvB,eAAe,CAACiB,gBAArB;AACE,iBAAO,kBAAP;;AAEF,aAAKjB,eAAe,CAACkB,cAArB;AACE,iBAAO,gBAAP;;AAEF,aAAKlB,eAAe,CAACmB,eAArB;AACE,iBAAO,iBAAP;;AAEF,aAAKnB,eAAe,CAACoB,YAArB;AACE,iBAAO,cAAP;;AAEF,aAAKpB,eAAe,CAACqB,QAArB;AACE,iBAAO,UAAP;AAdJ;;AAiBA,aAAO,EAAP;AACD;;;;;;AAIH1B,OAAO,CAACG,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.assertValidIsolationLevel = assertValidIsolationLevel;\r\nexports.Transaction = exports.isolationLevelByValue = exports.ISOLATION_LEVEL = exports.OPERATION_TYPE = void 0;\r\n\r\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\r\n\r\nvar _allHeaders = require(\"./all-headers\");\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/*\r\n  s2.2.6.8\r\n */\r\nconst OPERATION_TYPE = {\r\n  TM_GET_DTC_ADDRESS: 0x00,\r\n  TM_PROPAGATE_XACT: 0x01,\r\n  TM_BEGIN_XACT: 0x05,\r\n  TM_PROMOTE_XACT: 0x06,\r\n  TM_COMMIT_XACT: 0x07,\r\n  TM_ROLLBACK_XACT: 0x08,\r\n  TM_SAVE_XACT: 0x09\r\n};\r\nexports.OPERATION_TYPE = OPERATION_TYPE;\r\nconst ISOLATION_LEVEL = {\r\n  NO_CHANGE: 0x00,\r\n  READ_UNCOMMITTED: 0x01,\r\n  READ_COMMITTED: 0x02,\r\n  REPEATABLE_READ: 0x03,\r\n  SERIALIZABLE: 0x04,\r\n  SNAPSHOT: 0x05\r\n};\r\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\r\nconst isolationLevelByValue = {};\r\nexports.isolationLevelByValue = isolationLevelByValue;\r\n\r\nfor (const name in ISOLATION_LEVEL) {\r\n  const value = ISOLATION_LEVEL[name];\r\n  isolationLevelByValue[value] = name;\r\n}\r\n\r\nfunction assertValidIsolationLevel(isolationLevel, name) {\r\n  if (typeof isolationLevel !== 'number') {\r\n    throw new TypeError(`The \"${name}\" ${name.includes('.') ? 'property' : 'argument'} must be of type number. Received type ${typeof isolationLevel} (${isolationLevel})`);\r\n  }\r\n\r\n  if (!Number.isInteger(isolationLevel)) {\r\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be an integer. Received: ${isolationLevel}`);\r\n  }\r\n\r\n  if (!(isolationLevel >= 0 && isolationLevel <= 5)) {\r\n    throw new RangeError(`The value of \"${name}\" is out of range. It must be >= 0 && <= 5. Received: ${isolationLevel}`);\r\n  }\r\n}\r\n\r\nclass Transaction {\r\n  constructor(name, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\r\n    this.name = void 0;\r\n    this.isolationLevel = void 0;\r\n    this.outstandingRequestCount = void 0;\r\n    this.name = name;\r\n    this.isolationLevel = isolationLevel;\r\n    this.outstandingRequestCount = 1;\r\n  }\r\n\r\n  beginPayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\r\n    buffer.writeUInt8(this.isolationLevel);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2');\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\r\n      }\r\n    };\r\n  }\r\n\r\n  commitPayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\r\n\r\n    buffer.writeUInt8(0);\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Commit Transaction: name=' + this.name;\r\n      }\r\n    };\r\n  }\r\n\r\n  rollbackPayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\r\n\r\n    buffer.writeUInt8(0);\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Rollback Transaction: name=' + this.name;\r\n      }\r\n    };\r\n  }\r\n\r\n  savePayload(txnDescriptor) {\r\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\r\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\r\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\r\n    buffer.writeUInt8(this.name.length * 2);\r\n    buffer.writeString(this.name, 'ucs2');\r\n    return {\r\n      *[Symbol.iterator]() {\r\n        yield buffer.data;\r\n      },\r\n\r\n      toString: () => {\r\n        return 'Save Transaction: name=' + this.name;\r\n      }\r\n    };\r\n  }\r\n\r\n  isolationLevelToTSQL() {\r\n    switch (this.isolationLevel) {\r\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\r\n        return 'READ UNCOMMITTED';\r\n\r\n      case ISOLATION_LEVEL.READ_COMMITTED:\r\n        return 'READ COMMITTED';\r\n\r\n      case ISOLATION_LEVEL.REPEATABLE_READ:\r\n        return 'REPEATABLE READ';\r\n\r\n      case ISOLATION_LEVEL.SERIALIZABLE:\r\n        return 'SERIALIZABLE';\r\n\r\n      case ISOLATION_LEVEL.SNAPSHOT:\r\n        return 'SNAPSHOT';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n}\r\n\r\nexports.Transaction = Transaction;"]},"metadata":{},"sourceType":"script"}