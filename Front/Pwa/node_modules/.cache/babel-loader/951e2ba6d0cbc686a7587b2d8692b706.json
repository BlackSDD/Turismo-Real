{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\n/**\r\n * The different levels of logs that can be used with the HttpPipelineLogger.\r\n */\nexport var HttpPipelineLogLevel;\n\n(function (HttpPipelineLogLevel) {\n  /**\r\n   * A log level that indicates that no logs will be logged.\r\n   */\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n  /**\r\n   * An error log.\r\n   */\n\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n  /**\r\n   * A warning log.\r\n   */\n\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n  /**\r\n   * An information log.\r\n   */\n\n  HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));","map":{"version":3,"sources":["../../lib/httpPipelineLogLevel.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA;;AAEG;AACH,OAAA,IAAY,oBAAZ;;AAAA,CAAA,UAAY,oBAAZ,EAAgC;AAC9B;;AAEG;AACH,EAAA,oBAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AAEA;;AAEG;;AACH,EAAA,oBAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AAEA;;AAEG;;AACH,EAAA,oBAAA,CAAA,oBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AAEA;;AAEG;;AACH,EAAA,oBAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACD,CApBD,EAAY,oBAAoB,KAApB,oBAAoB,GAAA,EAAA,CAAhC","sourceRoot":"","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License. See License.txt in the project root for license information.\r\n/**\r\n * The different levels of logs that can be used with the HttpPipelineLogger.\r\n */\r\nexport var HttpPipelineLogLevel;\r\n(function (HttpPipelineLogLevel) {\r\n    /**\r\n     * A log level that indicates that no logs will be logged.\r\n     */\r\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\r\n    /**\r\n     * An error log.\r\n     */\r\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\r\n    /**\r\n     * A warning log.\r\n     */\r\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\r\n    /**\r\n     * An information log.\r\n     */\r\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\r\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\r\n//# sourceMappingURL=httpPipelineLogLevel.js.map"]},"metadata":{},"sourceType":"module"}