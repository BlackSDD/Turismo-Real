{"ast":null,"code":"'use strict';\n\nconst objectHasProperty = require('./utils').objectHasProperty;\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst TYPES = {\n  VarChar(length) {\n    return {\n      type: TYPES.VarChar,\n      length\n    };\n  },\n\n  NVarChar(length) {\n    return {\n      type: TYPES.NVarChar,\n      length\n    };\n  },\n\n  Text() {\n    return {\n      type: TYPES.Text\n    };\n  },\n\n  Int() {\n    return {\n      type: TYPES.Int\n    };\n  },\n\n  BigInt() {\n    return {\n      type: TYPES.BigInt\n    };\n  },\n\n  TinyInt() {\n    return {\n      type: TYPES.TinyInt\n    };\n  },\n\n  SmallInt() {\n    return {\n      type: TYPES.SmallInt\n    };\n  },\n\n  Bit() {\n    return {\n      type: TYPES.Bit\n    };\n  },\n\n  Float() {\n    return {\n      type: TYPES.Float\n    };\n  },\n\n  Numeric(precision, scale) {\n    return {\n      type: TYPES.Numeric,\n      precision,\n      scale\n    };\n  },\n\n  Decimal(precision, scale) {\n    return {\n      type: TYPES.Decimal,\n      precision,\n      scale\n    };\n  },\n\n  Real() {\n    return {\n      type: TYPES.Real\n    };\n  },\n\n  Date() {\n    return {\n      type: TYPES.Date\n    };\n  },\n\n  DateTime() {\n    return {\n      type: TYPES.DateTime\n    };\n  },\n\n  DateTime2(scale) {\n    return {\n      type: TYPES.DateTime2,\n      scale\n    };\n  },\n\n  DateTimeOffset(scale) {\n    return {\n      type: TYPES.DateTimeOffset,\n      scale\n    };\n  },\n\n  SmallDateTime() {\n    return {\n      type: TYPES.SmallDateTime\n    };\n  },\n\n  Time(scale) {\n    return {\n      type: TYPES.Time,\n      scale\n    };\n  },\n\n  UniqueIdentifier() {\n    return {\n      type: TYPES.UniqueIdentifier\n    };\n  },\n\n  SmallMoney() {\n    return {\n      type: TYPES.SmallMoney\n    };\n  },\n\n  Money() {\n    return {\n      type: TYPES.Money\n    };\n  },\n\n  Binary(length) {\n    return {\n      type: TYPES.Binary,\n      length\n    };\n  },\n\n  VarBinary(length) {\n    return {\n      type: TYPES.VarBinary,\n      length\n    };\n  },\n\n  Image() {\n    return {\n      type: TYPES.Image\n    };\n  },\n\n  Xml() {\n    return {\n      type: TYPES.Xml\n    };\n  },\n\n  Char(length) {\n    return {\n      type: TYPES.Char,\n      length\n    };\n  },\n\n  NChar(length) {\n    return {\n      type: TYPES.NChar,\n      length\n    };\n  },\n\n  NText() {\n    return {\n      type: TYPES.NText\n    };\n  },\n\n  TVP(tvpType) {\n    return {\n      type: TYPES.TVP,\n      tvpType\n    };\n  },\n\n  UDT() {\n    return {\n      type: TYPES.UDT\n    };\n  },\n\n  Geography() {\n    return {\n      type: TYPES.Geography\n    };\n  },\n\n  Geometry() {\n    return {\n      type: TYPES.Geometry\n    };\n  },\n\n  Variant() {\n    return {\n      type: TYPES.Variant\n    };\n  }\n\n};\nmodule.exports.TYPES = TYPES;\nmodule.exports.DECLARATIONS = {};\n\nconst zero = function (value, length) {\n  if (length == null) length = 2;\n  value = String(value);\n\n  if (value.length < length) {\n    for (let i = 1; i <= length - value.length; i++) {\n      value = `0${value}`;\n    }\n  }\n\n  return value;\n};\n\nfor (const key in TYPES) {\n  if (objectHasProperty(TYPES, key)) {\n    const value = TYPES[key];\n    value.declaration = key.toLowerCase();\n    module.exports.DECLARATIONS[value.declaration] = value;\n\n    ((key, value) => {\n      value[inspect] = () => `[sql.${key}]`;\n    })(key, value);\n  }\n}\n\nmodule.exports.declare = (type, options) => {\n  switch (type) {\n    case TYPES.VarChar:\n    case TYPES.VarBinary:\n      return `${type.declaration} (${options.length > 8000 ? 'MAX' : options.length == null ? 'MAX' : options.length})`;\n\n    case TYPES.NVarChar:\n      return `${type.declaration} (${options.length > 4000 ? 'MAX' : options.length == null ? 'MAX' : options.length})`;\n\n    case TYPES.Char:\n    case TYPES.NChar:\n    case TYPES.Binary:\n      return `${type.declaration} (${options.length == null ? 1 : options.length})`;\n\n    case TYPES.Decimal:\n    case TYPES.Numeric:\n      return `${type.declaration} (${options.precision == null ? 18 : options.precision}, ${options.scale == null ? 0 : options.scale})`;\n\n    case TYPES.Time:\n    case TYPES.DateTime2:\n    case TYPES.DateTimeOffset:\n      return `${type.declaration} (${options.scale == null ? 7 : options.scale})`;\n\n    case TYPES.TVP:\n      return `${options.tvpType} readonly`;\n\n    default:\n      return type.declaration;\n  }\n};\n\nmodule.exports.cast = (value, type, options) => {\n  if (value == null) {\n    return null;\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return `N'${value.replace(/'/g, '\\'\\'')}'`;\n\n    case 'number':\n      return value;\n\n    case 'boolean':\n      return value ? 1 : 0;\n\n    case 'object':\n      if (value instanceof Date) {\n        let ns = value.getUTCMilliseconds() / 1000;\n\n        if (value.nanosecondDelta != null) {\n          ns += value.nanosecondDelta;\n        }\n\n        const scale = options.scale == null ? 7 : options.scale;\n\n        if (scale > 0) {\n          ns = String(ns).substr(1, scale + 1);\n        } else {\n          ns = '';\n        }\n\n        return `N'${value.getUTCFullYear()}-${zero(value.getUTCMonth() + 1)}-${zero(value.getUTCDate())} ${zero(value.getUTCHours())}:${zero(value.getUTCMinutes())}:${zero(value.getUTCSeconds())}${ns}'`;\n      } else if (Buffer.isBuffer(value)) {\n        return `0x${value.toString('hex')}`;\n      }\n\n      return null;\n\n    default:\n      return null;\n  }\n};","map":{"version":3,"sources":["B:/Duoc/Portafolio_de_titulo/Git/Turismo-Real/Front/Pwa/node_modules/mssql/lib/datatypes.js"],"names":["objectHasProperty","require","inspect","Symbol","for","TYPES","VarChar","length","type","NVarChar","Text","Int","BigInt","TinyInt","SmallInt","Bit","Float","Numeric","precision","scale","Decimal","Real","Date","DateTime","DateTime2","DateTimeOffset","SmallDateTime","Time","UniqueIdentifier","SmallMoney","Money","Binary","VarBinary","Image","Xml","Char","NChar","NText","TVP","tvpType","UDT","Geography","Geometry","Variant","module","exports","DECLARATIONS","zero","value","String","i","key","declaration","toLowerCase","declare","options","cast","replace","ns","getUTCMilliseconds","nanosecondDelta","substr","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Buffer","isBuffer","toString"],"mappings":"AAAA;;AACA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,iBAA7C;;AACA,MAAME,OAAO,GAAGC,MAAM,CAACC,GAAP,CAAW,4BAAX,CAAhB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,CAAEC,MAAF,EAAU;AACf,WAAO;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACC,OAAd;AAAuBC,MAAAA;AAAvB,KAAP;AACD,GAHW;;AAIZE,EAAAA,QAAQ,CAAEF,MAAF,EAAU;AAChB,WAAO;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACI,QAAd;AAAwBF,MAAAA;AAAxB,KAAP;AACD,GANW;;AAOZG,EAAAA,IAAI,GAAI;AACN,WAAO;AAAEF,MAAAA,IAAI,EAAEH,KAAK,CAACK;AAAd,KAAP;AACD,GATW;;AAUZC,EAAAA,GAAG,GAAI;AACL,WAAO;AAAEH,MAAAA,IAAI,EAAEH,KAAK,CAACM;AAAd,KAAP;AACD,GAZW;;AAaZC,EAAAA,MAAM,GAAI;AACR,WAAO;AAAEJ,MAAAA,IAAI,EAAEH,KAAK,CAACO;AAAd,KAAP;AACD,GAfW;;AAgBZC,EAAAA,OAAO,GAAI;AACT,WAAO;AAAEL,MAAAA,IAAI,EAAEH,KAAK,CAACQ;AAAd,KAAP;AACD,GAlBW;;AAmBZC,EAAAA,QAAQ,GAAI;AACV,WAAO;AAAEN,MAAAA,IAAI,EAAEH,KAAK,CAACS;AAAd,KAAP;AACD,GArBW;;AAsBZC,EAAAA,GAAG,GAAI;AACL,WAAO;AAAEP,MAAAA,IAAI,EAAEH,KAAK,CAACU;AAAd,KAAP;AACD,GAxBW;;AAyBZC,EAAAA,KAAK,GAAI;AACP,WAAO;AAAER,MAAAA,IAAI,EAAEH,KAAK,CAACW;AAAd,KAAP;AACD,GA3BW;;AA4BZC,EAAAA,OAAO,CAAEC,SAAF,EAAaC,KAAb,EAAoB;AACzB,WAAO;AAAEX,MAAAA,IAAI,EAAEH,KAAK,CAACY,OAAd;AAAuBC,MAAAA,SAAvB;AAAkCC,MAAAA;AAAlC,KAAP;AACD,GA9BW;;AA+BZC,EAAAA,OAAO,CAAEF,SAAF,EAAaC,KAAb,EAAoB;AACzB,WAAO;AAAEX,MAAAA,IAAI,EAAEH,KAAK,CAACe,OAAd;AAAuBF,MAAAA,SAAvB;AAAkCC,MAAAA;AAAlC,KAAP;AACD,GAjCW;;AAkCZE,EAAAA,IAAI,GAAI;AACN,WAAO;AAAEb,MAAAA,IAAI,EAAEH,KAAK,CAACgB;AAAd,KAAP;AACD,GApCW;;AAqCZC,EAAAA,IAAI,GAAI;AACN,WAAO;AAAEd,MAAAA,IAAI,EAAEH,KAAK,CAACiB;AAAd,KAAP;AACD,GAvCW;;AAwCZC,EAAAA,QAAQ,GAAI;AACV,WAAO;AAAEf,MAAAA,IAAI,EAAEH,KAAK,CAACkB;AAAd,KAAP;AACD,GA1CW;;AA2CZC,EAAAA,SAAS,CAAEL,KAAF,EAAS;AAChB,WAAO;AAAEX,MAAAA,IAAI,EAAEH,KAAK,CAACmB,SAAd;AAAyBL,MAAAA;AAAzB,KAAP;AACD,GA7CW;;AA8CZM,EAAAA,cAAc,CAAEN,KAAF,EAAS;AACrB,WAAO;AAAEX,MAAAA,IAAI,EAAEH,KAAK,CAACoB,cAAd;AAA8BN,MAAAA;AAA9B,KAAP;AACD,GAhDW;;AAiDZO,EAAAA,aAAa,GAAI;AACf,WAAO;AAAElB,MAAAA,IAAI,EAAEH,KAAK,CAACqB;AAAd,KAAP;AACD,GAnDW;;AAoDZC,EAAAA,IAAI,CAAER,KAAF,EAAS;AACX,WAAO;AAAEX,MAAAA,IAAI,EAAEH,KAAK,CAACsB,IAAd;AAAoBR,MAAAA;AAApB,KAAP;AACD,GAtDW;;AAuDZS,EAAAA,gBAAgB,GAAI;AAClB,WAAO;AAAEpB,MAAAA,IAAI,EAAEH,KAAK,CAACuB;AAAd,KAAP;AACD,GAzDW;;AA0DZC,EAAAA,UAAU,GAAI;AACZ,WAAO;AAAErB,MAAAA,IAAI,EAAEH,KAAK,CAACwB;AAAd,KAAP;AACD,GA5DW;;AA6DZC,EAAAA,KAAK,GAAI;AACP,WAAO;AAAEtB,MAAAA,IAAI,EAAEH,KAAK,CAACyB;AAAd,KAAP;AACD,GA/DW;;AAgEZC,EAAAA,MAAM,CAAExB,MAAF,EAAU;AACd,WAAO;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAAC0B,MAAd;AAAsBxB,MAAAA;AAAtB,KAAP;AACD,GAlEW;;AAmEZyB,EAAAA,SAAS,CAAEzB,MAAF,EAAU;AACjB,WAAO;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAAC2B,SAAd;AAAyBzB,MAAAA;AAAzB,KAAP;AACD,GArEW;;AAsEZ0B,EAAAA,KAAK,GAAI;AACP,WAAO;AAAEzB,MAAAA,IAAI,EAAEH,KAAK,CAAC4B;AAAd,KAAP;AACD,GAxEW;;AAyEZC,EAAAA,GAAG,GAAI;AACL,WAAO;AAAE1B,MAAAA,IAAI,EAAEH,KAAK,CAAC6B;AAAd,KAAP;AACD,GA3EW;;AA4EZC,EAAAA,IAAI,CAAE5B,MAAF,EAAU;AACZ,WAAO;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAAC8B,IAAd;AAAoB5B,MAAAA;AAApB,KAAP;AACD,GA9EW;;AA+EZ6B,EAAAA,KAAK,CAAE7B,MAAF,EAAU;AACb,WAAO;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAAC+B,KAAd;AAAqB7B,MAAAA;AAArB,KAAP;AACD,GAjFW;;AAkFZ8B,EAAAA,KAAK,GAAI;AACP,WAAO;AAAE7B,MAAAA,IAAI,EAAEH,KAAK,CAACgC;AAAd,KAAP;AACD,GApFW;;AAqFZC,EAAAA,GAAG,CAAEC,OAAF,EAAW;AACZ,WAAO;AAAE/B,MAAAA,IAAI,EAAEH,KAAK,CAACiC,GAAd;AAAmBC,MAAAA;AAAnB,KAAP;AACD,GAvFW;;AAwFZC,EAAAA,GAAG,GAAI;AACL,WAAO;AAAEhC,MAAAA,IAAI,EAAEH,KAAK,CAACmC;AAAd,KAAP;AACD,GA1FW;;AA2FZC,EAAAA,SAAS,GAAI;AACX,WAAO;AAAEjC,MAAAA,IAAI,EAAEH,KAAK,CAACoC;AAAd,KAAP;AACD,GA7FW;;AA8FZC,EAAAA,QAAQ,GAAI;AACV,WAAO;AAAElC,MAAAA,IAAI,EAAEH,KAAK,CAACqC;AAAd,KAAP;AACD,GAhGW;;AAiGZC,EAAAA,OAAO,GAAI;AACT,WAAO;AAAEnC,MAAAA,IAAI,EAAEH,KAAK,CAACsC;AAAd,KAAP;AACD;;AAnGW,CAAd;AAsGAC,MAAM,CAACC,OAAP,CAAexC,KAAf,GAAuBA,KAAvB;AACAuC,MAAM,CAACC,OAAP,CAAeC,YAAf,GAA8B,EAA9B;;AAEA,MAAMC,IAAI,GAAG,UAAUC,KAAV,EAAiBzC,MAAjB,EAAyB;AACpC,MAAIA,MAAM,IAAI,IAAd,EAAoBA,MAAM,GAAG,CAAT;AAEpByC,EAAAA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAd;;AACA,MAAIA,KAAK,CAACzC,MAAN,GAAeA,MAAnB,EAA2B;AACzB,SAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI3C,MAAM,GAAGyC,KAAK,CAACzC,MAApC,EAA4C2C,CAAC,EAA7C,EAAiD;AAC/CF,MAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACD;AACF;;AACD,SAAOA,KAAP;AACD,CAVD;;AAYA,KAAK,MAAMG,GAAX,IAAkB9C,KAAlB,EAAyB;AACvB,MAAIL,iBAAiB,CAACK,KAAD,EAAQ8C,GAAR,CAArB,EAAmC;AACjC,UAAMH,KAAK,GAAG3C,KAAK,CAAC8C,GAAD,CAAnB;AACAH,IAAAA,KAAK,CAACI,WAAN,GAAoBD,GAAG,CAACE,WAAJ,EAApB;AACAT,IAAAA,MAAM,CAACC,OAAP,CAAeC,YAAf,CAA4BE,KAAK,CAACI,WAAlC,IAAiDJ,KAAjD;;AAEA,KAAC,CAACG,GAAD,EAAMH,KAAN,KAAgB;AACfA,MAAAA,KAAK,CAAC9C,OAAD,CAAL,GAAiB,MAAO,QAAOiD,GAAI,GAAnC;AACD,KAFD,EAEGA,GAFH,EAEQH,KAFR;AAGD;AACF;;AAEDJ,MAAM,CAACC,OAAP,CAAeS,OAAf,GAAyB,CAAC9C,IAAD,EAAO+C,OAAP,KAAmB;AAC1C,UAAQ/C,IAAR;AACE,SAAKH,KAAK,CAACC,OAAX;AAAoB,SAAKD,KAAK,CAAC2B,SAAX;AAClB,aAAQ,GAAExB,IAAI,CAAC4C,WAAY,KAAIG,OAAO,CAAChD,MAAR,GAAiB,IAAjB,GAAwB,KAAxB,GAAiCgD,OAAO,CAAChD,MAAR,IAAkB,IAAlB,GAAyB,KAAzB,GAAiCgD,OAAO,CAAChD,MAAQ,GAAjH;;AACF,SAAKF,KAAK,CAACI,QAAX;AACE,aAAQ,GAAED,IAAI,CAAC4C,WAAY,KAAIG,OAAO,CAAChD,MAAR,GAAiB,IAAjB,GAAwB,KAAxB,GAAiCgD,OAAO,CAAChD,MAAR,IAAkB,IAAlB,GAAyB,KAAzB,GAAiCgD,OAAO,CAAChD,MAAQ,GAAjH;;AACF,SAAKF,KAAK,CAAC8B,IAAX;AAAiB,SAAK9B,KAAK,CAAC+B,KAAX;AAAkB,SAAK/B,KAAK,CAAC0B,MAAX;AACjC,aAAQ,GAAEvB,IAAI,CAAC4C,WAAY,KAAIG,OAAO,CAAChD,MAAR,IAAkB,IAAlB,GAAyB,CAAzB,GAA6BgD,OAAO,CAAChD,MAAO,GAA3E;;AACF,SAAKF,KAAK,CAACe,OAAX;AAAoB,SAAKf,KAAK,CAACY,OAAX;AAClB,aAAQ,GAAET,IAAI,CAAC4C,WAAY,KAAIG,OAAO,CAACrC,SAAR,IAAqB,IAArB,GAA4B,EAA5B,GAAiCqC,OAAO,CAACrC,SAAU,KAAIqC,OAAO,CAACpC,KAAR,IAAiB,IAAjB,GAAwB,CAAxB,GAA4BoC,OAAO,CAACpC,KAAM,GAAhI;;AACF,SAAKd,KAAK,CAACsB,IAAX;AAAiB,SAAKtB,KAAK,CAACmB,SAAX;AAAsB,SAAKnB,KAAK,CAACoB,cAAX;AACrC,aAAQ,GAAEjB,IAAI,CAAC4C,WAAY,KAAIG,OAAO,CAACpC,KAAR,IAAiB,IAAjB,GAAwB,CAAxB,GAA4BoC,OAAO,CAACpC,KAAM,GAAzE;;AACF,SAAKd,KAAK,CAACiC,GAAX;AACE,aAAQ,GAAEiB,OAAO,CAAChB,OAAQ,WAA1B;;AACF;AACE,aAAO/B,IAAI,CAAC4C,WAAZ;AAdJ;AAgBD,CAjBD;;AAmBAR,MAAM,CAACC,OAAP,CAAeW,IAAf,GAAsB,CAACR,KAAD,EAAQxC,IAAR,EAAc+C,OAAd,KAA0B;AAC9C,MAAIP,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,UAAQ,OAAOA,KAAf;AACE,SAAK,QAAL;AACE,aAAQ,KAAIA,KAAK,CAACS,OAAN,CAAc,IAAd,EAAoB,MAApB,CAA4B,GAAxC;;AAEF,SAAK,QAAL;AACE,aAAOT,KAAP;;AAEF,SAAK,SAAL;AACE,aAAOA,KAAK,GAAG,CAAH,GAAO,CAAnB;;AAEF,SAAK,QAAL;AACE,UAAIA,KAAK,YAAY1B,IAArB,EAA2B;AACzB,YAAIoC,EAAE,GAAGV,KAAK,CAACW,kBAAN,KAA6B,IAAtC;;AACA,YAAIX,KAAK,CAACY,eAAN,IAAyB,IAA7B,EAAmC;AACjCF,UAAAA,EAAE,IAAIV,KAAK,CAACY,eAAZ;AACD;;AACD,cAAMzC,KAAK,GAAGoC,OAAO,CAACpC,KAAR,IAAiB,IAAjB,GAAwB,CAAxB,GAA4BoC,OAAO,CAACpC,KAAlD;;AAEA,YAAIA,KAAK,GAAG,CAAZ,EAAe;AACbuC,UAAAA,EAAE,GAAGT,MAAM,CAACS,EAAD,CAAN,CAAWG,MAAX,CAAkB,CAAlB,EAAqB1C,KAAK,GAAG,CAA7B,CAAL;AACD,SAFD,MAEO;AACLuC,UAAAA,EAAE,GAAG,EAAL;AACD;;AAED,eAAQ,KAAIV,KAAK,CAACc,cAAN,EAAuB,IAAGf,IAAI,CAACC,KAAK,CAACe,WAAN,KAAsB,CAAvB,CAA0B,IAAGhB,IAAI,CAACC,KAAK,CAACgB,UAAN,EAAD,CAAqB,IAAGjB,IAAI,CAACC,KAAK,CAACiB,WAAN,EAAD,CAAsB,IAAGlB,IAAI,CAACC,KAAK,CAACkB,aAAN,EAAD,CAAwB,IAAGnB,IAAI,CAACC,KAAK,CAACmB,aAAN,EAAD,CAAwB,GAAET,EAAG,GAAhM;AACD,OAdD,MAcO,IAAIU,MAAM,CAACC,QAAP,CAAgBrB,KAAhB,CAAJ,EAA4B;AACjC,eAAQ,KAAIA,KAAK,CAACsB,QAAN,CAAe,KAAf,CAAsB,EAAlC;AACD;;AAED,aAAO,IAAP;;AAEF;AACE,aAAO,IAAP;AAhCJ;AAkCD,CAvCD","sourcesContent":["'use strict'\r\nconst objectHasProperty = require('./utils').objectHasProperty\r\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\r\n\r\nconst TYPES = {\r\n  VarChar (length) {\r\n    return { type: TYPES.VarChar, length }\r\n  },\r\n  NVarChar (length) {\r\n    return { type: TYPES.NVarChar, length }\r\n  },\r\n  Text () {\r\n    return { type: TYPES.Text }\r\n  },\r\n  Int () {\r\n    return { type: TYPES.Int }\r\n  },\r\n  BigInt () {\r\n    return { type: TYPES.BigInt }\r\n  },\r\n  TinyInt () {\r\n    return { type: TYPES.TinyInt }\r\n  },\r\n  SmallInt () {\r\n    return { type: TYPES.SmallInt }\r\n  },\r\n  Bit () {\r\n    return { type: TYPES.Bit }\r\n  },\r\n  Float () {\r\n    return { type: TYPES.Float }\r\n  },\r\n  Numeric (precision, scale) {\r\n    return { type: TYPES.Numeric, precision, scale }\r\n  },\r\n  Decimal (precision, scale) {\r\n    return { type: TYPES.Decimal, precision, scale }\r\n  },\r\n  Real () {\r\n    return { type: TYPES.Real }\r\n  },\r\n  Date () {\r\n    return { type: TYPES.Date }\r\n  },\r\n  DateTime () {\r\n    return { type: TYPES.DateTime }\r\n  },\r\n  DateTime2 (scale) {\r\n    return { type: TYPES.DateTime2, scale }\r\n  },\r\n  DateTimeOffset (scale) {\r\n    return { type: TYPES.DateTimeOffset, scale }\r\n  },\r\n  SmallDateTime () {\r\n    return { type: TYPES.SmallDateTime }\r\n  },\r\n  Time (scale) {\r\n    return { type: TYPES.Time, scale }\r\n  },\r\n  UniqueIdentifier () {\r\n    return { type: TYPES.UniqueIdentifier }\r\n  },\r\n  SmallMoney () {\r\n    return { type: TYPES.SmallMoney }\r\n  },\r\n  Money () {\r\n    return { type: TYPES.Money }\r\n  },\r\n  Binary (length) {\r\n    return { type: TYPES.Binary, length }\r\n  },\r\n  VarBinary (length) {\r\n    return { type: TYPES.VarBinary, length }\r\n  },\r\n  Image () {\r\n    return { type: TYPES.Image }\r\n  },\r\n  Xml () {\r\n    return { type: TYPES.Xml }\r\n  },\r\n  Char (length) {\r\n    return { type: TYPES.Char, length }\r\n  },\r\n  NChar (length) {\r\n    return { type: TYPES.NChar, length }\r\n  },\r\n  NText () {\r\n    return { type: TYPES.NText }\r\n  },\r\n  TVP (tvpType) {\r\n    return { type: TYPES.TVP, tvpType }\r\n  },\r\n  UDT () {\r\n    return { type: TYPES.UDT }\r\n  },\r\n  Geography () {\r\n    return { type: TYPES.Geography }\r\n  },\r\n  Geometry () {\r\n    return { type: TYPES.Geometry }\r\n  },\r\n  Variant () {\r\n    return { type: TYPES.Variant }\r\n  }\r\n}\r\n\r\nmodule.exports.TYPES = TYPES\r\nmodule.exports.DECLARATIONS = {}\r\n\r\nconst zero = function (value, length) {\r\n  if (length == null) length = 2\r\n\r\n  value = String(value)\r\n  if (value.length < length) {\r\n    for (let i = 1; i <= length - value.length; i++) {\r\n      value = `0${value}`\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\nfor (const key in TYPES) {\r\n  if (objectHasProperty(TYPES, key)) {\r\n    const value = TYPES[key]\r\n    value.declaration = key.toLowerCase()\r\n    module.exports.DECLARATIONS[value.declaration] = value;\r\n\r\n    ((key, value) => {\r\n      value[inspect] = () => `[sql.${key}]`\r\n    })(key, value)\r\n  }\r\n}\r\n\r\nmodule.exports.declare = (type, options) => {\r\n  switch (type) {\r\n    case TYPES.VarChar: case TYPES.VarBinary:\r\n      return `${type.declaration} (${options.length > 8000 ? 'MAX' : (options.length == null ? 'MAX' : options.length)})`\r\n    case TYPES.NVarChar:\r\n      return `${type.declaration} (${options.length > 4000 ? 'MAX' : (options.length == null ? 'MAX' : options.length)})`\r\n    case TYPES.Char: case TYPES.NChar: case TYPES.Binary:\r\n      return `${type.declaration} (${options.length == null ? 1 : options.length})`\r\n    case TYPES.Decimal: case TYPES.Numeric:\r\n      return `${type.declaration} (${options.precision == null ? 18 : options.precision}, ${options.scale == null ? 0 : options.scale})`\r\n    case TYPES.Time: case TYPES.DateTime2: case TYPES.DateTimeOffset:\r\n      return `${type.declaration} (${options.scale == null ? 7 : options.scale})`\r\n    case TYPES.TVP:\r\n      return `${options.tvpType} readonly`\r\n    default:\r\n      return type.declaration\r\n  }\r\n}\r\n\r\nmodule.exports.cast = (value, type, options) => {\r\n  if (value == null) {\r\n    return null\r\n  }\r\n\r\n  switch (typeof value) {\r\n    case 'string':\r\n      return `N'${value.replace(/'/g, '\\'\\'')}'`\r\n\r\n    case 'number':\r\n      return value\r\n\r\n    case 'boolean':\r\n      return value ? 1 : 0\r\n\r\n    case 'object':\r\n      if (value instanceof Date) {\r\n        let ns = value.getUTCMilliseconds() / 1000\r\n        if (value.nanosecondDelta != null) {\r\n          ns += value.nanosecondDelta\r\n        }\r\n        const scale = options.scale == null ? 7 : options.scale\r\n\r\n        if (scale > 0) {\r\n          ns = String(ns).substr(1, scale + 1)\r\n        } else {\r\n          ns = ''\r\n        }\r\n\r\n        return `N'${value.getUTCFullYear()}-${zero(value.getUTCMonth() + 1)}-${zero(value.getUTCDate())} ${zero(value.getUTCHours())}:${zero(value.getUTCMinutes())}:${zero(value.getUTCSeconds())}${ns}'`\r\n      } else if (Buffer.isBuffer(value)) {\r\n        return `0x${value.toString('hex')}`\r\n      }\r\n\r\n      return null\r\n\r\n    default:\r\n      return null\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}