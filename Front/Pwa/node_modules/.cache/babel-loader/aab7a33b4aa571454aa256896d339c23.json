{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nvar Char = {\n  id: 0xAF,\n  type: 'BIGCHAR',\n  name: 'Char',\n  maximumLength: 8000,\n  declaration: function declaration(parameter) {\n    // const value = parameter.value as null | string | { toString(): string };\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    var length;\n\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.toString().length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    if (length < this.maximumLength) {\n      return 'char(' + length + ')';\n    } else {\n      return 'char(' + this.maximumLength + ')';\n    }\n  },\n  // ParameterData<any> is temporary solution. TODO: need to understand what type ParameterData<...> can be.\n  resolveLength: function resolveLength(parameter) {\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (value != null) {\n      if (Buffer.isBuffer(value)) {\n        return value.length || 1;\n      } else {\n        return value.toString().length || 1;\n      }\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter) {\n    var buffer = Buffer.alloc(8);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeUInt16LE(parameter.length, 1);\n    return buffer;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      return NULL_LENGTH;\n    }\n\n    var length = Buffer.byteLength(parameter.value.toString(), 'ascii');\n    var buffer = Buffer.alloc(2);\n    buffer.writeUInt16LE(length, 0);\n    return buffer;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parameter.value == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return Buffer.from(parameter.value, 'ascii');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        throw new TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = Char;\nexports.default = _default;\nmodule.exports = Char;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/data-types/char.js"],"names":["Object","defineProperty","exports","value","default","NULL_LENGTH","Buffer","from","Char","id","type","name","maximumLength","declaration","parameter","length","toString","output","resolveLength","isBuffer","generateTypeInfo","buffer","alloc","writeUInt8","writeUInt16LE","generateParameterLength","options","byteLength","generateParameterData","validate","TypeError","_default","module"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,IAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,CAAZ,CAApB;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,IADO;AAEXC,EAAAA,IAAI,EAAE,SAFK;AAGXC,EAAAA,IAAI,EAAE,MAHK;AAIXC,EAAAA,aAAa,EAAE,IAJJ;AAKXC,EAAAA,WAAW,EAAE,qBAAUC,SAAV,EAAqB;AAChC;AACA,QAAMX,KAAK,GAAGW,SAAS,CAACX,KAAxB,CAFgC,CAED;;AAE/B,QAAIY,MAAJ;;AAEA,QAAID,SAAS,CAACC,MAAd,EAAsB;AACpBA,MAAAA,MAAM,GAAGD,SAAS,CAACC,MAAnB;AACD,KAFD,MAEO,IAAIZ,KAAK,IAAI,IAAb,EAAmB;AACxBY,MAAAA,MAAM,GAAGZ,KAAK,CAACa,QAAN,GAAiBD,MAAjB,IAA2B,CAApC;AACD,KAFM,MAEA,IAAIZ,KAAK,KAAK,IAAV,IAAkB,CAACW,SAAS,CAACG,MAAjC,EAAyC;AAC9CF,MAAAA,MAAM,GAAG,CAAT;AACD,KAFM,MAEA;AACLA,MAAAA,MAAM,GAAG,KAAKH,aAAd;AACD;;AAED,QAAIG,MAAM,GAAG,KAAKH,aAAlB,EAAiC;AAC/B,aAAO,UAAUG,MAAV,GAAmB,GAA1B;AACD,KAFD,MAEO;AACL,aAAO,UAAU,KAAKH,aAAf,GAA+B,GAAtC;AACD;AACF,GA1BU;AA2BX;AACAM,EAAAA,aAAa,EAAE,uBAAUJ,SAAV,EAAqB;AAClC,QAAMX,KAAK,GAAGW,SAAS,CAACX,KAAxB,CADkC,CACH;;AAE/B,QAAIW,SAAS,CAACC,MAAV,IAAoB,IAAxB,EAA8B;AAC5B,aAAOD,SAAS,CAACC,MAAjB;AACD,KAFD,MAEO,IAAIZ,KAAK,IAAI,IAAb,EAAmB;AACxB,UAAIG,MAAM,CAACa,QAAP,CAAgBhB,KAAhB,CAAJ,EAA4B;AAC1B,eAAOA,KAAK,CAACY,MAAN,IAAgB,CAAvB;AACD,OAFD,MAEO;AACL,eAAOZ,KAAK,CAACa,QAAN,GAAiBD,MAAjB,IAA2B,CAAlC;AACD;AACF,KANM,MAMA;AACL,aAAO,KAAKH,aAAZ;AACD;AACF,GA1CU;AA4CXQ,EAAAA,gBA5CW,4BA4CMN,SA5CN,EA4CiB;AAC1B,QAAMO,MAAM,GAAGf,MAAM,CAACgB,KAAP,CAAa,CAAb,CAAf;AACAD,IAAAA,MAAM,CAACE,UAAP,CAAkB,KAAKd,EAAvB,EAA2B,CAA3B;AACAY,IAAAA,MAAM,CAACG,aAAP,CAAqBV,SAAS,CAACC,MAA/B,EAAuC,CAAvC;AACA,WAAOM,MAAP;AACD,GAjDU;AAmDXI,EAAAA,uBAnDW,mCAmDaX,SAnDb,EAmDwBY,OAnDxB,EAmDiC;AAC1C,QAAIZ,SAAS,CAACX,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,aAAOE,WAAP;AACD;;AAED,QAAMU,MAAM,GAAGT,MAAM,CAACqB,UAAP,CAAkBb,SAAS,CAACX,KAAV,CAAgBa,QAAhB,EAAlB,EAA8C,OAA9C,CAAf;AACA,QAAMK,MAAM,GAAGf,MAAM,CAACgB,KAAP,CAAa,CAAb,CAAf;AACAD,IAAAA,MAAM,CAACG,aAAP,CAAqBT,MAArB,EAA6B,CAA7B;AACA,WAAOM,MAAP;AACD,GA5DU;AA8DVO,EAAAA,qBA9DU,uEA8DYd,SA9DZ,EA8DuBY,OA9DvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBA+DLZ,SAAS,CAACX,KAAV,IAAmB,IA/Dd;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAmET,mBAAMG,MAAM,CAACC,IAAP,CAAYO,SAAS,CAACX,KAAtB,EAA6B,OAA7B,CAAN;;AAnES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsEX0B,EAAAA,QAAQ,EAAE,kBAAU1B,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI,OAAOA,KAAK,CAACa,QAAb,KAA0B,UAA9B,EAA0C;AACxC,cAAM,IAAIc,SAAJ,CAAc,iBAAd,CAAN;AACD;;AAED3B,MAAAA,KAAK,GAAGA,KAAK,CAACa,QAAN,EAAR;AACD;;AAED,WAAOb,KAAP;AACD;AApFU,CAAb;AAsFA,IAAI4B,QAAQ,GAAGvB,IAAf;AACAN,OAAO,CAACE,OAAR,GAAkB2B,QAAlB;AACAC,MAAM,CAAC9B,OAAP,GAAiBM,IAAjB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\r\nconst Char = {\r\n  id: 0xAF,\r\n  type: 'BIGCHAR',\r\n  name: 'Char',\r\n  maximumLength: 8000,\r\n  declaration: function (parameter) {\r\n    // const value = parameter.value as null | string | { toString(): string };\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    let length;\r\n\r\n    if (parameter.length) {\r\n      length = parameter.length;\r\n    } else if (value != null) {\r\n      length = value.toString().length || 1;\r\n    } else if (value === null && !parameter.output) {\r\n      length = 1;\r\n    } else {\r\n      length = this.maximumLength;\r\n    }\r\n\r\n    if (length < this.maximumLength) {\r\n      return 'char(' + length + ')';\r\n    } else {\r\n      return 'char(' + this.maximumLength + ')';\r\n    }\r\n  },\r\n  // ParameterData<any> is temporary solution. TODO: need to understand what type ParameterData<...> can be.\r\n  resolveLength: function (parameter) {\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    if (parameter.length != null) {\r\n      return parameter.length;\r\n    } else if (value != null) {\r\n      if (Buffer.isBuffer(value)) {\r\n        return value.length || 1;\r\n      } else {\r\n        return value.toString().length || 1;\r\n      }\r\n    } else {\r\n      return this.maximumLength;\r\n    }\r\n  },\r\n\r\n  generateTypeInfo(parameter) {\r\n    const buffer = Buffer.alloc(8);\r\n    buffer.writeUInt8(this.id, 0);\r\n    buffer.writeUInt16LE(parameter.length, 1);\r\n    return buffer;\r\n  },\r\n\r\n  generateParameterLength(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return NULL_LENGTH;\r\n    }\r\n\r\n    const length = Buffer.byteLength(parameter.value.toString(), 'ascii');\r\n    const buffer = Buffer.alloc(2);\r\n    buffer.writeUInt16LE(length, 0);\r\n    return buffer;\r\n  },\r\n\r\n  *generateParameterData(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return;\r\n    }\r\n\r\n    yield Buffer.from(parameter.value, 'ascii');\r\n  },\r\n\r\n  validate: function (value) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      if (typeof value.toString !== 'function') {\r\n        throw new TypeError('Invalid string.');\r\n      }\r\n\r\n      value = value.toString();\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\nvar _default = Char;\r\nexports.default = _default;\r\nmodule.exports = Char;"]},"metadata":{},"sourceType":"script"}