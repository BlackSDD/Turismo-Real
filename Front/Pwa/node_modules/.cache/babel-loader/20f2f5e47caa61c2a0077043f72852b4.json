{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar _valueParser = _interopRequireDefault(require(\"../value-parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // s2.2.7.17\n\n\nfunction rowParser(_x) {\n  return _rowParser.apply(this, arguments);\n}\n\nfunction _rowParser() {\n  _rowParser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(parser) {\n    var colMetadata, length, columns, i, currColMetadata, value, next, columnsMap;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            colMetadata = parser.colMetadata;\n            length = colMetadata.length;\n            columns = [];\n            i = 0;\n\n          case 4:\n            if (!(i < length)) {\n              _context.next = 20;\n              break;\n            }\n\n            currColMetadata = colMetadata[i];\n            value = void 0;\n            (0, _valueParser.default)(parser, currColMetadata, parser.options, function (v) {\n              value = v;\n            });\n\n          case 8:\n            if (!parser.suspended) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 11;\n            return parser.streamBuffer.waitForChunk();\n\n          case 11:\n            parser.suspended = false;\n            next = parser.next;\n            next();\n            _context.next = 8;\n            break;\n\n          case 16:\n            columns.push({\n              value: value,\n              metadata: currColMetadata\n            });\n\n          case 17:\n            i++;\n            _context.next = 4;\n            break;\n\n          case 20:\n            if (!parser.options.useColumnNames) {\n              _context.next = 26;\n              break;\n            }\n\n            columnsMap = {};\n            columns.forEach(function (column) {\n              var colName = column.metadata.colName;\n\n              if (columnsMap[colName] == null) {\n                columnsMap[colName] = column;\n              }\n            });\n            return _context.abrupt(\"return\", new _token.RowToken(columnsMap));\n\n          case 26:\n            return _context.abrupt(\"return\", new _token.RowToken(columns));\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _rowParser.apply(this, arguments);\n}\n\nvar _default = rowParser;\nexports.default = _default;\nmodule.exports = rowParser;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/token/row-token-parser.js"],"names":["Object","defineProperty","exports","value","default","_token","require","_valueParser","_interopRequireDefault","obj","__esModule","rowParser","parser","colMetadata","length","columns","i","currColMetadata","options","v","suspended","streamBuffer","waitForChunk","next","push","metadata","useColumnNames","columnsMap","forEach","column","colName","RowToken","_default","module"],"mappings":"AAAA;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACF,OAAO,CAAC,iBAAD,CAAR,CAAzC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD,C,CAE/F;;;SACeE,S;;;;;wEAAf,iBAAyBC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,WADR,GACsBD,MAAM,CAACC,WAD7B;AAEQC,YAAAA,MAFR,GAEiBD,WAAW,CAACC,MAF7B;AAGQC,YAAAA,OAHR,GAGkB,EAHlB;AAKWC,YAAAA,CALX,GAKe,CALf;;AAAA;AAAA,kBAKkBA,CAAC,GAAGF,MALtB;AAAA;AAAA;AAAA;;AAMUG,YAAAA,eANV,GAM4BJ,WAAW,CAACG,CAAD,CANvC;AAOQb,YAAAA,KAPR;AAQI,aAAC,GAAGI,YAAY,CAACH,OAAjB,EAA0BQ,MAA1B,EAAkCK,eAAlC,EAAmDL,MAAM,CAACM,OAA1D,EAAmE,UAAAC,CAAC,EAAI;AACtEhB,cAAAA,KAAK,GAAGgB,CAAR;AACD,aAFD;;AARJ;AAAA,iBAYWP,MAAM,CAACQ,SAZlB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAaYR,MAAM,CAACS,YAAP,CAAoBC,YAApB,EAbZ;;AAAA;AAcMV,YAAAA,MAAM,CAACQ,SAAP,GAAmB,KAAnB;AACMG,YAAAA,IAfZ,GAemBX,MAAM,CAACW,IAf1B;AAgBMA,YAAAA,IAAI;AAhBV;AAAA;;AAAA;AAmBIR,YAAAA,OAAO,CAACS,IAAR,CAAa;AACXrB,cAAAA,KAAK,EAALA,KADW;AAEXsB,cAAAA,QAAQ,EAAER;AAFC,aAAb;;AAnBJ;AAK8BD,YAAAA,CAAC,EAL/B;AAAA;AAAA;;AAAA;AAAA,iBAyBMJ,MAAM,CAACM,OAAP,CAAeQ,cAzBrB;AAAA;AAAA;AAAA;;AA0BUC,YAAAA,UA1BV,GA0BuB,EA1BvB;AA2BIZ,YAAAA,OAAO,CAACa,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,kBAAMC,OAAO,GAAGD,MAAM,CAACJ,QAAP,CAAgBK,OAAhC;;AAEA,kBAAIH,UAAU,CAACG,OAAD,CAAV,IAAuB,IAA3B,EAAiC;AAC/BH,gBAAAA,UAAU,CAACG,OAAD,CAAV,GAAsBD,MAAtB;AACD;AACF,aAND;AA3BJ,6CAkCW,IAAIxB,MAAM,CAAC0B,QAAX,CAAoBJ,UAApB,CAlCX;;AAAA;AAAA,6CAoCW,IAAItB,MAAM,CAAC0B,QAAX,CAAoBhB,OAApB,CApCX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAwCA,IAAIiB,QAAQ,GAAGrB,SAAf;AACAT,OAAO,CAACE,OAAR,GAAkB4B,QAAlB;AACAC,MAAM,CAAC/B,OAAP,GAAiBS,SAAjB","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _token = require(\"./token\");\r\n\r\nvar _valueParser = _interopRequireDefault(require(\"../value-parser\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n// s2.2.7.17\r\nasync function rowParser(parser) {\r\n  const colMetadata = parser.colMetadata;\r\n  const length = colMetadata.length;\r\n  const columns = [];\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    const currColMetadata = colMetadata[i];\r\n    let value;\r\n    (0, _valueParser.default)(parser, currColMetadata, parser.options, v => {\r\n      value = v;\r\n    });\r\n\r\n    while (parser.suspended) {\r\n      await parser.streamBuffer.waitForChunk();\r\n      parser.suspended = false;\r\n      const next = parser.next;\r\n      next();\r\n    }\r\n\r\n    columns.push({\r\n      value,\r\n      metadata: currColMetadata\r\n    });\r\n  }\r\n\r\n  if (parser.options.useColumnNames) {\r\n    const columnsMap = {};\r\n    columns.forEach(column => {\r\n      const colName = column.metadata.colName;\r\n\r\n      if (columnsMap[colName] == null) {\r\n        columnsMap[colName] = column;\r\n      }\r\n    });\r\n    return new _token.RowToken(columnsMap);\r\n  } else {\r\n    return new _token.RowToken(columns);\r\n  }\r\n}\r\n\r\nvar _default = rowParser;\r\nexports.default = _default;\r\nmodule.exports = rowParser;"]},"metadata":{},"sourceType":"script"}