{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar MAX = (1 << 16) - 1;\nvar UNKNOWN_PLP_LEN = Buffer.from([0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]);\nvar PLP_TERMINATOR = Buffer.from([0x00, 0x00, 0x00, 0x00]);\nvar NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\nvar MAX_NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\nvar VarChar = {\n  id: 0xA7,\n  type: 'BIGVARCHR',\n  name: 'VarChar',\n  maximumLength: 8000,\n  declaration: function declaration(parameter) {\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    var length;\n\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (value != null) {\n      length = value.toString().length || 1;\n    } else if (value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    if (length <= this.maximumLength) {\n      return 'varchar(' + length + ')';\n    } else {\n      return 'varchar(max)';\n    }\n  },\n  resolveLength: function resolveLength(parameter) {\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (value != null) {\n      if (Buffer.isBuffer(parameter.value)) {\n        return value.length || 1;\n      } else {\n        return value.toString().length || 1;\n      }\n    } else {\n      return this.maximumLength;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter) {\n    var buffer = Buffer.alloc(8);\n    buffer.writeUInt8(this.id, 0);\n\n    if (parameter.length <= this.maximumLength) {\n      buffer.writeUInt16LE(parameter.length, 1);\n    } else {\n      buffer.writeUInt16LE(MAX, 1);\n    }\n\n    return buffer;\n  },\n  generateParameterLength: function generateParameterLength(parameter, options) {\n    if (parameter.value == null) {\n      if (parameter.length <= this.maximumLength) {\n        return NULL_LENGTH;\n      } else {\n        return MAX_NULL_LENGTH;\n      }\n    }\n\n    var value = parameter.value;\n\n    if (parameter.length <= this.maximumLength) {\n      if (!Buffer.isBuffer(value)) {\n        value = value.toString();\n      }\n\n      var length = Buffer.byteLength(value, 'ascii');\n      var buffer = Buffer.alloc(2);\n      buffer.writeUInt16LE(length, 0);\n      return buffer;\n    } else {\n      return UNKNOWN_PLP_LEN;\n    }\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var value, length, buffer;\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parameter.value == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            value = parameter.value;\n\n            if (!Buffer.isBuffer(value)) {\n              value = value.toString();\n            }\n\n            if (!(parameter.length <= this.maximumLength)) {\n              _context.next = 14;\n              break;\n            }\n\n            if (!Buffer.isBuffer(value)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 8;\n            return value;\n\n          case 8:\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.next = 12;\n            return Buffer.from(value, 'ascii');\n\n          case 12:\n            _context.next = 29;\n            break;\n\n          case 14:\n            length = Buffer.byteLength(value, 'ascii');\n\n            if (!(length > 0)) {\n              _context.next = 27;\n              break;\n            }\n\n            buffer = Buffer.alloc(4);\n            buffer.writeUInt32LE(length, 0);\n            _context.next = 20;\n            return buffer;\n\n          case 20:\n            if (!Buffer.isBuffer(value)) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 23;\n            return value;\n\n          case 23:\n            _context.next = 27;\n            break;\n\n          case 25:\n            _context.next = 27;\n            return Buffer.from(value, 'ascii');\n\n          case 27:\n            _context.next = 29;\n            return PLP_TERMINATOR;\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData, this);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        throw new TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = VarChar;\nexports.default = _default;\nmodule.exports = VarChar;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/node_modules/tedious/lib/data-types/varchar.js"],"names":["Object","defineProperty","exports","value","default","MAX","UNKNOWN_PLP_LEN","Buffer","from","PLP_TERMINATOR","NULL_LENGTH","MAX_NULL_LENGTH","VarChar","id","type","name","maximumLength","declaration","parameter","length","toString","output","resolveLength","isBuffer","generateTypeInfo","buffer","alloc","writeUInt8","writeUInt16LE","generateParameterLength","options","byteLength","generateParameterData","writeUInt32LE","validate","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\nconst MAX = (1 << 16) - 1;\r\nconst UNKNOWN_PLP_LEN = Buffer.from([0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]);\r\nconst PLP_TERMINATOR = Buffer.from([0x00, 0x00, 0x00, 0x00]);\r\nconst NULL_LENGTH = Buffer.from([0xFF, 0xFF]);\r\nconst MAX_NULL_LENGTH = Buffer.from([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]);\r\nconst VarChar = {\r\n  id: 0xA7,\r\n  type: 'BIGVARCHR',\r\n  name: 'VarChar',\r\n  maximumLength: 8000,\r\n  declaration: function (parameter) {\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    let length;\r\n\r\n    if (parameter.length) {\r\n      length = parameter.length;\r\n    } else if (value != null) {\r\n      length = value.toString().length || 1;\r\n    } else if (value === null && !parameter.output) {\r\n      length = 1;\r\n    } else {\r\n      length = this.maximumLength;\r\n    }\r\n\r\n    if (length <= this.maximumLength) {\r\n      return 'varchar(' + length + ')';\r\n    } else {\r\n      return 'varchar(max)';\r\n    }\r\n  },\r\n  resolveLength: function (parameter) {\r\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\r\n\r\n    if (parameter.length != null) {\r\n      return parameter.length;\r\n    } else if (value != null) {\r\n      if (Buffer.isBuffer(parameter.value)) {\r\n        return value.length || 1;\r\n      } else {\r\n        return value.toString().length || 1;\r\n      }\r\n    } else {\r\n      return this.maximumLength;\r\n    }\r\n  },\r\n\r\n  generateTypeInfo(parameter) {\r\n    const buffer = Buffer.alloc(8);\r\n    buffer.writeUInt8(this.id, 0);\r\n\r\n    if (parameter.length <= this.maximumLength) {\r\n      buffer.writeUInt16LE(parameter.length, 1);\r\n    } else {\r\n      buffer.writeUInt16LE(MAX, 1);\r\n    }\r\n\r\n    return buffer;\r\n  },\r\n\r\n  generateParameterLength(parameter, options) {\r\n    if (parameter.value == null) {\r\n      if (parameter.length <= this.maximumLength) {\r\n        return NULL_LENGTH;\r\n      } else {\r\n        return MAX_NULL_LENGTH;\r\n      }\r\n    }\r\n\r\n    let value = parameter.value;\r\n\r\n    if (parameter.length <= this.maximumLength) {\r\n      if (!Buffer.isBuffer(value)) {\r\n        value = value.toString();\r\n      }\r\n\r\n      const length = Buffer.byteLength(value, 'ascii');\r\n      const buffer = Buffer.alloc(2);\r\n      buffer.writeUInt16LE(length, 0);\r\n      return buffer;\r\n    } else {\r\n      return UNKNOWN_PLP_LEN;\r\n    }\r\n  },\r\n\r\n  *generateParameterData(parameter, options) {\r\n    if (parameter.value == null) {\r\n      return;\r\n    }\r\n\r\n    let value = parameter.value;\r\n\r\n    if (!Buffer.isBuffer(value)) {\r\n      value = value.toString();\r\n    }\r\n\r\n    if (parameter.length <= this.maximumLength) {\r\n      if (Buffer.isBuffer(value)) {\r\n        yield value;\r\n      } else {\r\n        yield Buffer.from(value, 'ascii');\r\n      }\r\n    } else {\r\n      const length = Buffer.byteLength(value, 'ascii');\r\n\r\n      if (length > 0) {\r\n        const buffer = Buffer.alloc(4);\r\n        buffer.writeUInt32LE(length, 0);\r\n        yield buffer;\r\n\r\n        if (Buffer.isBuffer(value)) {\r\n          yield value;\r\n        } else {\r\n          yield Buffer.from(value, 'ascii');\r\n        }\r\n      }\r\n\r\n      yield PLP_TERMINATOR;\r\n    }\r\n  },\r\n\r\n  validate: function (value) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      if (typeof value.toString !== 'function') {\r\n        throw new TypeError('Invalid string.');\r\n      }\r\n\r\n      value = value.toString();\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\nvar _default = VarChar;\r\nexports.default = _default;\r\nmodule.exports = VarChar;"]},"metadata":{},"sourceType":"script"}