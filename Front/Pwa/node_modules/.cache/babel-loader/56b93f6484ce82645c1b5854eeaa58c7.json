{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar debug = require('debug')('mssql:tedi');\n\nvar BaseTransaction = require('../base/transaction');\n\nvar _require = require('../utils'),\n    IDS = _require.IDS;\n\nvar TransactionError = require('../error/transaction-error');\n\nvar Transaction = /*#__PURE__*/function (_BaseTransaction) {\n  _inherits(Transaction, _BaseTransaction);\n\n  var _super = _createSuper(Transaction);\n\n  function Transaction(parent) {\n    var _this;\n\n    _classCallCheck(this, Transaction);\n\n    _this = _super.call(this, parent);\n\n    _this._abort = function () {\n      if (!_this._rollbackRequested) {\n        // transaction interrupted because of XACT_ABORT\n        var pc = _this._acquiredConnection; // defer releasing so connection can switch from SentClientRequest to LoggedIn state\n\n        setImmediate(_this.parent.release.bind(_this.parent), pc);\n\n        _this._acquiredConnection.removeListener('rollbackTransaction', _this._abort);\n\n        _this._acquiredConnection = null;\n        _this._acquiredConfig = null;\n        _this._aborted = true;\n\n        _this.emit('rollback', true);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Transaction, [{\n    key: \"_begin\",\n    value: function _begin(isolationLevel, callback) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(Transaction.prototype), \"_begin\", this).call(this, isolationLevel, function (err) {\n        if (err) return callback(err);\n        debug('transaction(%d): begin', IDS.get(_this2));\n\n        _this2.parent.acquire(_this2, function (err, connection, config) {\n          if (err) return callback(err);\n          _this2._acquiredConnection = connection;\n\n          _this2._acquiredConnection.on('rollbackTransaction', _this2._abort);\n\n          _this2._acquiredConfig = config;\n          connection.beginTransaction(function (err) {\n            if (err) err = new TransactionError(err);\n            debug('transaction(%d): begun', IDS.get(_this2));\n            callback(err);\n          }, _this2.name, _this2.isolationLevel);\n        });\n      });\n    }\n  }, {\n    key: \"_commit\",\n    value: function _commit(callback) {\n      var _this3 = this;\n\n      _get(_getPrototypeOf(Transaction.prototype), \"_commit\", this).call(this, function (err) {\n        if (err) return callback(err);\n        debug('transaction(%d): commit', IDS.get(_this3));\n\n        _this3._acquiredConnection.commitTransaction(function (err) {\n          if (err) err = new TransactionError(err);\n\n          _this3._acquiredConnection.removeListener('rollbackTransaction', _this3._abort);\n\n          _this3.parent.release(_this3._acquiredConnection);\n\n          _this3._acquiredConnection = null;\n          _this3._acquiredConfig = null;\n          if (!err) debug('transaction(%d): commited', IDS.get(_this3));\n          callback(err);\n        });\n      });\n    }\n  }, {\n    key: \"_rollback\",\n    value: function _rollback(callback) {\n      var _this4 = this;\n\n      _get(_getPrototypeOf(Transaction.prototype), \"_rollback\", this).call(this, function (err) {\n        if (err) return callback(err);\n        debug('transaction(%d): rollback', IDS.get(_this4));\n\n        _this4._acquiredConnection.rollbackTransaction(function (err) {\n          if (err) err = new TransactionError(err);\n\n          _this4._acquiredConnection.removeListener('rollbackTransaction', _this4._abort);\n\n          _this4.parent.release(_this4._acquiredConnection);\n\n          _this4._acquiredConnection = null;\n          _this4._acquiredConfig = null;\n          if (!err) debug('transaction(%d): rolled back', IDS.get(_this4));\n          callback(err);\n        });\n      });\n    }\n  }]);\n\n  return Transaction;\n}(BaseTransaction);\n\nmodule.exports = Transaction;","map":{"version":3,"sources":["C:/Users/jesus/Documents/GitHub/Turismo-Real/Front/Pwa/node_modules/mssql/lib/tedious/transaction.js"],"names":["debug","require","BaseTransaction","IDS","TransactionError","Transaction","parent","_abort","_rollbackRequested","pc","_acquiredConnection","setImmediate","release","bind","removeListener","_acquiredConfig","_aborted","emit","isolationLevel","callback","err","get","acquire","connection","config","on","beginTransaction","name","commitTransaction","rollbackTransaction","module","exports"],"mappings":"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","sourcesContent":["'use strict'\r\n\r\nconst debug = require('debug')('mssql:tedi')\r\nconst BaseTransaction = require('../base/transaction')\r\nconst { IDS } = require('../utils')\r\nconst TransactionError = require('../error/transaction-error')\r\n\r\nclass Transaction extends BaseTransaction {\r\n  constructor (parent) {\r\n    super(parent)\r\n\r\n    this._abort = () => {\r\n      if (!this._rollbackRequested) {\r\n        // transaction interrupted because of XACT_ABORT\r\n\r\n        const pc = this._acquiredConnection\r\n\r\n        // defer releasing so connection can switch from SentClientRequest to LoggedIn state\r\n        setImmediate(this.parent.release.bind(this.parent), pc)\r\n\r\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort)\r\n        this._acquiredConnection = null\r\n        this._acquiredConfig = null\r\n        this._aborted = true\r\n\r\n        this.emit('rollback', true)\r\n      }\r\n    }\r\n  }\r\n\r\n  _begin (isolationLevel, callback) {\r\n    super._begin(isolationLevel, err => {\r\n      if (err) return callback(err)\r\n\r\n      debug('transaction(%d): begin', IDS.get(this))\r\n\r\n      this.parent.acquire(this, (err, connection, config) => {\r\n        if (err) return callback(err)\r\n\r\n        this._acquiredConnection = connection\r\n        this._acquiredConnection.on('rollbackTransaction', this._abort)\r\n        this._acquiredConfig = config\r\n\r\n        connection.beginTransaction(err => {\r\n          if (err) err = new TransactionError(err)\r\n\r\n          debug('transaction(%d): begun', IDS.get(this))\r\n\r\n          callback(err)\r\n        }, this.name, this.isolationLevel)\r\n      })\r\n    })\r\n  }\r\n\r\n  _commit (callback) {\r\n    super._commit(err => {\r\n      if (err) return callback(err)\r\n\r\n      debug('transaction(%d): commit', IDS.get(this))\r\n\r\n      this._acquiredConnection.commitTransaction(err => {\r\n        if (err) err = new TransactionError(err)\r\n\r\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort)\r\n        this.parent.release(this._acquiredConnection)\r\n        this._acquiredConnection = null\r\n        this._acquiredConfig = null\r\n\r\n        if (!err) debug('transaction(%d): commited', IDS.get(this))\r\n\r\n        callback(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  _rollback (callback) {\r\n    super._rollback(err => {\r\n      if (err) return callback(err)\r\n\r\n      debug('transaction(%d): rollback', IDS.get(this))\r\n\r\n      this._acquiredConnection.rollbackTransaction(err => {\r\n        if (err) err = new TransactionError(err)\r\n\r\n        this._acquiredConnection.removeListener('rollbackTransaction', this._abort)\r\n        this.parent.release(this._acquiredConnection)\r\n        this._acquiredConnection = null\r\n        this._acquiredConfig = null\r\n\r\n        if (!err) debug('transaction(%d): rolled back', IDS.get(this))\r\n\r\n        callback(err)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nmodule.exports = Transaction\r\n"]},"metadata":{},"sourceType":"script"}